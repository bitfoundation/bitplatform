using BitChangeSetManager.Model;
using System;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Security.Cryptography;
using System.Text;
using Bit.Core.Contracts;
using System.Collections.Generic;
using BitChangeSetManager.DataAccess.Contracts;
using Bit.Core.Models;

namespace BitChangeSetManager.DataAccess.Implementations
{
    public class BitChangeSetManagerInitialData : IAppEvents
    {
        public virtual AppEnvironment AppEnvironment { get; set; }
        public virtual IDateTimeProvider DateTimeProvider { get; set; }
        public virtual IDependencyManager DependencyManager { get; set; }

        public void OnAppEnd()
        {

        }

        public void OnAppStartup()
        {
            Database.SetInitializer<BitChangeSetManagerDbContext>(null);

            using (SqlConnection dbConnection = new SqlConnection(AppEnvironment.GetConfig<string>("BitChangeSetManagerDbConnectionString")))
            {
                using (BitChangeSetManagerDbContext dbContext = new BitChangeSetManagerDbContext(dbConnection))
                {
                    bool newDbCreated = dbContext.Database.CreateIfNotExists();

                    dbContext.Database.Initialize(force: true);

                    if (newDbCreated == false)
                        return;
                }
            }

            DependencyManager.TransactionAction("InitialData", async childResolver =>
            {
                IBitChangeSetManagerRepository<User> usersRepository = childResolver.Resolve<IBitChangeSetManagerRepository<User>>();

                string password = "test";

                using (MD5 md5Hash = MD5.Create())
                {
                    byte[] data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(password));

                    StringBuilder sBuilder = new StringBuilder();

                    foreach (byte d in data)
                    {
                        sBuilder.Append(d.ToString("x2"));
                    }

                    password = sBuilder.ToString();
                }

                byte[] userAvatar = Convert.FromBase64String("");

                usersRepository.Add(new User { UserName = "Test1", Password = password, Culture = BitCulture.EnUs, AvatarImage = userAvatar });
                usersRepository.Add(new User { UserName = "Test2", Password = password, Culture = BitCulture.FaIr, AvatarImage = userAvatar });
                usersRepository.Add(new User { UserName = "Test3", Password = password, Culture = BitCulture.EnUs, AvatarImage = userAvatar });
                usersRepository.Add(new User { UserName = "Test4", Password = password, Culture = BitCulture.FaIr, AvatarImage = userAvatar });

                IBitChangeSetManagerRepository<Customer> customersRepository = childResolver.Resolve<IBitChangeSetManagerRepository<Customer>>();
                IBitChangeSetManagerRepository<Delivery> deliveriesRepository = childResolver.Resolve<IBitChangeSetManagerRepository<Delivery>>();
                IBitChangeSetManagerRepository<ChangeSet> changeSetsRepository = childResolver.Resolve<IBitChangeSetManagerRepository<ChangeSet>>();
                IBitChangeSetManagerRepository<ChangeSetSeverity> changeSetSeveritiesRepository = childResolver.Resolve<IBitChangeSetManagerRepository<ChangeSetSeverity>>();
                IBitChangeSetManagerRepository<ChangeSetDeliveryRequirement> changeSetDeliveryRequirementsRepository = childResolver.Resolve<IBitChangeSetManagerRepository<ChangeSetDeliveryRequirement>>();
                IBitChangeSetManagerRepository<Province> provincesRepository = childResolver.Resolve<IBitChangeSetManagerRepository<Province>>();
                IBitChangeSetManagerRepository<City> citiesRepository = childResolver.Resolve<IBitChangeSetManagerRepository<City>>();
                IBitChangeSetManagerRepository<Constant> constantsRepository = childResolver.Resolve<IBitChangeSetManagerRepository<Constant>>();

                Customer customer1 = new Customer { Name = "Customer1" };
                Customer customer2 = new Customer { Name = "Customer2" };

                await customersRepository.AddRangeAsync(new[] { customer1, customer2 }, default);

                ChangeSetDeliveryRequirement changeSetDeliveryRequirement1 = new ChangeSetDeliveryRequirement { Title = "Deliver to all developers" };
                ChangeSetDeliveryRequirement changeSetDeliveryRequirement2 = new ChangeSetDeliveryRequirement { Title = "Deliver to technical manager" };
                ChangeSetDeliveryRequirement changeSetDeliveryRequirement3 = new ChangeSetDeliveryRequirement { Title = "No specific delivery is required" };

                await changeSetDeliveryRequirementsRepository.AddRangeAsync(new[] { changeSetDeliveryRequirement1, changeSetDeliveryRequirement2, changeSetDeliveryRequirement3 }, default);

                ChangeSetSeverity changeSetSeverity1 = new ChangeSetSeverity { Title = "Low" };
                ChangeSetSeverity changeSetSeverity2 = new ChangeSetSeverity { Title = "Medium" };
                ChangeSetSeverity changeSetSeverity3 = new ChangeSetSeverity { Title = "High" };

                await changeSetSeveritiesRepository.AddRangeAsync(new[] { changeSetSeverity1, changeSetSeverity2, changeSetSeverity3 }, default);

                ChangeSet changeSet1 = new ChangeSet { AssociatedCommitUrl = "https://github.com/bitfoundation/bitframework", Description = "Desc1", Title = "ChangeSet1", DeliveryRequirementId = changeSetDeliveryRequirement1.Id, SeverityId = changeSetSeverity3.Id };
                ChangeSet changeSet2 = new ChangeSet { AssociatedCommitUrl = "https://github.com/bitfoundation/bitframework", Description = "Desc2", Title = "ChangeSet2", DeliveryRequirementId = changeSetDeliveryRequirement1.Id, SeverityId = changeSetSeverity3.Id };

                await changeSetsRepository.AddRangeAsync(new[] { changeSet1, changeSet2 }, default);

                Delivery delivery1 = new Delivery { ChangeSetId = changeSet1.Id, CustomerId = customer1.Id, DeliveredOn = DateTimeProvider.GetCurrentUtcDateTime() };
                Delivery delivery2 = new Delivery { ChangeSetId = changeSet1.Id, CustomerId = customer2.Id, DeliveredOn = DateTimeProvider.GetCurrentUtcDateTime() };
                Delivery delivery3 = new Delivery { ChangeSetId = changeSet2.Id, CustomerId = customer1.Id, DeliveredOn = DateTimeProvider.GetCurrentUtcDateTime() };

                await deliveriesRepository.AddRangeAsync(new[] { delivery1, delivery2, delivery3 }, default);

                Province province1 = new Province { Name = "Province1" };
                Province province2 = new Province { Name = "Province2" };
                Province province3 = new Province { Name = "Province3" };

                await provincesRepository.AddRangeAsync(new[] { province1, province2, province3 }, default);

                List<City> cities = new List<City>();

                int num = 1;

                foreach (Province province in new[] { province1, province2, province3 })
                {
                    for (int i = 0; i < 100; i++)
                    {
                        cities.Add(new City { Name = $"City{num}{i}", ProvinceId = province.Id });
                    }

                    num++;
                }

                await citiesRepository.AddRangeAsync(cities, default);

                await constantsRepository.AddRangeAsync(new[]
                {
                    new Constant { Name = "Ans_Yes", Title = "Yes" },
                    new Constant { Name = "Ans_No", Title = "No" },
                    new Constant { Name = "Gender_Man", Title = "Man" },
                    new Constant { Name = "Gender_Woman", Title = "Woman" },
                    new Constant { Name = "Gender_Other", Title = "Other" }
                }, default);

            }).GetAwaiter().GetResult();
        }
    }
}