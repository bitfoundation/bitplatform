<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Bit.CSharpClientSample.Views.LoginView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:bit="https://bitframework.com"
    xmlns:view="clr-namespace:Bit.CSharpClientSample.Views"
    xmlns:vm="clr-namespace:Bit.CSharpClientSample.ViewModels"
    x:DataType="vm:LoginViewModel"
    NavigationPage.HasNavigationBar="False">
    <StackLayout>
        <Entry
            ReturnCommand="{bit:GoToNextViewCommand Next={x:Reference Password}}"
            ReturnType="Next"
            Text="{Binding UserName}" />
        <Entry x:Name="Password" Text="{Binding Password}" />
        <Button
            Command="{Binding LoginUsingCredentialsCommand}"
            FontAttributes="None"
            Text="Login using credentials" />
        <Button Command="{Binding LoginUsingBrowserCommand}" Text="Login using Browser" />
        <Button Command="{Binding LoginUsingGooglePlusCommand}" Text="Login using Google" />
        <Button
            Command="{Binding SkipCommand}"
            Style="{StaticResource DangerButton}"
            Text="Skip" />

        <Button Text="Multi converter test 1">
            <Button.IsVisible>
                <MultiBinding Converter="{view:TestMultiValueConverter1}">
                    <Binding Path="UserName" />
                    <Binding Path="Password" />
                </MultiBinding>
            </Button.IsVisible>
        </Button>

        <Button Text="Multi converter test 2">
            <Button.IsVisible>
                <MultiBinding Converter="{view:TestMultiValueConverter2}">
                    <Binding Path="UserName" />
                    <Binding Path="Password" />
                </MultiBinding>
            </Button.IsVisible>
        </Button>

        <Button x:Name="Test" Text="UI Tests" />

    </StackLayout>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroupList>
            <VisualStateGroup>
                <VisualState x:Name="Portrait">
                    <VisualState.StateTriggers>
                        <OrientationStateTrigger Orientation="Portrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="LightGreen" />
                        <Setter TargetName="Test" Property="BackgroundColor" Value="LightGreen" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Landscape">
                    <VisualState.StateTriggers>
                        <OrientationStateTrigger Orientation="Landscape" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="LightBlue" />
                        <Setter TargetName="Test" Property="BackgroundColor" Value="LightBlue" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MinWindowWidth600">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter TargetName="Test" Property="IsVisible" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MinWindowWidth1200">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter TargetName="Test" Property="IsVisible" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateGroupList>
    </VisualStateManager.VisualStateGroups>
</ContentPage>
