@namespace Bit.Client.Web.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     aria-label="@AriaLabel"
     aria-readonly=@(IsReadOnly ? "true" : null)
     class="@ClassBuilder.Value"
     id="@($"Rating{@UniqueId}")"
     role=@(!IsReadOnly ? "radiogroup" : null)
     style="@StyleBuilder.Value">

    @for (int item = 1; item <= Max; item++)
    {
        var index = item;
        var percentage = GetPercentageOf(index);

        <button aria-checked="@(index == Rating ? "true" : "false")"
                aria-hidden=@(IsReadOnly ? "true" : null)
                data-is-current="@(index + 1 == Rating ? "true" : null)"
                disabled=@(!IsEnabled|| IsReadOnly)
                id="@($"Rating{UniqueId}-star-{index}")"
                role="radio"
                tabindex=@(IsReadOnly ? "0" : "-1" )
                type="button"
                @onclick="() => HandleClick(index )">

            <span id="@($"RatingLabel{UniqueId}-{index }"))">@(AriaLabelFormat.HasValue() ? string.Format(AriaLabelFormat!, index , Max) : string.Empty)</span>
            <div>
                <i aria-hidden="true"
                   class="@($" bit-icon bit-icon--{(percentage == 100 ? Icon : UnselectedIcon).GetName()} {(IsEnabled ? "ratingStar-back":"ratingStar-back--disabled"  )}")"></i>
                @if (IsEnabled)
                {
                    <i aria-hidden="true"
                       class="@($"bit-icon bit-icon--{(percentage > 0 ? Icon : UnselectedIcon).GetName()} ratingStar-front") "
                       Style=@($"width:{percentage}%;")>
                    </i>
                }
            </div>
        </button>
    }
</div>
