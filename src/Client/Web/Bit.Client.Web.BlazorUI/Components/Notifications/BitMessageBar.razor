@namespace Bit.Client.Web.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     aria-describedby="@GetAriaDescribedby"
     role="@GetRootElementRole">

    @if (IsMultiline)
    {
        <div class=@($"{RootElementClass}-multiline")>
            <div class=@($"{RootElementClass}-content")>

                <div class=@($"{RootElementClass}-icon") aria-hidden="true">
                    <i class=@($"bit-icon bit-icon--{messageBarIcon.GetName()}")></i>
                </div>

                <div class=@($"{RootElementClass}-text")
                     id="@LabelId"
                     role="@(Role is not null ? Role : GetTextRole())"
                     aria-live="@GetAnnouncementPriority()">
                    <span class=@($"{RootElementClass}-innertext")>
                        <span>
                            @ChildContent
                        </span>
                    </span>
                </div>

                @*DismissSingleLine*@
                @if (HasDismiss)
                {
                    <div class=@($"{RootElementClass}-dismiss")>
                        <button @onclick="@OnDismiss"
                                type="button"
                                title="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)"
                                aria-label="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)">
                            <span>
                                <i class="bit-icon bit-icon--@DismissIconName.GetName()" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                }
            </div>
            @if (Actions is not null)
            {
                <div class=@($"{RootElementClass}-actions")>@Actions</div>
            }
        </div>
    }
    else
    {
        <div class=@($"{RootElementClass}-singleline")>
            <div class=@($"{RootElementClass}-content")>

                @*Icon*@
                <div class=@($"{RootElementClass}-icon") aria-hidden="true">
                    <i class=@($"bit-icon bit-icon--{messageBarIcon}")></i>
                </div>

                @*ChildContent*@
                <div class=@($"{RootElementClass}-text {(ExpandSingleLine ? $"{RootElementClass}-open": "")}")
                     id="@LabelId"
                     role="@(Role is not null ? Role : GetTextRole())"
                     aria-live="@GetAnnouncementPriority()">
                    <span class=@($"{RootElementClass}-innertext")>
                        <span>
                            @ChildContent
                        </span>
                    </span>
                </div>

                @*Action*@
                @if (Actions is not null)
                {
                    <div class=@($"{RootElementClass}-actions")>@Actions</div>
                }

                @*ExpandSingleLine*@
                else if (Truncated)
                {
                    <div class=@($"{RootElementClass}-truncate")>
                        <button @onclick="@ToggleExpandSingleLine"
                                aria-label="@(OverflowButtonAriaLabel.HasValue()? OverflowButtonAriaLabel : null)"
                                aria-expanded="@(ExpandSingleLine ? "true" : "false")">
                            <i class=@($"bit-icon bit-icon--{(ExpandSingleLine ? BitIcon.DoubleChevronUp : BitIcon.DoubleChevronDown).GetName()}") aria-hidden="true"></i>
                        </button>
                    </div>
                }

                @*DismissSingleLine*@
                @if (HasDismiss)
                {
                    <div class=@($"{RootElementClass}-dismiss")>
                        <button onclick=@OnDismiss
                                title="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)"
                                aria-label="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)">
                            <span>
                                <i class="bit-icon bit-icon--@DismissIconName.GetName()" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                }
            </div>
        </div>
    }
</div>