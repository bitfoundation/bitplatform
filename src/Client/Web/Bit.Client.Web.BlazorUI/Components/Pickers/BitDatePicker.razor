@namespace Bit.Client.Web.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     id="@UniqueId.ToString()">
    <div class="bit-dtp-wrapper"
         aria-owns="@(IsOpen ? CalloutId : null)"
         @onclick="HandleClick">
        <BitTextField Class="@(AllowTextInput ? "editable-input" : "")"
                      IsEnabled="IsEnabled"
                      role="combobox"
                      Label="@Label"
                      aria-expanded="@(IsOpen ? "true" : "false")"
                      AriaLabel="@AriaLabel"
                      aria-haspopup="dialog"
                      aria-controls="@(IsOpen ? CalloutId : null)"
                      Placeholder="@Placeholder"
                      HasBorder="@HasBorder"
                      IsUnderlined="@IsUnderlined"
                      tabindex="@TabIndex"
                      IsReadonly="@(!AllowTextInput)"
                      IconName="CalendarMirrored"
                      IsMultiline="false"
                      OnFocusIn="HandleFocusIn"
                      OnFocusOut="HandleFocusOut"
                      @bind-Value="@selectedDate">
        </BitTextField>
    </div>
    @if (IsOpen)
    {
        <div class="bit-dtp-overlay"
         @onclick="CloseCallout"></div>

        <div class="bit-dtp-callout">
            <div class="bit-dtp-callout-main" role="dialog">
                <div aria-hidden="true" tabindex="0" data-is-visible="true" style="pointer-events: none; position: fixed;"></div>
                <div class="bit-dtp-group"
                 role="group"
                 aria-label="">
                    <div aria-live="polite" aria-atomic="true">Selected date @selectedDate</div>
                    <div class="day-picker-wrapper">
                        <div class="picker-header">
                            @if (ShowMonthPickerAsOverlay)
                            {
                                <button class="month-and-year" aria-label="@($"{monthTitle}, change month")"
                                aria-live="polite" aria-atomic="true" tabindex="0" type="button">
                                    <span id="@MonthAndYearId">@monthTitle</span>
                                </button>
                            }
                            else
                            {
                                <div class="month-and-year"
                             aria-live="polite" aria-atomic="true" tabindex="-1">
                                    <span id="@MonthAndYearId">@monthTitle</span>
                                </div>
                            }
                            <div class="month-change-btn-group">
                                <button class="header-icon-btn"
                                    title="@($"Go to previous month")"
                                    aria-disabled="false"
                                    @onclick="() => HandleMonthChange(false)">
                                    <i class="bit-icon" aria-hidden="true"></i>
                                </button>
                                <button class="header-icon-btn"
                                    title="@($"Go to next month")"
                                    aria-disabled="false"
                                    @onclick="() => HandleMonthChange(true)">
                                    <i class="bit-icon" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <table role="grid"
                           aria-readonly="true"
                           aria-multiselectable="false"
                           aria-labelledby="@MonthAndYearId"
                           aria-activedescendant="@ActiveDescendantId">
                            <tbody>
                                <tr>
                                    @if (CalendarType is BitCalendarType.Gregorian)
                                    {
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Sunday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Sunday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Monday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Monday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Tuesday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Tuesday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Wednesday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Wednesday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Thursday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Thursday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Friday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Friday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Saturday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Saturday)[0]
                                        </th>
                                    }
                                    else if (CalendarType is BitCalendarType.Persian)
                                    {
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Saturday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Saturday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Sunday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Sunday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Monday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Monday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Tuesday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Tuesday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Wednesday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Wednesday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Thursday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Thursday)[0]
                                        </th>
                                        <th scope="col"
                                    title="@calendar?.GetDayOfWeekName(DayOfWeek.Friday)">
                                            @calendar?.GetDayOfWeekName(DayOfWeek.Friday)[0]
                                        </th>
                                    }
                                </tr>
                                @for (var week = 0; week < 6; week++)
                                {
                                    @*if (monthWeeks[week, 0] == 0)
                                        {
                                        week = 0;
                                        break;
                                        }*@
                                    <tr>
                                        @for (var day = 0; day < 7; day++)
                                        {
                                            var localWeek = week;
                                            var localDay = day;
                                            <td class="@GetDateElClass(localDay,localWeek)"
                                    @onclick="() => HandleDateChoose(localDay, monthWeeks[localWeek, localDay], currentMonth)">
                                                <button>
                                                    <span>@monthWeeks[localWeek, localDay]</span>
                                                </button>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="divider"></div>
                </div>
                <div aria-hidden="true" tabindex="0" style="pointer-events: none; position: fixed;"></div>
            </div>
        </div>
    }
</div>

@*@{
    bool currentmonthisstarted = false;
    bool currentmonthisfinished = false;
    @for (int weekindex = 0;
    weekindex < monthweeks.getlength(0);
    weekindex++)
    {
        //if (monthweeks[weekindex, 0] == 0)
        //{
        //    weekindex = 0;
        //    break;
        //}
        <tr>
            @for (int dayindex = 0; dayindex < monthweeks.getlength(1); dayindex++)
            {
                string selectclass = "";
                if (monthweeks[weekindex, dayindex] == 1)
                {
                    currentmonthisstarted = true;
                }
                if (currentmonthisstarted
                && !currentmonthisfinished)
                {

                }
                else
                {
                    int localmonth = weekindex >= 4 ? currentmonth + 1 : currentmonth - 1;
                    <td class="@selectclass bit-dtp-out-month"
            @onclick="() => handledatechoose(dayindex + dayofweekdifference, monthweeks[weekindex, dayindex], localmonth)">
                        <button>
                            <span>@monthweeks[weekindex, dayindex]</span>
                        </button>
                    </td>
                }
                if (currentmonthisstarted
                && monthweeks[weekindex, dayindex] == monthlength)
                {
                    currentmonthisfinished = true;
                }
            }
        </tr>
    }
}*@