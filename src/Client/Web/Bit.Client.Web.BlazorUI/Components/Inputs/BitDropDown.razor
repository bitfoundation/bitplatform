@namespace Bit.Client.Web.BlazorUI
@inherits BitComponentBase
<div @ref="RootElement"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">
    @if (Label.HasValue())
    {
        <label>@Label</label>
    }

    <div class="bit-drp-wrapper"
         id="@UniqueId.ToString()"
         tabindex=@(IsEnabled ? 0 : -1)
         role="combobox"
         data-is-focusable="true"
         aria-expanded=@(isOpen ? "true" : "false")
         aria-labelledby=""
         aria-required="@IsRequired"
         aria-disabled="@(IsEnabled is false)"
         aria-controls=""
         @onclick="HandleClick">
        <span>
            @if (Text.HasValue())
            {
                @Text
            }
            else
            {
                @Placeholder
            }
        </span>
        <span>
            <i class="bit-icon"></i>
        </span>
    </div>
    @if (isOpen)
    {
        <div class="bit-drp-items-wrapper">
            @foreach (DropDownItem item in Items)
            {
                if (item.ItemType == DropDownItemType.Header)
                {
                    <div class="@RootElementClass-head-@VisualClassRegistrar()">
                        @item.Text
                    </div>
                }
                else if (item.ItemType == DropDownItemType.Normal)
                {
                    @if (IsMultiSelect)
                    {
                        <BitCheckbox @bind-IsChecked="item.IsSelected"
                                     IsEnabled="item.IsEnabled"
                                     OnChange="(isChecked) => HandleItemClick(isChecked?item:null)">
                            @item.Text
                        </BitCheckbox>
                    }
                    else
                    {
                        <button class="@(Items.Any(prop=>prop.IsSelected && prop.Value.Equals(item.Value))
                                           ?$"{RootElementClass}-slc-{VisualClassRegistrar()}"
                                           :"")"
                                type="button"
                                title="@item.Text"
                                disabled=@(!item.IsEnabled)
                                @onclick="()=> HandleItemClick(item)">
                            @item.Text
                        </button>
                    }
                }
                else if (item.ItemType == DropDownItemType.Divider)
                {
                    <div class="@RootElementClass-div-@VisualClassRegistrar()">
                    </div>
                }
            }
        </div>
    }
</div>