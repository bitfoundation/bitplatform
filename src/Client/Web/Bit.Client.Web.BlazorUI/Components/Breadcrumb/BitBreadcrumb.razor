@namespace Bit.Client.Web.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     id="@UniqueId"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">

    <div class="bit-brc-items-wrapper">
        <ul>

            @foreach ((BitBreadcrumbItem item, int index) item in _itemsToShowInBreadcrumb.Select((item, index) => (item, index)))
            {
                <li id="@($"{OverflowDropDownItemId}{item.index}")">
                    @if (_overflowItems.Any() && item.index == OverflowIndex)
                    {
                        <button aria-label="@OverflowAriaLabel" id=@OverflowDropDownId @onclick="HandleClick">
                            <span>
                                <i class=@($"bit-icon bit-icon--{OnRenderOverflowIcon.GetName()}")></i>
                            </span>
                        </button>
                    }
                    else
                    {
                        <a href="@item.item.href"
                   onclick="@item.item.OnClick"
                   aria-current=@(IsLastItem(item.index) ? "page" : "undefined")
                   class=@(IsLastItem(item.index) ? "bit-brc-lst-itm" :"bit-brc-itm")>@item.item.Text</a>
                    }

                    @if (IsLastItem(item.index) is false)
                    {
                        <i class=@($"bit-icon bit-icon--{DividerAs.GetName()}")></i>
                    }

                </li>
            }
        </ul>
    </div>

    <div class="bit-brc-overlay"
         id="@OverflowDropDownMenuOverlayId"
         @onclick="CloseCallout"></div>

    <div class="bit-brc-overflow-menu-wrapper"
         id="@OverflowDropDownMenuCalloutId"
         tabindex="0"
         role="listbox">
        @foreach ((BitBreadcrumbItem item, int index) in _overflowItems.Select((item, index) => (item, index)))
        {
            <ul>
                <li>
                    <a href="@item.href"
                   onclick="@item.OnClick">@item.Text</a>
                </li>
            </ul>
        }
    </div>
</div>