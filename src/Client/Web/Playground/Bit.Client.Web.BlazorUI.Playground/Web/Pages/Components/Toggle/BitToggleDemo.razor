@page "/components/toggle"

@using Bit.Client.Web.BlazorUI.Playground.Web.Components

<ComponentDemo ComponentName="Toggle" ComponentDescription="A toggle represents a physical switch that allows someone to choose between two mutually exclusive options.  For example, “On/Off”, “Show/Hide”. Choosing an option should produce an immediate result."
               ComponentParameters="componentParameters">
    <ComponentExampleBox Title="BitToggle" ExampleSourceCodeForCopy="@toggleSampleCode" ExampleId="example1">
        <ExamplePreview>
            <div>
                <BitToggle Label="Enabled And Checked" @bind-IsChecked="IsToggleChecked" IsEnabled="true" OnText="On" OffText="Off" />
            </div>
            <div>
                <BitToggle Label="Enabled And Unchecked" @bind-IsChecked="IsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off" />
            </div>
            <div>
                <BitToggle Label="Disabled And Checked" IsChecked="true" IsEnabled="false" OnText="On" OffText="Off" />
            </div>
            <div>
                <BitToggle Label="Disabled And Unchecked" IsChecked="false" IsEnabled="false" OnText="On" OffText="Off" />
            </div>
            <div class="m-t-15">
                <BitToggle Label="With Inline Label" @bind-IsChecked="IsToggleUnChecked" IsEnabled="true" IsInlineLabel="true" OnText="On" OffText="Off" />
            </div>
            <div class="m-t-15">
                <BitToggle Label="Disabled With Inline Label" IsChecked="false" IsEnabled="false" IsInlineLabel="true" OnText="On" OffText="Off" />
            </div>
            <div class="m-t-15">
                <BitToggle Label="With Inline Label And Without OnText And OffText" @bind-IsChecked="IsToggleUnChecked" IsEnabled="true" IsInlineLabel="true" />
            </div>
            <div class="m-t-15">
                <BitToggle Label="Disabled With Inline Label And Without OnText And OffText" IsChecked="false" IsEnabled="false" IsInlineLabel="true" />
            </div>
            <div>
                <BitToggle Label="Enabled And Checked (ARIA 1.0 compatible)" @bind-IsChecked="IsToggleChecked" IsEnabled="true" OnText="On" OffText="Off" Role="Checkbox" />
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitToggle Label="Enabled And Checked" &#64;bind-IsChecked="IsToggleChecked" IsEnabled="true" OnText="On" OffText="Off" />
&ltBitToggle Label="Enabled And Unchecked" &#64;bind-IsChecked="IsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off" />
&ltBitToggle Label="Disabled And Checked" IsChecked="true" IsEnabled="false" OnText="On" OffText="Off" />
&ltBitToggle Label="Disabled And Unchecked" IsChecked="false" IsEnabled="false" OnText="On" OffText="Off" />
&ltBitToggle Label="With Inline Label" &#64;bind-IsChecked="IsToggleUnChecked" IsEnabled="true" IsInlineLabel="true" OnText="On" OffText="Off" />
&ltBitToggle Label="Disabled With Inline Label" IsChecked="false" IsEnabled="false" IsInlineLabel="true" OnText="On" OffText="Off" />
&ltBitToggle Label="With Inline Label And Without OnText And OffText" &#64;bind-IsChecked="IsToggleUnChecked" IsEnabled="true" IsInlineLabel="true" />
&ltBitToggle Label="Disabled With Inline Label And Without OnText And OffText" IsChecked="false" IsEnabled="false" IsInlineLabel="true" />
&ltBitToggle Label="Enabled And Checked (ARIA 1.0 compatible)" &#64;bind-IsChecked="IsToggleChecked" IsEnabled="true" OnText="On" OffText="Off" Role="Checkbox" /></code>

            <code class="csharp">&#64;code {
        private bool BindedIsToggleUnChecked = false;
        private bool IsToggleUnChecked = false;
}</code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Toggles With Custom Labels" ExampleSourceCodeForCopy="@customLabelSampleCode" ExampleId="example2">
        <ExamplePreview>
            <div class="m-t-15">
                <BitToggle @bind-IsChecked="IsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off">
                    <LabelFragment>
                        Custom Inline Label
                    </LabelFragment>
                </BitToggle>
            </div>
            <div class="m-t-15">
                <BitToggle @bind-IsChecked="BindedIsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off" IsInlineLabel="true">
                    <LabelFragment>
                        Custom Inline Label
                    </LabelFragment>
                </BitToggle>
                <div class="m-t-15">
                    <BitButton Class="m-t-15" OnClick="() => BindedIsToggleUnChecked = true">Make Toggle Check</BitButton>
                </div>
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitToggle &#64;bind-IsChecked="IsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off">
        &ltLabelFragment>
                Custom Inline Label
        &lt/LabelFragment>
&lt/BitToggle>
&ltBitToggle &#64;bind-IsChecked="BindedIsToggleUnChecked" IsEnabled="true" OnText="On" OffText="Off" IsInlineLabel="true">
        &ltLabelFragment>
                Custom Inline Label
        &lt/LabelFragment>
&lt/BitToggle>
&ltBitButton Class="m-t-15" OnClick="() => BindedIsToggleUnChecked = true">Make Toggle Check&lt/BitButton></code>

            <code class="csharp">&#64;code {
        private bool BindedIsToggleUnChecked = false;
        private bool IsToggleUnChecked = false;
}</code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>
</ComponentDemo>