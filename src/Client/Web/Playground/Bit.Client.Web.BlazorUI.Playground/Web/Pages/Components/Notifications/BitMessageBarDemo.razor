@page "/components/messagebar"

<h2>MessageBar</h2>

<div class="card">
    <p class="desc">A banner (MessageBar) displays errors, warnings, or important information about an open app or file. For example, if a file failed to upload an error message bar should appear.</p>
</div>

<h2>Usage</h2>
<div class="wrapper">
    <div class="card">
        <h3>BitMessageBar</h3>
        <div class="desc">
            <p>To show a message you can use a BitMessagebar component. Message bars should include :</p>
            <ul>
                <li>Body text</li>
                <li>Action buttons (Optional)</li>
                <li>Link (Optional)</li>
                <li>Close button</li>
            </ul>
        </div>
        <div class="card">
            <h3>Success</h3>
            <div class="desc">
                <p>
                    For showing success messages, just set MessageBarType parameter to Success.
                </p>
            </div>
            <BitPivot>
                <BitPivotItem HeaderText="Example" IconName="ViewList">
                    <div>
                        @if (IsMessageBarHidden is false)
                        {
                            <BitMessageBar MessageBarType="@BitMessageBarType.Success" OnDismiss="HideMessageBar" IsMultiline="false" Truncated="true">
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                            </BitMessageBar>
                        }
                        <br />
                        <BitMessageBar MessageBarType="@BitMessageBarType.Success" IsMultiline="false" Truncated="true">
                            <Actions>
                                <BitButton>Ok</BitButton>
                            </Actions>
                            <ChildContent>
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                                Action completed! This is a sample of message bar with dismiss ability
                            </ChildContent>
                        </BitMessageBar>
                    </div>
                </BitPivotItem>
                <BitPivotItem HeaderText="Code" IconName="Source">
                    <p>
                        <span><span class="light-yellow-bg">&#64;</span>if (IsMessageBarHidden <span class="light-blue">is false</span>)</span>
                        <br />
                        <span>{</span>
                        <br />
                        <span class="m-l-30">&lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Success"<span class="dark-green">OnDismiss</span>="<span class="dark-yellow">HideMessageBar</span>"<span class="dark-green"> Truncated</span>="<span class="light-blue">true</span>"<span class="dark-green"> IsMultiline</span>="<span class="light-blue">false</span>"></span></span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-30">&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                        <br />
                        <span>}</span>
                    </p>
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Success"<span class="dark-green"> Truncated</span>="<span class="light-blue">true</span>"<span class="dark-green"> IsMultiline</span>="<span class="light-blue">false</span>"></span>
                        <br />
                        <span class="m-l-30">&lt<span class="dark-green">ChildContent></span></span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-45">Action completed! This is a sample of message bar with dismiss ability</span>
                        <br />
                        <span class="m-l-30">&lt/</span><span class="dark-green">ChildContent</span><span>&gt;</span>
                        <br />
                        <span class="m-l-30">&lt<span class="dark-green">Actions></span></span>
                        <br />
                        <span class="m-l-45"></span>&lt<span class="dark-green">BitButton></span>ok<span>&lt/</span><span class="dark-green">BitButton</span><span>&gt;</span>
                        <br />
                        <span class="m-l-30">&lt/</span><span class="dark-green">Actions</span><span>&gt;</span>
                        <br />
                        <span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                    <div>
                        <span class="light-yellow-bg">&#64;code {</span>
                        <p>
                            <span>private bool IsMessageBarHidden = false;</span>
                            <br />
                            <span>private void </span><span class="dark-yellow">HideMessageBar</span>()
                            <br />
                            <span>{</span>
                            <br />
                            <span class="m-l-30">IsMessageBarHidden = true;</span>
                            <br />
                            <span>}</span>
                            <br />
                            <span class="light-yellow-bg">}</span>
                        </p>
                    </div>
                </BitPivotItem>
            </BitPivot>
        </div>
        <div class="card">
            <h3>Error</h3>
            <div class="desc">
                <p>
                    For showing error messages, just set MessageBarType parameter to Error.
                </p>
            </div>
            <BitPivot>
                <BitPivotItem HeaderText="Example" IconName="ViewList">
                    <div>
                        <BitMessageBar MessageBarType="@BitMessageBarType.Error" Truncated="false">
                            <ChildContent>
                                This is an error message bar with the ability to truncate your text Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                            </ChildContent>
                            <Actions>
                                <BitButton>Ok</BitButton>
                            </Actions>
                        </BitMessageBar>
                    </div>
                </BitPivotItem>
                <BitPivotItem HeaderText="Code" IconName="Source">
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Error"<span class="dark-green"> Truncated</span>="<span class="light-blue">false</span>"></span>
                        <br />
                        <span class="m-l-30">&lt<span class="dark-green">ChildContent></span></span>
                        <br />
                        <span class="m-l-45">This is an error message bar with the ability to truncate your text Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut</span>
                        <span class="m-l-45">aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span>
                        <br />
                        <span class="m-l-30">&lt/</span><span class="dark-green">ChildContent</span><span>&gt;</span>
                        <br />
                        <span class="m-l-30">&lt<span class="dark-green">Actions></span></span>
                        <br />
                        <span class="m-l-45"></span>&lt<span class="dark-green">BitButton></span>ok<span>&lt/</span><span class="dark-green">BitButton</span><span>&gt;</span>
                        <br />
                        <span class="m-l-30">&lt/</span><span class="dark-green">Actions</span><span>&gt;</span>
                        <br />
                        <span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                </BitPivotItem>
            </BitPivot>
        </div>
        <div class="card">
            <h3>Blocked</h3>
            <div class="desc">
                <p>
                    For showing blocked messages, just set MessageBarType parameter to Blocked.
                </p>
            </div>
            <BitPivot>
                <BitPivotItem HeaderText="Example" IconName="ViewList">
                    <div>
                        <BitMessageBar MessageBarType="@BitMessageBarType.Blocked">
                            Blocked MessageBar - single line Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                        </BitMessageBar>
                    </div>
                </BitPivotItem>
                <BitPivotItem HeaderText="Code" IconName="Source">
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Blocked"></span>
                        <br />
                        <span class="m-l-30">Blocked MessageBar - single line Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo</span>
                        <span class="m-l-30">consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span>
                        <br />
                        <span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                </BitPivotItem>
            </BitPivot>
        </div>
        <div class="card">
            <h3>Warning</h3>
            <div class="desc">
                <p>
                    For showing warning messages or server warning, just set MessageBarType parameter to Warning or SevereWarning.
                </p>
            </div>
            <BitPivot>
                <BitPivotItem HeaderText="Example" IconName="ViewList">
                    <div>
                        <BitMessageBar MessageBarType="@BitMessageBarType.Warning" IsMultiline="false">
                            Caution! Action may takes long and also this message bar shown multiline messages time Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                        </BitMessageBar>
                        <br />
                        <BitMessageBar MessageBarType="@BitMessageBarType.SevereWarning">
                            Cannot connect to server
                        </BitMessageBar>
                    </div>
                </BitPivotItem>
                <BitPivotItem HeaderText="Code" IconName="Source">
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Warning"<span class="dark-green"> IsMultiline</span>="<span class="light-blue">false</span>"></span>
                        <br />
                        <span class="m-l-30">Caution! Action may takes long and also this message bar shown multiline messages time Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation</span>
                        <span class="m-l-30">ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span>
                        <br />
                        <span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.SevereWarning"></span><span>Cannot connect to server</span><span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                </BitPivotItem>
            </BitPivot>
        </div>
        <div class="card">
            <h3>Info</h3>
            <div class="desc">
                <p>
                    For showing info messages, just set MessageBarType parameter to Info.
                </p>
            </div>
            <BitPivot>
                <BitPivotItem HeaderText="Example" IconName="ViewList">
                    <div>
                        <BitMessageBar MessageBarType="@BitMessageBarType.Info">
                            Visit repository <BitLink HasUnderline="true">the link is rendered as a button</BitLink>
                        </BitMessageBar>
                    </div>
                </BitPivotItem>
                <BitPivotItem HeaderText="Code" IconName="Source">
                    <p>
                        &lt<span class="dark-green">BitMessageBar MessageBarType="</span><span class="light-yellow-bg">&#64;</span><span>BitMessageBarType.Info"></span><span>Visit repository</span> &lt<span class="dark-green">BitLink HasUnderline</span>="<span class="light-blue">true</span>"><span>the link is rendered as a button</span><span>&lt/</span><span class="dark-green">BitMessageBar</span><span>&gt;</span>
                    </p>
                </BitPivotItem>
            </BitPivot>
        </div>
    </div>
</div>
<h2>Implementation</h2>
<div class="card">
    <table>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default value</th>
            <th>Description</th>
        </tr>
        <tr>
            <td>actions</td>
            <td>renderfragment</td>
            <td></td>
            <td>The content of the action to show on the message bar.</td>
        </tr>
        <tr>
            <td>className</td>
            <td>string</td>
            <td></td>
            <td>If provided, additional class name to provide on the root element.</td>
        </tr>
        <tr>
            <td>childContent</td>
            <td>renderfragment</td>
            <td></td>
            <td>The content of message bar.</td>
        </tr>
        <tr>
            <td>isMultiline</td>
            <td>boolean</td>
            <td>false</td>
            <td>Determines if the message bar is multi lined. If false, and the text overflows over buttons or to another line, it is clipped.</td>
        </tr>
        <tr>
            <td>messageBarType</td>
            <td>BitMessageBarType</td>
            <td></td>
            <td>The type of message bar to render.</td>
        </tr>
        <tr>
            <td>onDismiss</td>
            <td>eventCallback </td>
            <td></td>
            <td>Whether the message bar has a dismiss button and its callback. If null, dismiss button won't show.</td>
        </tr>
        <tr>
            <td>ref</td>
            <td>elementreference</td>
            <td></td>
            <td>Access the public methods and properties of the component.</td>
        </tr>
        <tr>
            <td>styles</td>
            <td>string</td>
            <td></td>
            <td>Custom styling for individual elements within the message bar DOM.</td>
        </tr>
        <tr>
            <td>truncated</td>
            <td>boolean</td>
            <td>false</td>
            <td>Determines if the message bar text is truncated. If true, a button will render to toggle between a single line view and multiline view. This parameter is for single line message bars with no buttons only in a limited space scenario.</td>
        </tr>
        <tr>
            <td>uniqueId</td>
            <td>guid</td>
            <td></td>
            <td>Unique ID to identify the item. Typically a duplicate of key value.</td>
        </tr>
    </table>
    <div>
        <h4>BitMessageBarType</h4>
        <hr />
        <table>
            <tr>
                <th>Name</th>
                <th>Value</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>info</td>
                <td>0</td>
                <td></td>
            </tr>
            <tr>
                <td>warning</td>
                <td>1</td>
                <td></td>
            </tr>
            <tr>
                <td>error</td>
                <td>2</td>
                <td></td>
            </tr>
            <tr>
                <td>blocked</td>
                <td>3</td>
                <td></td>
            </tr>
            <tr>
                <td>severeWarning</td>
                <td>4</td>
                <td></td>
            </tr>
            <tr>
                <td>success</td>
                <td>5</td>
                <td></td>
            </tr>
        </table>
    </div>
</div>