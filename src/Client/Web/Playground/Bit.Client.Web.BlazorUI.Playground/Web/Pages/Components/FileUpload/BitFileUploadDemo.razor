@page "/components/file-upload"

<ComponentDemo ComponentName="FileUpload" ComponentDescription="BitFileUpload component wraps the HTML file input element(s) and uploads them to a given URL. The files can be removed by
    specifying the URL they have been uploaded. Moreover, it provides several other options including single or multiple or automatic file uploading.
    By automatic, it means the files can be automatically uploaded after being selected. It is possible to specify a maximum size for each file if need be.
    Additionally, by specifying file extensions, the files can be restricted to certain types."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitFileUpload" HTMLSourceCode="@example1HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">Files can be uploaded automatically after selecting them.</div>
            <div>
                <BitFileUpload Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Auto & Multiple" HTMLSourceCode="@example2HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">Multiple files can be selected to upload automatically.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               AutoUploadEnabled="true"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Auto & Multiple with max-size limitation" HTMLSourceCode="@example3HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-desc">Multiple files can be selected to upload automatically with limited size.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               AutoUploadEnabled="true"
                               MaxSize="1024 * 1024 * 100"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Individual & Multiple (limited by extensions format)" HTMLSourceCode="@example4HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">Single or multiple file uploading limited only by file extensions, which in this case the allowed file extensions include gif, jpg and mp4.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               AutoUploadEnabled="false"
                               AllowedExtensions="@(new List<string> { ".gif",".jpg",".mp4" })"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Removable" HTMLSourceCode="@example5HtmlCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-desc">Single or multiple file uploading with remove functionality enabled.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl"
                               RemoveUrl="@RemoveUrl"
                               ShowRemoveButton="true">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Auto & Multiple with calling all upload complete event" HTMLSourceCode="@example6HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-desc">Multiple files can be selected to upload automatically with calling all upload complete event.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               AutoUploadEnabled="true"
                               OnAllUploadsComplete="@(() => onAllUploadsCompleteText = "All File Uploaded")"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl">
                </BitFileUpload>
            </div>
            <div class="example-desc">@onAllUploadsCompleteText</div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Auto & Multiple with custom http headers and query strings" HTMLSourceCode="@example7HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <div class="example-desc">Multiple files can be selected to upload and remove with custom http headers and query strings.</div>
            <div>
                <BitFileUpload IsMultiSelect="true"
                               Label="Select or drag and drop files"
                               UploadUrl="@UploadUrl"
                               UploadRequestHttpHeaders="@(new Dictionary<string, string>{ {"header1", "value1" } })"
                               UploadRequestQueryStrings="@(new Dictionary<string, string>{ {"qs1", "qsValue1" } })"
                               RemoveUrl="@RemoveUrl"
                               RemoveRequestHttpHeaders="@(new Dictionary<string, string>{ {"header2", "value2" } })"
                               RemoveRequestQueryStrings="@(new Dictionary<string, string>{ {"qs2", "qsValue2" } })">
                </BitFileUpload>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>