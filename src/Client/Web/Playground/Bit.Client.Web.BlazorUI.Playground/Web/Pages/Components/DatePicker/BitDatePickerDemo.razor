@page "/components/date-picker"

<ComponentDemo ComponentName="DatePicker" ComponentDescription="Picking a date can be tough without context. A BitDatePicker offers a drop-down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.
                                                        You can modify the calendar to provide additional context or to limit available dates."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitDatePicker with month picker as overlay" HTMLSourceCode="@example1HTMLCode" ExampleId="example1">
        <ExamplePreview>
            <BitDatePicker Style="width: 300px"
                           ShowMonthPickerAsOverlay="true">
            </BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitDatePicker with week numbers" HTMLSourceCode="@example2HTMLCode" ExampleId="example2">
        <ExamplePreview>
            <BitDatePicker Style="width: 300px"
                           ShowWeekNumbers="true">
            </BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Jalali BitDatePicker" HTMLSourceCode="@example3HTMLCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-desc">In this sample, you can see the usage of CultureInfoHelper class to specify a particular format for the DatePicker. You can also provide your own class for any custom culture of your interest.</div>
            <div>
                <BitDatePicker Culture="@(new System.Globalization.CultureInfo("fa-IR"))"
                               GoToToday="برو به امروز"
                               Style="width: 300px">
                </BitDatePicker>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Jalali BitDatePicker with Finglish names" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">In this sample, you can see the usage of CultureInfoHelper class to specify a particular format for the DatePicker. You can also provide your own class for any custom culture of your interest.</div>
            <div>
                <BitDatePicker Culture="Bit.Client.Web.BlazorUI.CultureInfoHelper.GetPersianCultureByFinglishNames()"
                               GoToToday="Boro be emrouz"
                               Style="width: 300px">
                </BitDatePicker>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Value two-way binding" HTMLSourceCode="@example5HTMLCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <BitDatePicker @bind-Value="@selectedDate" Style="width: 300px"></BitDatePicker>
            <BitLabel>this is selected date: @selectedDate.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="DatePicker with custom date formatting" HTMLSourceCode="@example6HTMLCode" ExampleId="example6">
        <ExamplePreview>
            <BitDatePicker FormatDate="d" Style="width: 300px"></BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitDatePicker with MaxDate and MinDate" HTMLSourceCode="@example7HTMLCode" ExampleId="example7">
        <ExamplePreview>
            <BitDatePicker Style="width: 300px"
                           MaxDate="DateTimeOffset.Now.AddYears(1)"
                           MinDate="DateTimeOffset.Now.AddYears(-5)">
            </BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitDatePicker validation" HTMLSourceCode="@example8HTMLCode" CSharpSourceCode="@example8CSharpCode" ExampleId="example8">
        <ExamplePreview>
            @if (string.IsNullOrEmpty(SuccessMessage))
            {
                <EditForm Model="formValidationDatePickerModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                    <DataAnnotationsValidator />

                    <div class="validation-summary">
                        <ValidationSummary />
                    </div>

                    <div>
                        <BitDatePicker Style="width: 300px" @bind-Value="formValidationDatePickerModel.Date" />

                        <ValidationMessage For="@(() => formValidationDatePickerModel.Date)" />
                    </div>

                    <br />

                    <BitButton ButtonType="BitButtonType.Submit">
                        Submit
                    </BitButton>
                </EditForm>
            }
            else
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @SuccessMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>