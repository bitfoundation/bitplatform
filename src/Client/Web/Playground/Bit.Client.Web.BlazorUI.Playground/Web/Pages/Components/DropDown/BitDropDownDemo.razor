@page "/components/drop-down"

<ComponentDemo ComponentName="DropDown" ComponentDescription="A dropdown is a list in which the selected item is always visible while other items are visible on demand by clicking a dropdown button. Dropdowns are typically used for forms."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitDropDown" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a dropdown you can use a BitDropDown component.</div>
            <div>
                <BitDropDown Label="Basic Uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             Style="width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>
                <BitDropDown Label="Disabled with defaultSelectedKey"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             IsEnabled="false"
                             DefaultSelectedKey="Broccoli"
                             Style="width: 290px; margin-bottom: 20px;">
                </BitDropDown>
                <BitDropDown Label="Multi-select uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select options"
                             IsMultiSelect="true"
                             Style="width: 290px; margin-bottom: 20px;">
                </BitDropDown>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled Single-Select" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <BitDropDown Label="Single-select Controlled"
                         Items="GetDropdownItems()"
                         Placeholder="Select an option"
                         @bind-SelectedKey="ControlledSelectedKey"
                         Style="width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled Multi-Select" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <BitDropDown Label="Multi-select controlled"
                         Items="GetDropdownItems()"
                         Placeholder="Select options"
                         @bind-SelectedMultipleKeys="ControlledSelectedMultipleKeys"
                         IsMultiSelect="true"
                         Style="width:290px; margin:20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Customized Dropdown" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <BitDropDown Label="Custom Controlled"
                         Items="GetCustomDropdownItems()"
                         Placeholder="Select an option"
                         AriaLabel="Custom dropdown"
                         Style="width:290px; margin:20px 0 20px 0">
                <TextTemplate>
                    <div>
                        <i class="bit-icon bit-icon--@((context.Items.Find(i => i.Value == context.SelectedKey).Data as DropDownItemData).IconName)"
                           aria-hidden="true"
                           title="@((context.Items.Find(i => i.Value == context.SelectedKey).Data as DropDownItemData).IconName)"></i>
                        <span>@context.Items.Find(i => i.Value == context.SelectedKey).Text</span>
                    </div>
                </TextTemplate>
                <PlaceholderTemplate>
                    <div>
                        <i class="bit-icon bit-icon--MessageFill" aria-hidden="true"></i>
                        <span>@context.Placeholder</span>
                    </div>
                </PlaceholderTemplate>
                <CaretDownFragment>
                    <i class="bit-icon bit-icon--CirclePlus"></i>
                </CaretDownFragment>
                <ItemTemplate>
                    <div style="display: flex; flex-flow: row nowrap; justify-content: flex-start; align-items: center;">
                        <i class="bit-icon bit-icon--@((context.Data as DropDownItemData).IconName)"
                           aria-hidden="true"
                           title="@((context.Data as DropDownItemData).IconName)"></i>
                        <span>@context.Text</span>
                    </div>
                </ItemTemplate>
            </BitDropDown>

            <BitDropDown Items="GetCustomDropdownItems()"
                         Placeholder="Select an option"
                         Label="Custom Label"
                         AriaLabel="Custom dropdown label "
                         Style="width:290px">
                <LabelFragment>
                    <label>Custom label</label>
                    <button type="button" title="Info" aria-label="Info" class="custom-drp-lbl-ic">
                        <i class="bit-icon bit-icon--Info"></i>
                    </button>
                </LabelFragment>
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>