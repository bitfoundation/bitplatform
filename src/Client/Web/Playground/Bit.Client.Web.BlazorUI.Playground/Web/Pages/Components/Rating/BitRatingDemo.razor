@page "/components/rating"

@using Bit.Client.Web.BlazorUI.Playground.Web.Components

<ComponentPage ComponentName="Rating" OverviewDesc="Ratings show people’s opinions of a product, helping others make more informed purchasing decisions. People can also rate products they’ve purchased."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <CodeSample Title="BitRating" Description="" CodeSampleContentForCopy="@ratingSampleCode">
        <SampleContent>
            <div class="how-to-use">
                <div>Large stars</div>
                <BitRating Size="BitRatingSize.Large" @bind-Rating="RatingLargeValue" AriaLabelFormat="Select {0} of {1} stars" />
                <div>Small stars, with 0 stars allowed</div>
                <BitRating AllowZeroStars="true" @bind-Rating="RatingSmallValue" />
                <div>10 small stars</div>
                <div>
                    <BitRating Max="10" OnChange="@(v => RatingChangedText = $"Rating value changed to {v}")" @bind-Rating="RatingBoundValue" />
                    <div class="m-t-10">
                        <span>@RatingChangedText</span>
                    </div>
                    <div>Disabled</div>
                    <BitRating IsEnabled="false" @bind-Rating="RatingReadOnlyValue" />
                    <div>Half star in readOnly mode</div>
                    <BitRating IsReadOnly="true" @bind-Rating="RatingReadOnlyValue" GetAriaLabel="@((value, max) => $"Half star in readOnly mode rating value is {value.ToString()} of {max.ToString()}")" />
                    <div>Custom icons</div>
                    <BitRating Icon="BitIcon.HeartFill" UnselectedIcon="BitIcon.Heart" AllowZeroStars="true" @bind-Rating="RatingCustomIconValue" />
                </div>
            </div>
        </SampleContent>
        <CodeSampleContent>
            <pre>
               &lt<span class="soco-component-attr">BitRating Size</span>="BitRatingSize.Large"
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingLargeValue" </span>
                                      <span class="soco-component-attr">AriaLabelFormat</span><span>="Select {0} of {1} stars"</span>/&gt;
               &lt<span class="soco-component-attr">BitRating AllowZeroStars</span><span class="soco-tag-type-def">="true" </span>
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingSmallValue"</span>/&gt;
               &lt<span class="soco-component-attr">BitRating Max</span>="10"
                                      <span class="soco-component-attr">OnChange</span>="<span class="soco-code">&#64;</span>(v => RatingChangedText = <span class="soco-string">$"Rating value changed to </span>{v}<span class="soco-string">"</span>)"
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingBoundValue"</span>/&gt;
               &lt<span class="soco-component-attr">BitRating IsEnabled</span><span class="soco-tag-type-def">="false"</span>
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingReadOnlyValue"</span>/&gt;
               &lt<span class="soco-component-attr">BitRating IsReadOnly</span><span class="soco-tag-type-def">="true"</span>
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingReadOnlyValue"</span>
                                      <span class="soco-component-attr">GetAriaLabel</span>="<span class="soco-code">&#64;</span>((value, max) => <span class="soco-string">$"Half star in readOnly mode rating value is </span>{value.ToString()} <span class="soco-string"> of </span>{max.ToString()}<span class="soco-string">"</span>)"/&gt;
               &lt<span class="soco-component-attr">BitRating Icon</span>="BitIcon.HeartFill"
                                      <span class="soco-component-attr">UnselectedIcon</span>="BitIcon.Heart"
                                      <span class="soco-component-attr">AllowZeroStars</span>=<span class="soco-tag-type-def">"true"</span>
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingOutsideValue"</span>/&gt;
            </pre>
        </CodeSampleContent>
    </CodeSample>
    <CodeSample Title="Button-controlled rating" Description="BitRating component support two-way binding as well." CodeSampleContentForCopy="@controlledRatingSampleCode">
        <SampleContent>
            <div class="how-to-use">
                <BitRating Icon="BitIcon.Emoji2" UnselectedIcon="BitIcon.EmojiNeutral" AllowZeroStars="true" @bind-Rating="RatingOutsideValue" />
                <div>
                    <span>RatingOutsideValue: @RatingOutsideValue</span>
                </div>
                <div>
                    <BitButton OnClick="() => RatingOutsideValue = 5">Fully satisfied</BitButton>
                    <BitButton OnClick="() => RatingOutsideValue = 0">Have no idea</BitButton>
                </div>
            </div>
        </SampleContent>
        <CodeSampleContent>
            <pre>
               &lt<span class="soco-component-attr">BitRating Icon</span>="BitIcon.Emoji2"
                                      <span class="soco-component-attr">UnselectedIcon</span>="BitIcon.EmojiNeutral"
                                      <span class="soco-component-attr">AllowZeroStars</span>=<span class="soco-tag-type-def">"true"</span>
                                      <span class="soco-code">&#64;</span><span class="soco-component-attr">bind-Rating</span><span>="RatingOutsideValue"</span>/&gt;
               &lt<span class="soco-component-attr">BitButton OnClick</span>="() => RatingOutsideValue = 5">Fully satisfied<span>&lt/</span><span class="soco-component-attr">BitButton</span><span>&gt;</span>
               &lt<span class="soco-component-attr">BitButton OnClick</span>="() => RatingOutsideValue = 0">Have no idea<span>&lt/</span><span class="soco-component-attr">BitButton</span><span>&gt;</span>
            </pre>
        </CodeSampleContent>
    </CodeSample>
</ComponentPage>