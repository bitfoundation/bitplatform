@page "/components/rating"

<ComponentDemo ComponentName="Rating" ComponentDescription="Ratings show people’s opinions of a product, helping others make more informed purchasing decisions. People can also rate products they’ve purchased."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitRating" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div>Large stars</div>
            <BitRating Size="BitRatingSize.Large" @bind-Rating="RatingLargeValue" AriaLabelFormat="Select {0} of {1} stars" />
            <div>Small stars, with 0 stars allowed</div>
            <BitRating AllowZeroStars="true" @bind-Rating="RatingSmallValue" />
            <div>10 small stars</div>
            <div>
                <BitRating Max="10" OnChange="@(v => RatingChangedText = $"Rating value changed to {v}")" @bind-Rating="RatingBoundValue" />
                <div class="m-t-10">
                    <span>@RatingChangedText</span>
                </div>
                <div>Disabled</div>
                <BitRating IsEnabled="false" @bind-Rating="RatingReadOnlyValue" />
                <div>Half star in readOnly mode</div>
                <BitRating IsReadOnly="true" @bind-Rating="RatingReadOnlyValue" GetAriaLabel="@((value, max) => $"Half star in readOnly mode rating value is {value.ToString()} of {max.ToString()}")" />
                <div>Custom icons</div>
                <BitRating Icon="BitIconName.HeartFill" UnselectedIcon="BitIconName.Heart" AllowZeroStars="true" @bind-Rating="RatingCustomIconValue" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Button-controlled rating" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">BitRating component support two-way binding as well.</div>
            <div>
                <BitRating Icon="BitIconName.Emoji2" UnselectedIcon="BitIconName.EmojiNeutral" AllowZeroStars="true" @bind-Rating="RatingOutsideValue" />
                <div>
                    <span>RatingOutsideValue: @RatingOutsideValue</span>
                </div>
                <div>
                    <BitButton OnClick="() => RatingOutsideValue = 5">Fully satisfied</BitButton>
                    <BitButton OnClick="() => RatingOutsideValue = 0">Have no idea</BitButton>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>