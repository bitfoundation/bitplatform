@page "/components/check-box"

<ComponentDemo ComponentName="CheckBox" ComponentDescription="BitCheckbox is component that permits the user to make a binary choice, a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' or 'no' on a simple yes/no question. Checkboxes are shown as ☐ when unchecked, or ☑ when checked."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitCheckbox" ExampleSourceCodeForCopy="@checkboxSampleCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a checkbox you can use a BitCheckbox component.</div>
            <div class="chk-box">
                <BitCheckbox @bind-IsChecked="IsCheckBoxChecked">Basic Checkbox</BitCheckbox>
                <BitCheckbox IsChecked="true">Checked Checkbox</BitCheckbox>
                <BitCheckbox IsEnabled="false">Disable Checkbox</BitCheckbox>
                <BitCheckbox IsEnabled="false" IsChecked="true">Disable Checked Checkbox</BitCheckbox>
                <BitCheckbox CheckmarkIconName="BitIconName.Heart">Custom checkmark Checkbox</BitCheckbox>
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitCheckbox &#64;bind-IsChecked="IsCheckBoxChecked">Basic Checkbox&lt/BitCheckbox>
&ltBitCheckbox IsChecked="true">Checked Checkbox&lt/BitCheckbox>
&ltBitCheckbox IsEnabled="false">Disable Checkbox&lt/BitCheckbox>
&ltBitCheckbox IsEnabled="false" IsChecked="true">Disable Checked Checkbox&lt/BitCheckbox>
&ltBitCheckbox CheckmarkIconName="BitIconName.Heart">Custom checkmark Checkbox&lt/BitCheckbox></code>

            <code class="csharp">&#64;code {
        private bool IsCheckBoxChecked = false;
}</code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Reversed" ExampleSourceCodeForCopy="@reversedSampleCode" ExampleId="example2">
        <ExamplePreview>
            <div class="chk-box">
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">Reversed - Basic Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsChecked="true">Reversed - Checked Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsEnabled="false">Reversed - Disable Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsEnabled="false" IsChecked="true">Reversed - Disable Checked Checkbox</BitCheckbox>
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitCheckbox BoxSide="&#64;BitCheckBoxSide.End">Reversed - Basic Checkbox&lt/BitCheckbox>
&ltBitCheckbox BoxSide="&#64;BitCheckBoxSide.End">IsChecked="true">Reversed - Checked Checkbox&lt/BitCheckbox>
&ltBitCheckbox BoxSide="&#64;BitCheckBoxSide.End">IsEnabled="false">Reversed - Disable Checkbox&lt/BitCheckbox>
&ltBitCheckbox BoxSide="&#64;BitCheckBoxSide.End">IsEnabled="false" IsChecked="true">Reversed - Disable Checked Checkbox&lt/BitCheckbox></code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Indeterminate" ExampleSourceCodeForCopy="@indeterminateSampleCode" ExampleId="example3">
        <ExamplePreview>
            <div class="chk-box">
                <BitCheckbox @bind-IsIndeterminate="IsCheckBoxIndeterminate" @bind-IsChecked="IsCheckBoxChecked">Indeterminated checkbox</BitCheckbox>
                <BitCheckbox IsIndeterminate="true">Indeterminate checkbox</BitCheckbox>
                <BitCheckbox IsIndeterminate="true" IsEnabled="false">Disabled indeterminated checkbox</BitCheckbox>
                <BitCheckbox @bind-IsIndeterminate="IsCheckBoxIndeterminateInCode" @bind-IsChecked="IsCheckBoxChecked">Controlled indeterminated checkbox</BitCheckbox>
                <BitButton OnClick="() => IsCheckBoxIndeterminateInCode = true">Make Checkbox Indeterminate</BitButton>
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitCheckbox &#64;bind-IsIndeterminate="IsCheckBoxIndeterminate" &#64;bind-IsChecked="IsCheckBoxChecked">Indeterminated checkbox&lt/BitCheckbox>
&ltBitCheckbox IsIndeterminate="true">Indeterminate checkbox&lt/BitCheckbox>
&ltBitCheckbox IsIndeterminate="true" IsEnabled="false">Disabled indeterminated checkbox&lt/BitCheckbox>
&ltBitCheckbox &#64;bind-IsIndeterminate="IsCheckBoxIndeterminateInCode" &#64;bind-IsChecked="IsCheckBoxChecked">Controlled indeterminated checkbox&lt/BitCheckbox>
&ltBitButton OnClick="() => IsCheckBoxIndeterminateInCode = true">Make Checkbox Indeterminate&lt/BitButton></code>

            <code class="csharp">&#64;code {
        private bool IsCheckBoxIndeterminate = true;
        private bool IsCheckBoxIndeterminateInCode = true;
}</code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom Label" ExampleSourceCodeForCopy="@customLabelSampleCode" ExampleId="example4">
        <ExamplePreview>
            <div>
                <BitCheckbox>
                    Custom-rendered label with a link go to
                    <a href="https://github.com/bitfoundation/bitframework">
                        Bit Foundation repository page
                    </a>
                </BitCheckbox>
            </div>
        </ExamplePreview>
        <ExampleSourceCode>
            <pre class="code">
            <code class="html">&ltBitCheckbox>
        Custom-rendered label with a link go to
        &lta href="https://github.com/bitfoundation/bitframework">
                Bit Foundation repository page
        &lt/a>
&lt/BitCheckbox></code>
            </pre>
        </ExampleSourceCode>
    </ComponentExampleBox>
</ComponentDemo>