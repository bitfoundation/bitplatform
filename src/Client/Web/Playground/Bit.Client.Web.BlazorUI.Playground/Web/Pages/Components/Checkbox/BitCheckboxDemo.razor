@page "/components/check-box"

<ComponentDemo ComponentName="CheckBox" ComponentDescription="BitCheckbox is component that permits the user to make a binary choice, a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' or 'no' on a simple yes/no question. Checkboxes are shown as ☐ when unchecked, or ☑ when checked."
               ComponentParameters="componentParameters" EnumParameters="enumParameters">
    <ComponentExampleBox Title="BitCheckbox" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a checkbox you can use a BitCheckbox component.</div>
            <div class="chk-box">
                <BitCheckbox @bind-IsChecked="IsCheckBoxChecked">Basic Checkbox</BitCheckbox>
                <BitCheckbox IsChecked="true">Checked Checkbox</BitCheckbox>
                <BitCheckbox IsEnabled="false">Disable Checkbox</BitCheckbox>
                <BitCheckbox IsEnabled="false" IsChecked="true">Disable Checked Checkbox</BitCheckbox>
                <BitCheckbox CheckmarkIconName="BitIconName.Heart">Custom checkmark Checkbox</BitCheckbox>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Reversed" HTMLSourceCode="@example2TMLCode" ExampleId="example2">
        <ExamplePreview>
            <div class="chk-box">
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">Reversed - Basic Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsChecked="true">Reversed - Checked Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsEnabled="false">Reversed - Disable Checkbox</BitCheckbox>
                <BitCheckbox BoxSide="@BitCheckBoxSide.End">IsEnabled="false" IsChecked="true">Reversed - Disable Checked Checkbox</BitCheckbox>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Indeterminate" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="chk-box">
                <BitCheckbox @bind-IsIndeterminate="IsCheckBoxIndeterminate" @bind-IsChecked="IsCheckBoxChecked">Indeterminated checkbox</BitCheckbox>
                <BitCheckbox IsIndeterminate="true">Indeterminate checkbox</BitCheckbox>
                <BitCheckbox IsIndeterminate="true" IsEnabled="false">Disabled indeterminated checkbox</BitCheckbox>
                <BitCheckbox @bind-IsIndeterminate="IsCheckBoxIndeterminateInCode" @bind-IsChecked="IsCheckBoxChecked">Controlled indeterminated checkbox</BitCheckbox>
                <BitButton OnClick="() => IsCheckBoxIndeterminateInCode = true">Make Checkbox Indeterminate</BitButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom Label" HTMLSourceCode="@example4HTMLCode" ExampleId="example4">
        <ExamplePreview>
            <div>
                <BitCheckbox>
                    Custom-rendered label with a link go to
                    <a href="https://github.com/bitfoundation/bitframework">
                        Bit Foundation repository page
                    </a>
                </BitCheckbox>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>