@page "/"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@namespace Bit.Client.Web.BlazorUI.Playground.Web.Pages
@using Bit.Client.Web.BlazorUI.Playground.Web
@using Bit.Client.Web.BlazorUI.Playground.Shared;

@{
    Layout = null;
    var isBlazorServer = BlazorModeDetector.Current.IsServer();
}

@*
    Unlike most client-side Blazor projects (WASM Blazor), we use .cshtml instead of .html index file.
    This provides PreRendering(SSR) to the client blazor projects and the ability to use "asp-append-version".
    Note that this file(_Host.cshtml) is being used for both "Client" and "Server" blazor.
*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blazor UI Playground</title>
    <base href="~/" />
    <link rel="stylesheet" href="Bit.Client.Web.BlazorUI.Playground.Web.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="_content/Bit.Client.Web.BlazorUI/styles/styles.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/styles/styles.css" asp-append-version="true" />
</head>
<body>

    <app>
        <component type="typeof(App)"
                   render-mode="@(isBlazorServer ? RenderMode.ServerPrerendered : RenderMode.Static)" />
    </app>

    <script src="_content/Bit.Client.Web.BlazorUI/scripts/bit.client.web.js" asp-append-version="true"></script>
    <script src="_content/Bit.Client.Web.BlazorUI/scripts/bit.client.web.file-upload.js" asp-append-version="true"></script>
    @if (isBlazorServer)
    {
        <script src="_framework/blazor.server.js" asp-append-version="true"></script>
    }
    else
    {
        <script src="_framework/blazor.webassembly.js" asp-append-version="true"></script>
    }
</body>
</html>