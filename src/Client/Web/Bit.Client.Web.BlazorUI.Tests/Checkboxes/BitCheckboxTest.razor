<CascadingValue Value="@Visual">
    <BitCheckbox IsEnabled="@IsEnabled"
                 AriaLabel="@AriaLabel"
                 CheckmarkIconName="@CheckmarkIconName"
                 AriaDescription="@AriaDescription"
                 AriaLabelledby="@AriaLabelledby"
                 AriaPositionInSet="@AriaPositionInSet"
                 AriaSetSize="@AriaSetSize"
                 Name="@Name"
                 Title="@Title"
                 DefaultIsChecked="@DefaultIsChecked"
                 CheckmarkIconAriaLabel="@CheckmarkIconAriaLabel"
                 BoxSide="@BoxSide"
                 DefaultIsIndeterminate="@DefaultIsIndeterminate"
                 OnClick="HandleOnClick"
                 OnChange="HandleOnChange">
        <ChildContent>
            @ChildContent
        </ChildContent>
    </BitCheckbox>
</CascadingValue>

@code {
    [Parameter] public Visual Visual { get; set; }
    [Parameter] public bool IsEnabled { get; set; }
    [Parameter] public bool IsChecked { get; set; }
    [Parameter] public bool IsIndeterminate { get; set; }
    [Parameter] public string AriaLabel { get; set; }
    [Parameter] public BitIcon CheckmarkIconName { get; set; }
    [Parameter] public string CheckmarkIconAriaLabel { get; set; }
    [Parameter] public string AriaDescription { get; set; }
    [Parameter] public string AriaLabelledby { get; set; }
    [Parameter] public int? AriaPositionInSet { get; set; }
    [Parameter] public int? AriaSetSize { get; set; }
    [Parameter] public string Name { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public BitBoxSide BoxSide { get; set; }
    [Parameter] public bool? DefaultIsChecked { get; set; }
    [Parameter] public bool? DefaultIsIndeterminate { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    public int ClickCounter { get; set; } = 0;
    public bool IsCheckedChanged { get; set; } = false;

    public void HandleOnClick(MouseEventArgs args)
    {
        ClickCounter++;
    }

    public void HandleOnChange(bool isChecked)
    {
        IsCheckedChanged = true;
    }
}
