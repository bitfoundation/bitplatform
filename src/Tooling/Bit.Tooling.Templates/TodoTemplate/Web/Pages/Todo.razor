@page "/todo"
@attribute [Authorize]

@inherits TodoTemplateComponentBase;

<PageTitle>Todo</PageTitle>

<div class="page-container">
    <div class="todo-form-white">
        <div class="search-todo-container">
            <BitSearchBox OnChange="TodoItemSearch"
                          OnClear="@(()=>TodoItemSearch(""))"
                          Class="search-todo-input"
                          Placeholder="Search some todo..." />
        </div>
        <div class="todo-content">
            <h2 class="todo-title">Todo</h2>
            <div class="add-todo-container">
                <BitTextField @bind-Value="NewTodoItemTitle"
                              Placeholder="Add a todo"
                              Class="add-todo-input" />

                <BitButton OnClick="() => InvokeAsync(AddTodoItem)"
                           Class="add-todo-button"
                           Title="Add"
                           AriaLabel="Add"
                           IsEnabled="(string.IsNullOrEmpty(NewTodoItemTitle) is false)">
                    @if (IsAddLoading)
                    {
                        <BitSpinner Size="BitSpinnerSize.Small"></BitSpinner>
                    }
                    else
                    {
                        <span>Add</span>
                    }
                </BitButton>
            </div>
            <div class="todo-items-container">
                <div class="todo-sort-container">
                    <BitDropDown OnSelectItem="TodoItemSort"
                                 Class="sort-todo-dropdown"
                                 Items="SortItemList">
                        <CaretDownFragment>
                            <BitActionButton IconName="BitIconName.Sort">Sort by @SelectedSortTodoItemName</BitActionButton>
                        </CaretDownFragment>
                    </BitDropDown>
                </div>
                <BitPivot OnLinkClick="NavigatePivotItem">
                    <BitPivotItem Class="todo-pivot-tab" HeaderText="All" AriaLabel="All" />
                    <BitPivotItem Class="todo-pivot-tab" HeaderText="Active" AriaLabel="Active" />
                    <BitPivotItem Class="todo-pivot-tab" HeaderText="Completed" AriaLabel="Completed" />
                </BitPivot>
                <div class="todo-items">
                    @if (IsLoading)
                    {
                        <div>
                            <BitSpinner Class="todo-list-spinner"></BitSpinner>
                        </div>

                    }
                    else
                    {
                        if (ViewTodoItemList?.Count == 0)
                        {
                            <div class="todo-empty">
                                <img src="/images/backgrounds/empty-todo-list-bg.svg">
                                <BitLabel>No todos yet</BitLabel>
                            </div>
                        }
                        else
                        {
                            <BitBasicList Class="todo-item-list"
                                  Items="ViewTodoItemList"
                                  Virtualize="true">
                                <RowTemplate>
                                    <div class="item">
                                        @if (context.IsInEditMode)
                                {
                                    <BitTextField Class="todo-input" @bind-Value="context.Title" />
                                    <div>
                                        <BitButton Title="Edit"
                                               AriaLabel="Edit"
                                               OnClick="(() => InvokeAsync(() => EditTodoItem(context)))">Edit</BitButton>
                                        <BitButton ButtonStyle="BitButtonStyle.Standard"
                                               Class="todo-button"
                                               Title="Cancel"
                                               AriaLabel="Cancel"
                                               OnClick="@(() => InvokeAsync(() => CancelEditMode(context)))">Cancel</BitButton>
                                    </div>
                                }
                                else
                                {
                                    <div class="todo-info">
                                        <BitCheckbox DefaultIsChecked="context.IsDone"
                                                 OnChange="()=>ToggleTodoItem(context)">
                                            @context.Title
                                        </BitCheckbox>

                                        <div Class="todo-item-date">
                                            @context.Date.ToString("MMMM dd , yyyy , dddd")
                                        </div>
                                    </div>
                                    <div class="todo-buttons-container">
                                        <BitIconButton IconName="BitIconName.Edit"
                                                   Title="Edit"
                                                   AriaLabel="Edit"
                                                   OnClick="(() => InvokeAsync(() => ToggleToEditMode(context)))" />

                                        <BitIconButton IconName="BitIconName.Delete"
                                                   Title="Remove"
                                                   AriaLabel="Remove"
                                                   OnClick="(() => InvokeAsync(() => DeleteTodoItem(context)))" />
                                    </div>
                                }
                            </div>
                        </RowTemplate>
                    </BitBasicList>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
