<Project Sdk="Microsoft.NET.Sdk.Web">
    
    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <!--If you don't need to use the time zone and your app is in WASM format, you can reduce the output size of the app by disabling the time zone.-->
        <BlazorEnableTimeZoneSupport>true</BlazorEnableTimeZoneSupport>
        <BlazorWebAssemblyPreserveCollationData>false</BlazorWebAssemblyPreserveCollationData>
        <!--/-:msbuild-conditional:noEmit -->
        <ServiceWorkerAssetsManifest Condition="'$(WebAppDeploymentType)' == 'PWA'">service-worker-assets.js</ServiceWorkerAssetsManifest>
        <BlazorCacheBootResources Condition="'$(WebAppDeploymentType)' == 'PWA'">false</BlazorCacheBootResources>
        <InvariantGlobalization Condition=" '$(MultilingualEnabled)' == 'false' ">true</InvariantGlobalization>
        <BlazorWebAssemblyLoadAllGlobalizationData Condition=" '$(MultilingualEnabled)' == 'true' ">true</BlazorWebAssemblyLoadAllGlobalizationData>
        <!-- To change MultilingualEnabled's value, checkout Directory.Build.props -->
        <!--/+:msbuild-conditional:noEmit -->
    </PropertyGroup>

    <ItemGroup>
        <!--/-:msbuild-conditional:noEmit -->
        <!-- In the Blazor Web Assembly mode, the API project will host the web client app itself -->
        <Content Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Pages\_Host.cshtml" />
        <Content Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Pages\_Layout.cshtml" />
        <Compile Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Services\Implementations\ServerSideAuthTokenProvider.cs" />
        <Compile Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Extensions\HttpRequestExtensions.cs" />
        <!--/+:msbuild-conditional:noEmit -->
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Bit.Bswup" Version="4.9.0-pre-01" />
        <PackageReference Include="Bit.CodeAnalyzers" Version="4.9.0-pre-01">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Bit.SourceGenerators" Version="4.9.0-pre-01">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <!--/-:msbuild-conditional:noEmit -->
        <PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly" Version="7.0.0" />
        <PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="7.0.0" PrivateAssets="all" />
        <!--/+:msbuild-conditional:noEmit -->
    </ItemGroup>

    <ItemGroup>
        <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" Condition="'$(WebAppDeploymentType)' == 'PWA'" />
        <ProjectReference Include="..\Shared\AdminPanel.Client.Shared.csproj" />

        <Using Include="Microsoft.JSInterop" />
        <Using Include="AdminPanel.Client.Shared.Services.Contracts" />
        <Using Include="AdminPanel.Client.Shared.Services.Implementations" />
        <Using Include="AdminPanel.Client.Shared.Components" />
    </ItemGroup>

    <ItemGroup>
        <BlazorWebAssemblyLazyLoad Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Newtonsoft.Json.dll" />
        <BlazorWebAssemblyLazyLoad Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="System.Private.Xml.dll" />
        <BlazorWebAssemblyLazyLoad Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="System.Data.Common.dll" />
    </ItemGroup>
    
</Project>
