<CascadingAuthenticationState>
    <PageTitle>AdminPanel</PageTitle>
    <Router AppAssembly="@GetType().Assembly"
            AdditionalAssemblies="@lazyLoadedAssemblies"
            OnNavigateAsync="@OnNavigateAsync">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToSignIn />
                </NotAuthorized>
                <Authorizing>
                    <LoadingComponent Color="#FFF" />
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <PageNotFound />
            </LayoutView>
        </NotFound>
        <Navigating>
            <LayoutView Layout="@typeof(MainLayout)">
                <LoadingComponent Color="#FFF" />
            </LayoutView>
        </Navigating>
    </Router>
</CascadingAuthenticationState>
                    
@code {
    private List<Assembly> lazyLoadedAssemblies = new();

#if BlazorWebAssembly && !Maui
    [Inject] private Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader { get; set; }
#endif

    private async Task OnNavigateAsync(NavigationContext args)
    {
#if BlazorWebAssembly && !Maui
        if (args.Path.Contains("analytics"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Newtonsoft.Json.dll", "System.Private.Xml.dll", "System.Data.Common.dll" });
            lazyLoadedAssemblies.AddRange(assemblies);
        }
#endif
    }
}