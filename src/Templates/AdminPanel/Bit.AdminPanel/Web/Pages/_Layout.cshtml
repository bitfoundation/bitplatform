@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@namespace AdminPanel.Pages
@inject IHttpContextAccessor ContextAccessor

@using AdminPanel.Shared.Infra;
@using Microsoft.AspNetCore.Components.Web

@{
    var isBlazorServer = BlazorModeDetector.Current.IsBlazorServer();
    var isDefaultDeploymentType = WebAppDeploymentTypeDetector.Current.IsDefault();
    var isStatic = WebAppDeploymentTypeDetector.Current.IsStatic();
    var isSsr = WebAppDeploymentTypeDetector.Current.IsSsr();
    var isPwa = WebAppDeploymentTypeDetector.Current.IsPwa();
    var shoudAddAspAppendVersion = !isPwa;
    RenderMode renderMode = isStatic
                            ? RenderMode.Static
                            : isBlazorServer
                            ? isDefaultDeploymentType || isPwa
                            ? RenderMode.Server
                            : RenderMode.ServerPrerendered
                            : isDefaultDeploymentType || isPwa
                            ? RenderMode.WebAssembly
                            : RenderMode.WebAssemblyPrerendered;


    if (renderMode is RenderMode.ServerPrerendered or RenderMode.WebAssemblyPrerendered)
    {
        var shouldRenderStaticMode = ContextAccessor?.HttpContext?.Request.ShouldRenderStaticMode();

        if (shouldRenderStaticMode is not null && shouldRenderStaticMode.Value)
        {
            renderMode = RenderMode.Static;
            isStatic = true;
        }
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="AdminPanel is a project template based on ASP.NET core, identity, web api and ef core for the server side + blazor at client side. It allows you building Android, iOS, Windows, Web applications from single code base." />
    <base href="~/" />
    <link rel="icon" href="~/favicon.ico" type="image/x-icon" asp-append-version="@shoudAddAspAppendVersion">
    <link rel="stylesheet" href="_content/Bit.BlazorUI/styles/bit.blazorui.min.css" asp-append-version="@shoudAddAspAppendVersion" />
    <link href="AdminPanel.App.styles.css" rel="stylesheet" asp-append-version="@shoudAddAspAppendVersion" />
    <component type="typeof(HeadOutlet)" render-mode="@renderMode" />
    <link rel="apple-touch-icon" sizes="512x512" href="images/icons/bit-icon-512.png" />
    <style>
        html, body, #app-container {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            background: #0D2960;
        }
    </style>
    @if (isPwa)
    {
    <link rel="manifest" href="manifest.json">
    }
</head>
<body>
    <div id="app-container">
        <component type="typeof(App.Components.LoadingComponent)" param-Color="@("#FFF")" render-mode="@RenderMode.Static" />
        @RenderBody()
    </div>

    @if (isStatic is false)
    {
        @if (isBlazorServer)
        {
            <script src="_framework/blazor.server.js" asp-append-version="@shoudAddAspAppendVersion"></script>
        }
        else
        {
            @if (isPwa)
            {
                <script src="_framework/blazor.webassembly.js" autostart=false></script>
                <script src="_content/Bit.Bswup/bit-bswup.js" scope="/" sw="service-worker.js" handler="bitBswupHandler"></script>
                <component type="typeof(Bit.Bswup.BswupProgress)" render-mode="@RenderMode.Static" param-AutoReload="true" param-AppContainer="@("#app-container")" />
            }
            else
            {
                <script src="_framework/blazor.webassembly.js" asp-append-version="@shoudAddAspAppendVersion"></script>
            }
        }

        <script src="_content/Bit.BlazorUI/scripts/bit.blazorui.min.js" asp-append-version="@shoudAddAspAppendVersion"></script>
        <script src="_content/Bit.BlazorUI.Charts/scripts/bit.blazorui.charts.min.js" asp-append-version="@shoudAddAspAppendVersion"></script>
    }

    <script src="scripts/app.js" asp-append-version="@shoudAddAspAppendVersion"></script>

    @if (isSsr)
    {
        <persist-component-state />
    }
</body>
</html>