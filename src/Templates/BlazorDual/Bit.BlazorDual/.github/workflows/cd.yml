name: BlazorDual CD

env:
  WEB_APP_DEPLOYMENT_TYPE: 'Spa'
  API_SERVER_ADDRESS: 'https://web.bitplatform.dev/api/'
  APP_SERVICE_NAME: 'app-service-td-test'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build_blazor_api_wasm:
    name: build blazor api + web assembly
    runs-on: ubuntu-22.04

    steps:
    
    - name: Checkout source code
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Switch to blazor web assembly
      run:  sed -i 's/Microsoft.NET.Sdk.Web/Microsoft.NET.Sdk.BlazorWebAssembly/g' src/BlazorDual.Web/BlazorDual.Web.csproj

    - name: Install wasm
      run:  dotnet workload install wasm-tools wasm-experimental --sdk-version=8.0.100-rc.1.23463.5
      
    - name: Update appsettings.json api server address
      uses: microsoft/variable-substitution@v1 
      with:
        files: 'src/BlazorDual.Web/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

    - name: Generate CSS/JS files
      run: dotnet build src/BlazorDual.Web/BlazorDual.Web.csproj -t:BeforeBuildTasks --no-restore

    - name: Publish
      run: dotnet publish src/BlazorDual.Api/BlazorDual.Api.csproj -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="${{ env.WEB_APP_DEPLOYMENT_TYPE }}" -p:Configuration=Release --self-contained -r linux-x64 -o ${{env.DOTNET_ROOT}}/api-web

    - name: Build migrations bundle
      run: |
        cd src/BlazorDual.Api/ && dotnet tool restore && dotnet ef migrations bundle --self-contained -r linux-x64 --project BlazorDual.Api.csproj

    - name: Upload ef migrations bundle
      uses: actions/upload-artifact@v3
      with:
        name: migrations-bundle
        path: src/BlazorDual.Api/efbundle

    - name: Upload api-web artifact
      uses: actions/upload-artifact@v3
      with:
        name: api-web-bundle
        path: ${{env.DOTNET_ROOT}}/api-web

  deploy_blazor_api_wasm:
    name: deploy blazor api + web assembly
    needs: build_blazor_api_wasm
    runs-on: ubuntu-22.04
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:

      - name: Retrieve api-web bundle
        uses: actions/download-artifact@v2
        with:
          name: api-web-bundle

      - name: Retrieve migrations bundle
        uses: actions/download-artifact@v2
        with:
          name: migrations-bundle

      - name: Update appsettings.json
        uses: microsoft/variable-substitution@v1 
        with:
          files: 'appsettings.json'
        env:
          ConnectionStrings.SqlServerConnectionString: ${{ secrets.DB_CONNECTION_STRING }}
          AppSettings.JwtSettings.IdentityCertificatePassword: ${{ secrets.API_IDENTITY_CERTIFICATE_PASSWORD }}

      - name: Delete IdentityCertificate.pfx
        run: |
            rm IdentityCertificate.pfx

      - name: Extract identity certificate from env
        uses: timheuer/base64-to-file@v1
        with:
            fileDir: './'
            fileName: 'IdentityCertificate.pfx'
            encodedString: ${{ secrets.API_IDENTITY_CERTIFICATE_FILE_BASE64 }}

      - name: Run migrations
        run: |
            chmod +x efbundle
            ./efbundle
            rm efbundle

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_PUBLISH_PROFILE }}
          package: .
