{
  "$schema": "http://json.schemastore.org/template",
  "author": "bit platform",
  "classifications": [
    "Web",
    "Blazor",
    "WebAssembly"
  ],
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "shortName": "bit-empty",
  "sourceName": "BlazorEmpty",
  "name": "bit Blazor Empty App",
  "defaultName": "BitBlazorEmpty",
  "identity": "Bit.BlazorEmpty.8.0",
  "groupIdentity": "Bit.BlazorEmpty",
  "preferNameDirectory": true,
  "precedence": "9999",
  "description": "A project template for creating a bit Blazor empty app that supports both server-side rendering and client interactivity.",
  "primaryOutputs": [
    {
      "condition": "(UseWebAssembly && (HostIdentifier == \"dotnetcli\" || HostIdentifier == \"dotnetcli-preview\"))",
      "path": "BlazorEmpty.sln"
    },
    {
      "condition": "(UseWebAssembly && HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "path": "BlazorEmpty/BlazorEmpty.csproj"
    },
    {
      "condition": "(!UseWebAssembly)",
      "path": "BlazorEmpty.csproj"
    },
    {
      "condition": "(UseWebAssembly && HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "path": "BlazorEmpty.Client/BlazorEmpty.Client.csproj"
    }
  ],
  "sources": [
    {
      "source": "./",
      "target": "./",
      "exclude": [
        ".template.config/**"
      ],
      "copyOnly": [
        "global.json",
        "**/wwwroot/**"
      ],
      "modifiers": [
        {
          "condition": "(!UseWebAssembly)",
          "exclude": [
            "BlazorEmpty.Client/**",
            "*.sln"
          ],
          "rename": {
            "BlazorEmpty/": "./"
          }
        },
        {
          "condition": "(UseWebAssembly)",
          "rename": {
            "BlazorEmpty/Components/Layout/": "./BlazorEmpty.Client/Layout/",
            "BlazorEmpty/Components/Pages/About.razor": "./BlazorEmpty.Client/Pages/About.razor",
            "BlazorEmpty/Components/Pages/About.razor.css": "./BlazorEmpty.Client/Pages/About.razor.css",
            "BlazorEmpty/Components/Pages/Home.razor": "./BlazorEmpty.Client/Pages/Home.razor",
            "BlazorEmpty/Components/Pages/Home.razor.css": "./BlazorEmpty.Client/Pages/Home.razor.css"
          }
        },
        {
          "condition": "(UseWebAssembly && InteractiveAtRoot)",
          "rename": {
            "BlazorEmpty/Components/Routes.razor": "./BlazorEmpty.Client/Routes.razor"
          }
        },
        {
          "condition": "(!UseProgramMain)",
          "exclude": [
            "BlazorEmpty/Program.Main.cs"
          ]
        },
        {
          "condition": "(UseProgramMain)",
          "exclude": [
            "BlazorEmpty/Program.cs"
          ],
          "rename": {
            "Program.Main.cs": "Program.cs"
          }
        },
        {
          "condition": "(ExcludeLaunchSettings)",
          "exclude": [
            "BlazorEmpty/Properties/launchSettings.json"
          ]
        },
        {
          "condition": "(UseWebAssembly && HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
          "exclude": [
            "*.sln"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "defaultValue": "net8.0",
      "choices": [
        {
          "choice": "net8.0",
          "description": "Target net8.0"
        }
      ],
      "replaces": "net8.0"
    },
    "InteractivityPlatform": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "Server",
      "displayName": "_Interactive render mode",
      "description": "Chooses which interactive render mode to use for interactive components",
      "choices": [
        {
          "choice": "None",
          "displayName": "None",
          "description": "No interactivity (static server rendering only)"
        },
        {
          "choice": "Server",
          "displayName": "Server",
          "description": "Runs on the server"
        },
        {
          "choice": "WebAssembly",
          "displayName": "WebAssembly",
          "description": "Runs in the browser using WebAssembly"
        },
        {
          "choice": "Auto",
          "displayName": "Auto (Server and WebAssembly)",
          "description": "Uses Server while downloading WebAssembly assets, then uses WebAssembly"
        }
      ]
    },
    "InteractivityLocation": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "InteractivePerPage",
      "displayName": "_Interactivity location",
      "description": "Chooses which components will have interactive rendering enabled",
      "isEnabled": "(InteractivityPlatform != \"None\")",
      "choices": [
        {
          "choice": "InteractivePerPage",
          "displayName": "Per page/component",
          "description": "Interactivity is applied on a per-page or per-component basis"
        },
        {
          "choice": "InteractiveGlobal",
          "displayName": "Global",
          "description": "Interactivity is applied at the root level"
        }
      ]
    },
    "UseWebAssembly": {
      "type": "computed",
      "value": "(InteractivityPlatform == \"WebAssembly\" || InteractivityPlatform == \"Auto\")"
    },
    "UseServer": {
      "type": "computed",
      "value": "(InteractivityPlatform == \"Server\" || InteractivityPlatform == \"Auto\")"
    },
    "OnlyWasm": {
      "type": "computed",
      "value": "(InteractivityPlatform == \"WebAssembly\")"
    },
    "OnlyServer": {
      "type": "computed",
      "value": "(InteractivityPlatform == \"Server\")"
    },
    "OnlyAuto": {
      "type": "computed",
      "value": "(InteractivityPlatform == \"Auto\")"
    },
    "AllInteractive": {
      "type": "parameter",
      "datatype": "bool",
      "isEnabled": "(InteractivityPlatform != \"None\")",
      "defaultValue": "false",
      "displayName": "_Enable interactive rendering globally throughout the site",
      "description": "Configures whether to make every page interactive by applying an interactive render mode at the top level. If false, pages will use static server rendering by default, and can be marked interactive on a per-page or per-component basis."
    },
    "InteractiveAtRoot": {
      "type": "computed",
      "value": "(InteractivityLocation == \"InteractiveGlobal\" || AllInteractive)"
    },
    "HostIdentifier": {
      "type": "bind",
      "binding": "HostIdentifier"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "ExcludeLaunchSettings": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to exclude launchSettings.json from the generated template."
    },
    "kestrelHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },
    "kestrelHttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 5300
      }
    },
    "kestrelHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpPort",
        "fallbackVariableName": "kestrelHttpPortGenerated"
      },
      "replaces": "5500"
    },
    "kestrelHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used."
    },
    "kestrelHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 7000,
        "high": 7300
      }
    },
    "kestrelHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpsPort",
        "fallbackVariableName": "kestrelHttpsPortGenerated"
      },
      "replaces": "5501"
    },
    "iisHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },
    "iisHttpPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "iisHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpPort",
        "fallbackVariableName": "iisHttpPortGenerated"
      },
      "replaces": "8080"
    },
    "iisHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used."
    },
    "iisHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },
    "iisHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpsPort",
        "fallbackVariableName": "iisHttpsPortGenerated"
      },
      "replaces": "44300"
    },
    "NoHttps": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to turn off HTTPS."
    },
    "HasHttpsProfile": {
      "type": "computed",
      "value": "(!NoHttps)"
    },
    "copyrightYear": {
      "type": "generated",
      "generator": "now",
      "replaces": "copyrightYear",
      "parameters": {
        "format": "yyyy"
      }
    },
    "UseProgramMain": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Do not use _top-level statements",
      "description": "Whether to generate an explicit Program class and Main method instead of top-level statements."
    }
  },
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}
