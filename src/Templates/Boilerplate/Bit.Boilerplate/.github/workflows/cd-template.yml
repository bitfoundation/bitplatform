name: Build and Deploy Template

on:
  workflow_call:
    inputs:
      ENV_NAME:
        required: true
        type: string

env:
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true

permissions:
  contents: read

jobs:

  build_api_blazor:
    name: build api + blazor web
    runs-on: ubuntu-24.04
    environment: ${{ inputs.ENV_NAME }}
    steps:

      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: global.json

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Use Bit.ResxTranslator
        run: |
          dotnet tool install --global Bit.ResxTranslator
          bit-resx-translate

      - name: Update core appsettings.json
        uses: devops-actions/variable-substitution@v1.2 
        with:
          files: 'src/**/appsettings*json'
        env:
          WebAppRender.BlazorMode: 'BlazorWebAssembly'
          ServerAddress: ${{ vars.SERVER_ADDRESS }}
#if (notifications == true)
          AdsPushVapid.PublicKey: ${{ secrets.PUBLIC_VAPIDKEY }}
#endif

      - name: Install wasm
        run:  cd src && dotnet workload install wasm-tools

      - name: Generate CSS/JS files
        run: |
          dotnet build src/Client/Boilerplate.Client.Core/Boilerplate.Client.Core.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"
          dotnet build src/Client/Boilerplate.Client.Web/Boilerplate.Client.Web.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"

      - name: Publish
        run: dotnet publish src/Server/Boilerplate.Server.Web/Boilerplate.Server.Web.csproj -c Release --self-contained -r linux-x64 -o ${{env.DOTNET_ROOT}}/server -p:Version="${{ vars.APP_VERSION }}" -p:Environment=${{ inputs.ENV_NAME }}
      - name: Upload server artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-bundle
          path: ${{env.DOTNET_ROOT}}/server
          include-hidden-files: true # Required for wwwroot/.well-known folder

  deploy_api_blazor:
    name: deploy api + blazor
    needs: build_api_blazor
    runs-on: ubuntu-24.04
    environment:
      name: ${{ inputs.ENV_NAME }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:

      - name: Retrieve server bundle
        uses: actions/download-artifact@v5
        with:
          name: server-bundle

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: .

#if (cloudflare == true)
      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
#endif

  build_blazor_hybrid_windows:
    name: build blazor hybrid (windows)
    runs-on: windows-2022
    environment: ${{ inputs.ENV_NAME }}
    steps:

      - name: Checkout source code
        uses: actions/checkout@v5
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: global.json

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Use Bit.ResxTranslator
        run: |
          dotnet tool install --global Bit.ResxTranslator
          bit-resx-translate

      - name: Update core appsettings.json
        uses: devops-actions/variable-substitution@v1.2 
        with:
          files: 'src\**\appsettings*json'
        env:
          ServerAddress: ${{ vars.SERVER_ADDRESS }}
          WindowsUpdate.FilesUrl: ${{ vars.WINDOWS_UPDATE_FILES_URL }}

      - name: Generate CSS/JS files
        run: dotnet build src\Client\Boilerplate.Client.Core\Boilerplate.Client.Core.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"

      - name: Publish
        run: |
          cd src\Client\Boilerplate.Client.Windows\
          dotnet publish Boilerplate.Client.Windows.csproj -c Release -o .\publish-result -r win-x86 -p:Version="${{ vars.APP_VERSION }}" --self-contained -p:Environment=${{ inputs.ENV_NAME }}
          dotnet tool restore
          dotnet vpk pack -u ${{ vars.APP_ID }} -v "${{ vars.APP_VERSION }}" -p .\publish-result -e Boilerplate.Client.Windows.exe -r win-x86 --framework webview2 --icon .\wwwroot\favicon.ico --packTitle '${{ vars.APP_TITLE }}'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-exe-bundle
          path: src\Client\Boilerplate.Client.Windows\Releases

  build_blazor_hybrid_android:
    name: build blazor hybrid (android)
    runs-on: ubuntu-24.04
    environment: ${{ inputs.ENV_NAME }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: global.json

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Extract Android signing key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileDir: './src/Client/Boilerplate.Client.Maui/'
          fileName: 'Boilerplate.keystore'
          encodedString: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE_BASE64 }}

      - name: Use Bit.ResxTranslator
        run: |
          dotnet tool install --global Bit.ResxTranslator
          bit-resx-translate

      - name: Update core appsettings.json
        uses: devops-actions/variable-substitution@v1.2 
        with:
          files: 'src/**/appsettings*json'
        env:
          ServerAddress: ${{ vars.SERVER_ADDRESS }}

      - name: Install maui
        run: cd src && dotnet workload install maui-android

      - name: Install Android Sdk platform tools
        run: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools"

      - name: Generate CSS/JS files
        run: |
          dotnet build src/Client/Boilerplate.Client.Core/Boilerplate.Client.Core.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"
          dotnet build src/Client/Boilerplate.Client.Maui/Boilerplate.Client.Maui.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"

      - name: Publish aab
        run: dotnet publish src/Client/Boilerplate.Client.Maui/Boilerplate.Client.Maui.csproj -c Release -p:ApplicationId=${{ vars.APP_ID }} -p:AndroidPackageFormat=aab -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="Boilerplate.keystore" -p:AndroidSigningKeyAlias=Boilerplate -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -p:Version="${{ vars.APP_VERSION }}" -p:Environment=${{ inputs.ENV_NAME }} -f net10.0-android

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle
          path: src/Client/Boilerplate.Client.Maui/bin/Release/net10.0-android/*-Signed.*

  build_blazor_hybrid_iOS:
    name: build blazor hybrid (iOS-macOS)
    runs-on: macOS-15
    environment: ${{ inputs.ENV_NAME }}

    steps:

      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: global.json

      - uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '16.4'

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Use Bit.ResxTranslator
        run: |
          dotnet tool install --global Bit.ResxTranslator
          bit-resx-translate

      - name: Update core appsettings.json
        uses: devops-actions/variable-substitution@v1.2 
        with:
          files: 'src/**/appsettings*json'
        env:
          ServerAddress: ${{ vars.SERVER_ADDRESS }}

      - name: Install maui
        run: cd src && dotnet workload install maui

      - name: Import Code-Signing Certificates
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_BASE64 }}
          p12-password: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_PASSWORD }}

      - name: Download Apple Provisioning Profiles
        uses: Apple-Actions/download-provisioning-profiles@v4
        with:
          bundle-id: ${{ vars.APP_ID }}
          issuer-id: ${{ secrets.APPSTORE_API_KEY_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_KEY_PRIVATE_KEY }}

      - name: Generate CSS/JS files
        run: |
          dotnet build src/Client/Boilerplate.Client.Core/Boilerplate.Client.Core.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"
          dotnet build src/Client/Boilerplate.Client.Maui/Boilerplate.Client.Maui.csproj -t:BeforeBuildTasks --no-restore -c Release -p:Version="${{ vars.APP_VERSION }}"

      - name: Build ipa
        run: dotnet publish src/Client/Boilerplate.Client.Maui/Boilerplate.Client.Maui.csproj -p:ApplicationId=${{ vars.APP_ID }} -p:RuntimeIdentifier=ios-arm64 -c Release -p:ArchiveOnBuild=true -p:CodesignKey="iPhone Distribution" -p:CodesignProvision="${{ vars.IOS_CODE_SIGN_PROVISION }}" -p:Version="${{ vars.APP_VERSION }}" -p:Environment=${{ inputs.ENV_NAME }} -f net10.0-ios

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-bundle
          path: src/Client/Boilerplate.Client.Maui/bin/release/net10.0-ios/ios-arm64/publish/*.ipa