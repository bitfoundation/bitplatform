<?xml version="1.0" encoding="utf-8"?>
<!-- +:cnd:noEmit -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <!-- .NET Validation messages -->
  <data name="CompareAttribute_ValidationError" xml:space="preserve">
    <value>'{0}' and '{1}' do not match.</value>
  </data>
  <data name="EmailAddressAttribute_ValidationError" xml:space="preserve">
    <value>The {0} field is not a valid e-mail address.</value>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or array type with a minimum length of '{1}'.</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <!-- Exceptions -->
  <data name="BadRequestException" xml:space="preserve">
    <value>Invalid request</value>
  </data>
  <data name="ConflictException" xml:space="preserve">
    <value>Request could not be processed because of conflict in the request</value>
  </data>
  <data name="ForbiddenException" xml:space="preserve">
    <value>Access to the requested resource is forbidden</value>
  </data>
  <data name="ResourceValidationException" xml:space="preserve">
    <value>Request data is not valid</value>
  </data>
  <data name="RestException" xml:space="preserve">
    <value>An error occurred while communicating with server</value>
  </data>
  <data name="UnauthorizedException" xml:space="preserve">
    <value>Your request lacks valid authentication credentials</value>
  </data>
  <data name="UnknownException" xml:space="preserve">
    <value>Unknown error has occurred</value>
  </data>
  <data name="UpdateConcurrencyException" xml:space="preserve">
    <value>The record was modified by another user after you got the original data. the operation was canceled.</value>
  </data>
  <data name="ResourceNotFoundException" xml:space="preserve">
    <value>Resource not found</value>
  </data>
  <data name="TooManyRequestsExceptions" xml:space="preserve">
    <value>Too many requests</value>
  </data>
  <data name="ServerConnectionException" xml:space="preserve">
    <value>Unable to connect to server.</value>
  </data>
  <!-- Boilerplate strings -->
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Alphabetical" xml:space="preserve">
    <value>Alphabetical</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EditProfileTitle" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <!--#if (offlineDb == true) -->
  <data name="OfflineEditProfileTitle" xml:space="preserve">
    <value>Offline Edit profile</value>
  </data>
  <!--#endif-->
  <data name="FullName" xml:space="preserve">
    <value>FullName</value>
  </data>
  <data name="TermsTitle" xml:space="preserve">
    <value>Terms</value>
  </data>
  <data name="ProfileUpdatedSuccessfullyMessage" xml:space="preserve">
    <value>Profile updated successfully.</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordChangedSuccessfullyMessage" xml:space="preserve">
    <value>Your password changed successfully.</value>
  </data>
  <data name="ResendConfirmationLinkMessage" xml:space="preserve">
    <value>The confirmation link has been re-sent to your email address.</value>
  </data>
  <data name="ResetPasswordLinkSentMessage" xml:space="preserve">
    <value>The reset password link has been sent to your email address.</value>
  </data>
  <data name="UserImageCouldNotBeFound" xml:space="preserve">
    <value>User image could not be found</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="WaitForResetPasswordEmailResendDelay" xml:space="preserve">
    <value>You have already requested the reset password email. Try again in {0}</value>
  </data>
  <data name="TermsAccepted" xml:space="preserve">
    <value>Is accept terms?</value>
  </data>
  <data name="YouHaveToAcceptTerms" xml:space="preserve">
    <value>You must agree to our terms.</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birthdate</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="YouNeedToSignIn" xml:space="preserve">
    <value>You must be signed in to continue.</value>
  </data>
  <data name="InvalidUsernameOrPassword" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="WaitForConfirmationEmailResendDelay" xml:space="preserve">
    <value>You have already requested the confirmation email. Try again in {0}</value>
  </data>
  <data name="EmailAlreadyConfirmed" xml:space="preserve">
    <value>Your email is already confirmed.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="AreYouSureWannaDelete" xml:space="preserve">
    <value>Are you sure you want to delete {0}</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="UserLockedOut" xml:space="preserve">
      <value>User is locked out. Try again in {0}</value>
    </data>
  <data name="UserNameNotFound" xml:space="preserve">
      <value>User {0} does not exist.</value>
    </data>
  <data name="DuplicateEmail" xml:space="preserve">
      <value>Email '{0}' is already taken.</value>
    </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AlreadyHaveAccountMessage" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="ConfirmEmailMessage" xml:space="preserve">
    <value>We have sent a confirmation link to your email address.
Please confirm your email by clicking on the link.</value>
  </data>
  <data name="ConfirmEmailTitle" xml:space="preserve">
    <value>Confirm Your Email Address</value>
  </data>
  <data name="DeleteAccount" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="DeleteAccountPrompt" xml:space="preserve">
    <value>Are you sure you want to delete your account?</value>
  </data>
  <data name="DontHaveAccountMessage" xml:space="preserve">
    <value>Don’t have an account?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EmailConfirmationFailedMessage" xml:space="preserve">
    <value>Email Confirmation Failed!</value>
  </data>
  <data name="EmailConfirmationTitle" xml:space="preserve">
    <value>Email Confirmation</value>
  </data>
  <data name="EmailConfirmedSuccessfullyMessage" xml:space="preserve">
    <value>Email Confirmed Successfully!</value>
  </data>
  <data name="FileUploadFailed" xml:space="preserve">
    <value>An error occurred while uploading file</value>
  </data>
  <data name="ForgetPasswordMessage" xml:space="preserve">
    <value>Please enter the email address you have been signed up with so we can send a reset password link to your email address.</value>
  </data>
  <data name="ForgetPasswordTitle" xml:space="preserve">
    <value>Forget password</value>
  </data>
  <data name="GenderMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="GenderOther" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="GitHubRepo" xml:space="preserve">
    <value>GitHub Repo</value>
  </data>
  <data name="GoToToday" xml:space="preserve">
    <value>Go to today</value>
  </data>
  <data name="HomeMessage" xml:space="preserve">
    <value>Create your multi-mode (WASM, Server, Hybrid, pre-rendering) Blazor app easily in the shortest time ever!</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Boilerplate Home</value>
  </data>
  <data name="InvalidConfirmationLinkMessage" xml:space="preserve">
    <value>Looks like the confirmation link either is invalid or has expired.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NotReceivedConfirmationEmailMessage" xml:space="preserve">
    <value>Haven’t you received the confirmation email?</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="ProfileImage" xml:space="preserve">
    <value>Profile Image</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ResendEmail" xml:space="preserve">
    <value>Resend email</value>
  </data>
  <data name="ResetPasswordTitle" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SignInTitle" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignOutPrompt" xml:space="preserve">
    <value>Are you sure you want to Sign out?</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SingUpTitle" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="TermsMessage" xml:space="preserve">
    <value>I agree to the</value>
  </data>
  <data name="UploadNewProfileImage" xml:space="preserve">
    <value>Upload a new profile image</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="SelectBirthDate" xml:space="preserve">
    <value>Select your birth date</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckSpamMailMessage" xml:space="preserve">
    <value>Check your Spam/Junk, if you could not find it in the Inbox.</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="CustomColor" xml:space="preserve">
    <value>Custom color</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignInAsDifferentUser" xml:space="preserve">
    <value>Sign in as different user</value>
  </data>
  <data name="YouAreSignInAs" xml:space="preserve">
    <value>You're sign in as</value>
  </data>
  <data name="ForgotPasswordLink" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="GenderFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
    <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <!--#if (sample == "Todo") -->
  <data name="TodoAddPlaceholder" xml:space="preserve">
    <value>Add a todo</value>
  </data>
  <data name="NoTodos" xml:space="preserve">
    <value>No todos yet</value>
  </data>
  <data name="TodoSearchPlaceholder" xml:space="preserve">
    <value>Search some todo...</value>
  </data>
  <data name="ToDoItemCouldNotBeFound" xml:space="preserve">
    <value>Todo item could not be found</value>
  </data>
  <data name="TodoTitle" xml:space="preserve">
    <value>Todo</value>
  </data>
  <data name="DeleteTodoItem" xml:space="preserve">
    <value>Delete todo item</value>
  </data>
  <!--#elif (sample == "Admin") -->
  <data name="Last30DaysProductCount" xml:space="preserve">
    <value>Last 30 days product count</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add product</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Select category</value>
  </data>
  <data name="TotalCategories" xml:space="preserve">
    <value>Total categories</value>
  </data>
  <data name="TotalProducts" xml:space="preserve">
    <value>Total products</value>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>Edit category</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>New category</value>
  </data>
  <data name="CategoriesPageTitle" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="EnterCategoryName" xml:space="preserve">
    <value>Enter category name</value>
  </data>
  <data name="EnterProductName" xml:space="preserve">
    <value>Enter product name</value>
  </data>
  <data name="Last30DaysCategoryCount" xml:space="preserve">
    <value>Last 30 days category count</value>
  </data>
  <data name="ProductSales" xml:space="preserve">
    <value>Product sales</value>
  </data>
  <data name="ProductSalesText" xml:space="preserve">
    <value>This chart shows the sale number of each product.</value>
  </data>
  <data name="SearchOnName" xml:space="preserve">
    <value>Search on name</value>
  </data>
  <data name="ProductsCountPerCategoryChart" xml:space="preserve">
    <value>Products count per category chart</value>
  </data>
  <data name="ProductsCountPerCategoryChartText" xml:space="preserve">
    <value>This chart shows the number of products in each category.</value>
  </data>
  <data name="ProductsPageTitle" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductsPercentagePerCategory" xml:space="preserve">
    <value>Products percentage per category</value>
  </data>
  <data name="ProductsPercentagePerCategoryText" xml:space="preserve">
    <value>This chart shows the percentage of products in each category.</value>
  </data>
  <data name="Categories" xml:space="preserve">
  <value>Categories</value>
</data>
  <data name="ProductCategory" xml:space="preserve">
  <value>Product category</value>
</data>
  <data name="Products" xml:space="preserve">
  <value>Products</value>
</data>
  <data name="ProductCouldNotBeFound" xml:space="preserve">
  <value>Product entity could not be found</value>
</data>
  <data name="CategoryNotEmpty" xml:space="preserve">
  <value>This category contain some products, so you can't delete it</value>
</data>
  <data name="AreYouSureWannaDeleteCategory" xml:space="preserve">
  <value>Are you sure you want to delete category {0}</value>
</data>
  <data name="AreYouSureWannaDeleteProduct" xml:space="preserve">
  <value>Are you sure you want to delete product {0}</value>
</data>
  <data name="DeleteCategory" xml:space="preserve">
  <value>Delete category</value>
</data>
  <data name="DeleteProduct" xml:space="preserve">
  <value>Delete product</value>
</data>
  <data name="CategoryCouldNotBeFound" xml:space="preserve">
    <value>Category entity could not be found</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="DefaultColorPicker" xml:space="preserve">
    <value>Default color picker</value>
  </data>
  <data name="EditProduct" xml:space="preserve">
    <value>Edit product</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <!--#endif -->
</root>