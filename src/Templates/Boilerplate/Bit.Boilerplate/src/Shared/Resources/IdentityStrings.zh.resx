<?xml version="1.0" encoding="utf-8"?>
<!-- +:cnd:noEmit -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>乐观并发失败，对象已被修改。</value>
    <comment>Error when optimistic concurrency fails</comment>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>发生未知错误。</value>
    <comment>Default identity result error message</comment>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>电子邮件 '{0}' 已被占用。</value>
    <comment>Error for duplicate emails</comment>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>角色名 '{0}' 已被占用。</value>
    <comment>Error for duplicate roles</comment>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>用户名 '{0}' 已被占用。</value>
    <comment>Error for duplicate user names</comment>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>电子邮件 '{0}' 无效。</value>
    <comment>Invalid email</comment>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>角色名 '{0}' 无效。</value>
    <comment>Error for invalid role names</comment>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>无效的令牌。</value>
    <comment>Error when a token is not recognized</comment>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>用户名 '{0}' 无效，只能包含字母或数字。</value>
    <comment>User names can only contain letters or digits</comment>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>该登录名的用户已存在。</value>
    <comment>Error when a login already linked</comment>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>密码错误。</value>
    <comment>Error when a password doesn't match</comment>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>密码必须至少包含一位数字（'0'-'9'）。</value>
    <comment>Error when passwords do not have a digit</comment>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>密码必须至少包含一位小写字母（'a'-'z'）。</value>
    <comment>Error when passwords do not have a lowercase letter</comment>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>密码必须至少包含一位非字母数字字符。</value>
    <comment>Error when password does not have enough non alphanumeric characters</comment>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>密码必须至少包含一位大写字母（'A'-'Z'）。</value>
    <comment>Error when passwords do not have an uppercase letter</comment>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>密码长度必须至少为 {0} 个字符。</value>
    <comment>Error message for passwords that are too short</comment>
  </data>
  <data name="RecoveryCodeRedemptionFailed" xml:space="preserve">
    <value>恢复码兑换失败。</value>
    <comment>Error when a recovery code is not redeemed.</comment>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>用户已设置密码。</value>
    <comment>Error when AddPasswordAsync called when a user already has a password</comment>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>用户已在角色 '{0}' 中。</value>
    <comment>Error when a user is already in a role</comment>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>该用户未启用锁定功能。</value>
    <comment>Error when lockout is not enabled</comment>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>用户不在角色 '{0}' 中。</value>
    <comment>Error when a user is not in the role</comment>
  </data>
  <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>密码必须包含至少 {0} 个不同字符。</value>
    <comment>Error message for passwords that are based on similar characters</comment>
  </data>
</root>