@inherits AppComponentBase

<section>
    <BitButton Float
               FloatOffset="2rem"
               OnClick="OpenPanel"
               Size="BitSize.Large"
               Class="open-panel-button"
               Color="BitColor.Secondary"
               Variant="BitVariant.Outline"
               FloatPosition="BitPosition.BottomRight"
               IconUrl="@($"_content/Boilerplate.Client.Core/images/icons/ai-icon-{currentTheme?.ToString().ToLower()}.png")" />

    <BitProPanel Modeless
                 ShowCloseButton
                 @bind-IsOpen="isOpen"
                 HeaderText="AI chat panel">
        <BitStack Class="body">
            <BitStack Grows Style="overflow:auto;padding:1rem">
                @for (int i = 0; i < conversations.Count; i++)
                {
                    var message = conversations[i];
                    if (i % 2 == 0)
                    {
                        <BitCard Background="BitColorKind.Tertiary" Style="align-self:end">
                            <BitText>@message</BitText>
                        </BitCard>
                    }
                    else
                    {
                        <BitMarkdownViewer Markdown="@message" />
                    }
                }

                @if (isCommunicating)
                {
                    @if (string.IsNullOrWhiteSpace(lastAssistantResponse))
                    {
                        <BitEllipsisLoading Size="BitSize.Small" />
                    }
                    else
                    {
                        <BitMarkdownViewer Markdown="@lastAssistantResponse" />
                    }
                }
            </BitStack>

            <BitStack FitHeight Style="position:relative">
                <BitTextField Rows="1"
                              Immediate
                              Multiline
                              Style="width:100%"
                              @ref="textFieldRef"
                              @bind-Value="@userInput"
                              Placeholder="@(isCommunicating ? "Thinking..." : "Write a message...")"
                              Styles="@(new() { FieldGroup = "padding:1rem", Input = "min-height:unset" })" />
                <BitButton Float
                           AutoLoading
                           FloatAbsolute
                           Class="send-message-button"
                           OnClick="WrapHandled(SendMessage)"
                           IsEnabled=@(string.IsNullOrEmpty(userInput) is false || isCommunicating)
                           IconName="@(isCommunicating? BitIconName.StopSolid: (currentDir is BitDir.Rtl ? BitIconName.SendMirrored : BitIconName.Send))" />
            </BitStack>
        </BitStack>
    </BitProPanel>
</section>