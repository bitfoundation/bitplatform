@inherits AppComponentBase

<div>
    <BitModal @bind-IsOpen="isOpen"
              FullSize
              Class="modal"
              Styles="@(new() { Content = "overflow:auto" })"
              OnDismiss="() => HandleOnSearchChange(null)">
        <BitStack FillContent Class="container">
            <BitStack Horizontal AutoHeight VerticalAlign="BitAlignment.Center">
                <BitText Typography="BitTypography.H3">Diagnostic</BitText>
                <BitSpacer />
                <BitButton IconOnly
                           Color="BitColor.Info"
                           Variant="BitVariant.Text"
                           OnClick="() => isOpen = false"
                           IconName="@BitIconName.ChromeClose" />
            </BitStack>

            <BitAccordion Title="Telemetry Context">
                <BitButton IconOnly
                           Color="BitColor.Info"
                           OnClick="CopyTelemetry"
                           Variant="BitVariant.Text"
                           IconName="@BitIconName.Copy" />
                <BitScrollablePane>
                    <BitStack>
                        @foreach (var (key, value) in telemetryContext.ToDictionary())
                        {
                            <BitText NoWrap><b>@key</b>: @value</BitText>
                        }
                    </BitStack>
                </BitScrollablePane>
            </BitAccordion>

            <BitStack Horizontal FitHeight Wrap>
                <BitSearchBox Immediate DebounceTime="500" OnChange="HandleOnSearchChange" />
                <BitDropdown FitWidth
                             MultiSelect
                             Items="logLevelItems"
                             DefaultValues="defaultFilterLogLevels"
                             OnValuesChange="HandleOnLogLevelFilter"
                             TItem="BitDropdownItem<LogLevel>" TValue="LogLevel" />
                <BitDropdown FitWidth
                             MultiSelect
                             ShowSearchBox
                             Items="allCategoryItems"
                             DefaultValues="defaultCategoryItems"
                             OnValuesChange="HandleOnCategoryFilter"
                             TItem="BitDropdownItem<string>" TValue="string">
                    <TextTemplate>Categories</TextTemplate>
                </BitDropdown>
                <BitButton IconOnly
                           OnClick="HandleOnSortClick"
                           Title="Sort"
                           Color="BitColor.SecondaryBackground"
                           IconName="@(isDescendingSort? BitIconName.SortDown: BitIconName.SortUp)" />
                <BitButton OnClick="ClearLogs"
                           title="Clear lgos"
                           Color="BitColor.Info"
                           Variant="BitVariant.Outline">Clear logs</BitButton>
                <BitButton IconOnly
                           OnClick="ReloadLogs"
                           Title="Reload logs"
                           IconName="@BitIconName.Refresh"
                           Color="BitColor.SecondaryBackground" />
                <BitButton IconOnly
                           OnClick="ThrowTestException"
                           Title="Throw test error"
                           IconName="@BitIconName.Error"
                           Color="BitColor.SecondaryBackground" />
                <BitButton IconOnly AutoLoading
                           OnClick="CallDiagnosticsApi"
                           Title="Call Diag API"
                           Color="BitColor.SecondaryBackground"
                           IconName="@BitIconName.DiagnosticDataViewerApp" />
                <BitButton IconOnly AutoLoading
                           OnClick="OpenDevTools"
                           Title="Open dev tools"
                           Color="BitColor.SecondaryBackground"
                           IconName="@BitIconName.DeveloperTools" />
                @if (AppPlatform.IsBrowser is false)
                {
                    <BitButton IconOnly
                               OnClick="CallGC"
                               Title="Call GC"
                               Color="BitColor.SecondaryBackground"
                               IconName="@BitIconName.RecycleBin" />
                }
                <BitButton IconOnly AutoLoading
                           OnClick="ClearCache"
                           Title="Clear cache"
                           Color="BitColor.SecondaryBackground"
                           IconName="@BitIconName.Clear" />
            </BitStack>

            <BitBasicList @ref="logStackRef"
                          Style="height:unset"
                          EnableVirtualization
                          Items="filteredLogs.Indexed().ToArray()">
                <EmptyContent>Nothing to show!</EmptyContent>
                <RowTemplate Context="logIndex">
                    <BitStack @key="logIndex.item.CreatedOn" Horizontal AutoHeight VerticalAlign="BitAlignment.Center">
                        <BitText Style="min-width:7rem">@($"{logIndex.index + 1}. [{logIndex.item.CreatedOn.ToString("HH:mm:ss")}]")</BitText>
                        <BitButton IconOnly
                                   Title="Copy"
                                   Color="BitColor.Info"
                                   Variant="BitVariant.Text"
                                   IconName="@BitIconName.Copy"
                                   OnClick="() => CopyException(logIndex.item)" />
                        <BitButton IconOnly
                                   Title="Details"
                                   Color="BitColor.Info"
                                   Variant="BitVariant.Text"
                                   IconName="@BitIconName.GiftboxOpen"
                                   OnClick="() => OpenLog(logIndex.item)" />
                        <BitText Style="white-space:nowrap" Color="GetColor(logIndex.item.Level)">[@logIndex.item.Category]</BitText>
                        <BitText Style="white-space:nowrap">@logIndex.item.Message</BitText>
                    </BitStack>
                </RowTemplate>
            </BitBasicList>
        </BitStack>

        <BitButton IconOnly
                   OnClick="GoTop"
                   Color="BitColor.Info"
                   Class="go-top-button"
                   Variant="BitVariant.Text"
                   IconName="@BitIconName.Up" />
    </BitModal>

    <BitModal @bind-IsOpen="isLogModalOpen">
        <div style="padding:1rem;">
            <BitStack Horizontal AutoHeight VerticalAlign="BitAlignment.Center">
                <BitText Typography="BitTypography.H6">Log details</BitText>
                <BitButton IconOnly
                           Title="Copy"
                           Color="BitColor.Info"
                           Variant="BitVariant.Text"
                           IconName="@BitIconName.Copy"
                           OnClick="() => CopyException(selectedLog)" />
                <BitSpacer />
                <BitButton IconOnly
                           Color="BitColor.Info"
                           Variant="BitVariant.Text"
                           OnClick="() => isLogModalOpen = false"
                           IconName="@BitIconName.ChromeClose" />
            </BitStack>
            <br />
            <BitText Class="log-modal" Color="GetColor(selectedLog?.Level)">
                <pre style="margin:0">@GetContent(selectedLog)</pre>
            </BitText>
        </div>
    </BitModal>
</div>