@attribute [Route(Urls.ResetPasswordPage)]
@inherits AppComponentBase

<PageTitle>@Localizer[nameof(AppStrings.ResetPassword)]</PageTitle>

<div class="page-container">
    <div class="form">
        @if (string.IsNullOrEmpty(errorMessage) is false)
        {
            <BitMessage Multiline Class="form-message-bar" Color="BitColor.Error" OnDismiss="() => errorMessage = null">
                @errorMessage
            </BitMessage>
        }

        <BitText Typography="BitTypography.H4" Gutter>
            @Localizer[nameof(AppStrings.ResetPasswordTitle)]
        </BitText>

        @if (isPasswordChanged is false)
        {
            <BitText Typography="BitTypography.Subtitle1" Gutter>
                @Localizer[nameof(AppStrings.ResetPasswordSubtitle)]
                <br />
                @Localizer[nameof(AppStrings.ResetPasswordMessage)]
            </BitText>
            <br />
            <EditForm Model="model" OnValidSubmit="WrapHandled(Submit)" class="reset-form">
                <AppDataAnnotationsValidator />

                @if (showEmail)
                {
                    <div class="form-input-container">
                        <BitTextField @bind-Value="model.Email"
                                      Type="BitTextFieldType.Tel"
                                      Label="@Localizer[nameof(AppStrings.Email)]"
                                      IsEnabled="string.IsNullOrEmpty(EmailQueryString)"
                                      Placeholder="@Localizer[nameof(AppStrings.EmailPlaceholder)]" />
                        <ValidationMessage For="@(() => model.Email)" />
                    </div>
                }

                @if (showPhone)
                {
                    <div class="form-input-container">
                        <BitTextField @bind-Value="model.PhoneNumber"
                                      Type="BitTextFieldType.Tel"
                                      Label="@Localizer[nameof(AppStrings.PhoneNumber)]"
                                      IsEnabled="string.IsNullOrEmpty(PhoneNumberQueryString)"
                                      Placeholder="@Localizer[nameof(AppStrings.PhoneNumberPlaceholder)]" />
                        <ValidationMessage For="@(() => model.PhoneNumber)" />
                    </div>
                }

                <div class="form-input-container">
                    <BitTextField @bind-Value="model.Token"
                                  Type="BitTextFieldType.Number"
                                  Label="@Localizer[nameof(AppStrings.Token)]"
                                  Placeholder="@Localizer[nameof(AppStrings.TokenPlaceholder)]" />
                    <ValidationMessage For="@(() => model.Token)" />
                </div>

                <div class="form-input-container">
                    <BitTextField @bind-Value="model.Password"
                                  CanRevealPassword="true"
                                  AutoComplete="new-password"
                                  Type="BitTextFieldType.Password"
                                  Label="@Localizer[nameof(AppStrings.Password)]"
                                  Placeholder="@Localizer[nameof(AppStrings.PasswordPlaceholder)]" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>

                <div class="form-input-container">
                    <BitTextField @bind-Value="model.ConfirmPassword"
                                  CanRevealPassword="true"
                                  AutoComplete="new-password"
                                  Type="BitTextFieldType.Password"
                                  Label="@Localizer[nameof(AppStrings.ConfirmPassword)]"
                                  Placeholder="@Localizer[nameof(AppStrings.ConfirmPassword)]" />
                    <ValidationMessage For="@(() => model.ConfirmPassword)" />
                </div>

                <br />

                <BitButton IsLoading="isWaiting" ButtonType="BitButtonType.Submit">
                    @Localizer[nameof(AppStrings.ResetPasswordButtonText)]
                </BitButton>
            </EditForm>
        }
        else
        {
            <BitText Typography="BitTypography.H5" Gutter>
                @Localizer[nameof(AppStrings.ResetPasswordSuccessTitle), model.PhoneNumber!]
            </BitText>
            <br />
            <BitText Typography="BitTypography.Subtitle1" Gutter>
                @Localizer[nameof(AppStrings.ResetPasswordSuccessBody)]
            </BitText>
            <br />
            <BitLink Href="@Urls.SignInPage">
                @Localizer[nameof(AppStrings.SignIn)]
            </BitLink>
        }
    </div>
</div>
