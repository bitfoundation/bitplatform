@attribute [Route(Urls.TodoPage)]
@inherits AppComponentBase

<PageTitle>@Localizer[nameof(AppStrings.TodoTitle)]</PageTitle>

<div class="page-container">
    <div class="search-box-container">
        <BitSearchBox @ref="searchBox"
                      Style="width: 300px"
                      OnChange="SearchTodoItems"
                      OnClear="@(() => SearchTodoItems(""))"
                      Placeholder="@Localizer[nameof(AppStrings.TodoSearchPlaceholder)]" />
    </div>

    <div class="todo-content">
        <h1 class="main-title">@Localizer[nameof(AppStrings.TodoTitle)]</h1>
        <div class="add-todo-container">
            <BitTextField @bind-Value="newTodoTitle"
                          Class="add-todo-input"
                          Immediate DebounceTime="300"
                          Placeholder="@Localizer[nameof(AppStrings.TodoAddPlaceholder)]" />
            <BitButton IsLoading="isAdding"
                       OnClick="WrapHandled(AddTodoItem)"
                       Title="@Localizer[nameof(AppStrings.Add)]"
                       IsEnabled="(string.IsNullOrWhiteSpace(newTodoTitle) is false)">
                @Localizer[nameof(AppStrings.Add)]
            </BitButton>
        </div>

        <div class="todo-list-container">
            <div class="filter-container">
                <BitPivot SelectedKey="@selectedFilter" SelectedKeyChanged="FilterTodoItems">
                    <BitPivotItem Key="@nameof(AppStrings.All)" Class="todo-pivot-tab" HeaderText="@Localizer[nameof(AppStrings.All)]" />
                    <BitPivotItem Key="@nameof(AppStrings.Active)" Class="todo-pivot-tab" HeaderText="@Localizer[nameof(AppStrings.Active)]" />
                    <BitPivotItem Key="@nameof(AppStrings.Completed)" Class="todo-pivot-tab" HeaderText="@Localizer[nameof(AppStrings.Completed)]" />
                </BitPivot>
                <div class="sort-drp-container">
                    <BitDropdown Class="sort-todo-drp"
                                 Items="sortItems"
                                 OnSelectItem="(BitDropdownItem<string> item) => SortTodoItems(item)"
                                 DefaultValue="@sortItems[0].Value"
                                 IsResponsive="true">
                        <CaretDownTemplate>
                            <BitIcon IconName="@BitIconName.Sort" Class="sort-todo-icn" />
                        </CaretDownTemplate>
                    </BitDropdown>
                </div>
            </div>

            <div class="todo-list">
                @if (isLoading)
                {
                    <div class="todo-list-spinner">
                        <BitRingLoading />
                    </div>
                }
                else
                {
                    if (viewTodoItems?.Any() is false or null)
                    {
                        <div class="todo-list--empty-state">
                            <img src="/_content/Boilerplate.Client.Core/images/backgrounds/empty-todo-list-bg.svg">
                            <BitLabel>@Localizer[nameof(AppStrings.NoTodos)]</BitLabel>
                        </div>
                    }
                    else
                    {
                        <BitBasicList Style="width: 100%; height: inherit"
                                      Items="viewTodoItems"
                                      EnableVirtualization="true">
                            <RowTemplate Context="todo">
                                <div class="todo-item@(todo.IsInEditMode ? " edit-mode" : "")" role="listitem" @key=@todo.Id>
                                    @if (todo.IsInEditMode)
                                    {
                                        <BitTextField Class="todo-input" @bind-Value="underEditTodoItemTitle" />
                                        <div class="edit-btn-group">
                                            <BitButton Title="@Localizer[nameof(AppStrings.Edit)]" OnClick="WrapHandled(() => SaveTodoItem(todo))">
                                                @Localizer[nameof(AppStrings.Save)]
                                            </BitButton>
                                            <BitButton Variant="BitVariant.Outline"
                                                       Class="todo-button"
                                                       Title="@Localizer[nameof(AppStrings.Cancel)]"
                                                       OnClick="WrapHandled(() => ToggleEditMode(todo))">
                                                @Localizer[nameof(AppStrings.Cancel)]
                                            </BitButton>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="todo-info@(todo.IsDone ? " done" : "")">
                                            <BitCheckbox Label="@todo.Title"
                                                         DefaultValue="todo.IsDone"
                                                         OnChange="() => ToggleIsDone(todo)" />

                                            <div Class="todo-item-date">
                                                @todo.Date.ToLocalTime().ToString("yyyy MMMM dd, HH:mm:ss")
                                            </div>
                                        </div>

                                        <div class="todo-btn-group">
                                            <BitButton IconName="@BitIconName.Edit"
                                                       Variant="BitVariant.Text"
                                                       Title="@Localizer[nameof(AppStrings.Edit)]"
                                                       OnClick="WrapHandled(() => ToggleEditMode(todo))" />

                                            <BitButton Color="BitColor.Error"
                                                       Variant="BitVariant.Text"
                                                       IconName="@BitIconName.Delete"
                                                       Title="@Localizer[nameof(AppStrings.Remove)]"
                                                       OnClick="WrapHandled(() => DeleteTodoItem(todo))" />
                                        </div>
                                    }
                                </div>
                            </RowTemplate>
                        </BitBasicList>
                    }
                }
            </div>
        </div>
    </div>
</div>

<ConfirmMessageBox @ref=confirmMessageBox />