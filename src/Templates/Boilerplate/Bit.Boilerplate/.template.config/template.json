{
    "$schema": "http://json.schemastore.org/template",
    "author": "bit platform",
    "classifications": [
        "ASP.NET Core",
        "Blazor",
        "MAUI"
    ],
    "tags": {
        "language": "C#",
        "type": "solution"
    },
    "identity": "Bit.Boilerplate",
    "name": "bit Boilerplate",
    "shortName": "bit-bp",
    "sourceName": "Boilerplate",
    "preferNameDirectory": true,
    "symbols": {
        //Guid generator for App Id
        "ApplicationIdGuid": {
            "type": "generated",
            "generator": "guid",
            "replaces": "AC87AA5B-4B37-4E52-8468-2D5DF24AF256",
            "parameters": {
                "defaultFormat": "D" //Guid format 
            }
        },
        "SeedDataProductCreatedOn": {
            "type": "generated",
            "generator": "now",
            "replaces": "2022-07-12",
            "parameters": {
                "format": "yyyy-MM-dd"
            }
        },
        "database": {
            "displayName": "Backend database",
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "SqlServer",
            "choices": [
                {
                    "choice": "SqlServer",
                    "description": "Sql Server"
                },
                {
                    "choice": "Sqlite",
                    "description": "Sqlite"
                },
                {
                    "choice": "PostgreSQL",
                    "description": "PostgreSQL"
                },
                {
                    "choice": "Other",
                    "description": "You can install and configure any database supported by ef core (https://learn.microsoft.com/en-us/ef/core/providers)"
                }
            ],
            "description": "Boilerplate's API uses EF Core. You can use SQL Server, SQLite, or any other EF Core provider."
        },
        "filesStorage": {
            "displayName": "Files storage",
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "Local",
            "choices": [
                {
                    "choice": "Local",
                    "description": "Use either the local App_Data folder or the /container_volume for Docker containers."
                },
                {
                    "choice": "AzureBlobStorage",
                    "description": "Azure blob storage"
                },
                {
                    "choice": "Other",
                    "description": "You can install and configure any storage supported by fluent storage (https://github.com/robinrodricks/FluentStorage/wiki/Blob-Storage)"
                }
            ],
            "description": "Boilerplate's API uses Fluent Storage. You can use any other fluent storage provider (https://github.com/robinrodricks/FluentStorage/wiki/Blob-Storage)"
        },
        "captcha": {
            "displayName": "Captcha",
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "reCaptcha",
            "choices": [
                {
                    "choice": "reCaptcha",
                    "description": "Google reCaptcha"
                },
                {
                    "choice": "None",
                    "description": "None"
                }
            ]
        },
        "serverUrl": {
            "displayName": "Server url",
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "use-your-server-url-here.com",
            "description": "The backend server url. You can change its value later if needed."
        },
        "normalizedServerUrl": {
            "type": "generated",
            "generator": "regex",
            "dataType": "string",
            "parameters": {
                "source": "serverUrl",
                "steps": [
                    {
                        "regex": "^(https|http):\/\/",
                        "replacement": ""
                    }
                ]
            },
            "replaces": "use-your-server-url-here.com"
        },
        "pipeline": {
            "displayName": "CI-CD pipeline",
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "GitHub",
            "choices": [
                {
                    "choice": "GitHub",
                    "description": "GitHub actions"
                },
                {
                    "choice": "Azure",
                    "description": "Azure DevOps pipelines"
                },
                {
                    "choice": "None",
                    "description": "None"
                }
            ]
        },
        "sample": {
            "displayName": "Sample",
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "None",
            "choices": [
                {
                    "choice": "Admin",
                    "description": "Admin Panel"
                },
                {
                    "choice": "Todo",
                    "description": "Todo app"
                },
                {
                    "choice": "None",
                    "description": "None"
                }
            ]
        },
        "offlineDb": {
            "displayName": "Add Offline db?",
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add support for EF Core DbContext on the client side. If your app doesn't need offline data storage, we recommend not enabling this feature."
        },
        "windows": {
            "displayName": "Add Windows project?",
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "WPF-based Windows project supporting Windows 7 SP1 and above."
        },
        "appInsights": {
            "displayName": "Add Azure application insights to project?",
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "appCenter": {
            "displayName": "Add Visual Studio AppCenter to project?",
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "nameToLower": {
            "type": "generated",
            "generator": "casing",
            "parameters": {
                "source": "name",
                "toLower": true
            }
        },
        "nameToAppId": {
            "type": "generated",
            "generator": "regex",
            "dataType": "string",
            "parameters": {
                "source": "nameToLower",
                "steps": [
                    {
                        "regex": "[^a-z0-9_\\.]",
                        "replacement": ""
                    }
                ]
            }
        },
        "defaultAppId": {
            "type": "generated",
            "generator": "join",
            "parameters": {
                "symbols": [
                    {
                        "type": "const",
                        "value": "com.companyname."
                    },
                    {
                        "type": "ref",
                        "value": "nameToAppId"
                    }
                ]
            },
            "replaces": "com.bitplatform.template"
        },
        "serverWebPortGenerated": {
            "type": "generated",
            "generator": "port",
            "parameters": {
                "low": 5000,
                "high": 5000
            },
            "replaces": "5030"
        },
        "serveApiPortGenerated": {
            "type": "generated",
            "generator": "port",
            "parameters": {
                "low": 5001,
                "high": 5300
            },
            "replaces": "5031"
        },
        "clientWebPortGenerated": {
            "type": "generated",
            "generator": "port",
            "parameters": {
                "low": 4000,
                "high": 4300
            },
            "replaces": "4030"
        }
    },
    "postActions": [],
    "primaryOutputs": [
        {
            "path": "Boilerplate.sln"
        }
    ],
    "sources": [
        {
            "modifiers": [
                {
                    "copyOnly": [
                        "global.json",
                        "**/HomePage.razor",
                        "**/*.svg",
                        "**/*.png"
                    ],
                    "exclude": [
                        ".vs/**",
                        "**/[Bb]in/**",
                        "**/[Oo]bj/**",
                        ".template.config/**",
                        "**/*.filelist",
                        "**/*.user",
                        "**/*.lock.json",
                        "**/.git/**",
                        "**/*.nuspec",
                        "src/Server/**/Data/Migrations/**",
                        "src/**/App_Data/**"
                    ]
                },
                {
                    "condition": "(pipeline != GitHub)",
                    "exclude": [
                        ".github/**"
                    ]
                },
                {
                    "condition": "(pipeline != Azure)",
                    "exclude": [
                        ".azure-devops/**"
                    ]
                },
                {
                    "condition": "(sample != Admin)",
                    "exclude": [
                        "src/Shared/Dtos/Categories/**",
                        "src/Shared/Dtos/Dashboard/**",
                        "src/Shared/Dtos/Products/**",
                        "src/Server/Boilerplate.Server.Api/Controllers/Categories/**",
                        "src/Server/Boilerplate.Server.Api/Controllers/Products/**",
                        "src/Server/Boilerplate.Server.Api/Controllers/Dashboard/**",
                        "src/Server/Boilerplate.Server.Api/Data/Configurations/Category/**",
                        "src/Server/Boilerplate.Server.Api/Data/Configurations/Product/**",
                        "src/Server/Boilerplate.Server.Api/Mappers/CategoriesMapper.cs",
                        "src/Server/Boilerplate.Server.Api/Mappers/ProductsMapper.cs",
                        "src/Server/Boilerplate.Server.Api/Models/Categories/**",
                        "src/Server/Boilerplate.Server.Api/Models/Products/**",
                        "src/Shared/Controllers/Categories/**",
                        "src/Shared/Controllers/Products/**",
                        "src/Shared/Controllers/Dashboard/**",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Categories/**",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Dashboard/**",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Products/**"
                    ]
                },
                {
                    "condition": "(sample != Todo)",
                    "exclude": [
                        "src/Shared/Dtos/Todo/**",
                        "src/Server/Boilerplate.Server.Api/Controllers/Todo/**",
                        "src/Server/Boilerplate.Server.Api/Mappers/TodoMapper.cs",
                        "src/Server/Boilerplate.Server.Api/Models/Todo/**",
                        "src/Shared/Controllers/Todo/**",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Todo/**"
                    ]
                },
                {
                    "condition": "(offlineDb != true)",
                    "exclude": [
                        "src/Client/Boilerplate.Client.Core/Data/**",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Offline/**"
                    ]
                },
                {
                    "condition": "(windows != true)",
                    "exclude": [
                        "src/Client/Boilerplate.Client.Windows/**"
                    ]
                },
                {
                    "condition": "(captcha != reCaptcha)",
                    "exclude": [
                        "src/Server/Boilerplate.Server.Api/Services/GoogleRecaptchaHttpClient.cs",
                        "src/Server/Boilerplate.Server.Api/Services/GoogleRecaptchaVerificationResponse.cs",
                        "src/Client/Boilerplate.Client.Core/Components/Pages/Identity/GoogleRecaptcha.razor"
                    ]
                },
                {
                    "condition": "(appInsights != true)",
                    "exclude": [
                        "src/Client/Boilerplate.Client.Maui/Services/MauiTelemetryInitializer.cs",
                        "src/Client/Boilerplate.Client.Windows/Services/WindowsTelemetryInitializer.cs"
                    ]
                },
                {
                    "condition": "(database != PostgreSQL)",
                    "exclude": [
                        "src/Server/Boilerplate.Server.Api/Data/Configurations/PostgresDateTimeOffsetConverter.cs"
                    ]
                }
            ]
        }
    ]
}