<CascadingAuthenticationState>
    <PageTitle>TodoTemplate</PageTitle>
    <Router @ref="router"
            AppAssembly="@GetType().Assembly"
            AdditionalAssemblies="@lazyLoadedAssemblies"
            OnNavigateAsync="@OnNavigateAsync">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToSignIn />
                </NotAuthorized>
                <Authorizing>
                    <LoadingComponent Color="#FFF" />
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <PageNotFound />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private List<Assembly> lazyLoadedAssemblies = new();

#if BlazorWebAssembly && !Maui
    [Inject] private Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader { get; set; } = default!;
#endif

    private Router router = default!;

    public static RenderFragment Loading = __builder =>
    {
        <LayoutView Layout="@typeof(MainLayout)">
            <LoadingComponent Color="#FFF" />
        </LayoutView>
    };

    private async Task OnNavigateAsync(NavigationContext args)
    {
#if BlazorWebAssembly && !Maui
        if (args.Path.Contains("some-lazy-loaded-page") && lazyLoadedAssemblies.Any(asm => asm.GetName().Name == "SomeAssembly") is false)
        {
            try
            {
                router.Navigating = Loading; // https://github.com/dotnet/aspnetcore/issues/42902
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "SomeAssembly.dll" });
                lazyLoadedAssemblies.AddRange(assemblies);
            }
            finally
            {
                router.Navigating = null;
            }
        }
#endif
    }
}