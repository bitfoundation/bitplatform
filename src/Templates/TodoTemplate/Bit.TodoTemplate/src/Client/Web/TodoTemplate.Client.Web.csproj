<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <!--If you don't need to use the time zone and your app is in WASM format, you can reduce the output size of the app by disabling the time zone.-->
        <BlazorEnableTimeZoneSupport>true</BlazorEnableTimeZoneSupport>
		<BlazorWebAssemblyPreserveCollationData>false</BlazorWebAssemblyPreserveCollationData>
        <!--/-:msbuild-conditional:noEmit -->
        <ServiceWorkerAssetsManifest Condition="$(WebAppDeploymentType.Contains('Pwa'))">service-worker-assets.js</ServiceWorkerAssetsManifest>
        <BlazorCacheBootResources Condition="$(WebAppDeploymentType.Contains('Pwa'))">false</BlazorCacheBootResources>
        <InvariantGlobalization Condition=" '$(MultilingualEnabled)' == 'false' ">true</InvariantGlobalization>
        <BlazorWebAssemblyLoadAllGlobalizationData Condition=" '$(MultilingualEnabled)' == 'true' ">true</BlazorWebAssemblyLoadAllGlobalizationData>
        <!-- To change MultilingualEnabled's value, checkout Directory.Build.props -->
        <EmccInitialHeapSize Condition="'$(EmccInitialHeapSize)' == ''">16777216</EmccInitialHeapSize>
        <!--/+:msbuild-conditional:noEmit -->
    </PropertyGroup>

    <ItemGroup>
        <Watch Include="..\Shared\**\*.razor" />
        <Watch Include="..\Shared\**\*.css" Exclude="node_modules\**\*;**\*.css.map;obj\**\*;bin\**\*" />
    </ItemGroup>

    <ItemGroup>
        <!--/-:msbuild-conditional:noEmit -->
        <!-- In the Blazor Web Assembly mode, the API project will host the web client app itself -->
        <Content Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Pages\_Host.cshtml" />
        <Content Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Pages\_Layout.cshtml" />
        <Compile Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Services\Implementations\ServerSideAuthTokenProvider.cs" />
        <Compile Condition=" '$(BlazorMode)' != 'BlazorServer' " Remove="Extensions\HttpRequestExtensions.cs" />
        <!--/+:msbuild-conditional:noEmit -->
    </ItemGroup>

    <ItemGroup>
		<PackageReference Include="Bit.Bup" Version="5.2.0-pre-01" />
        <PackageReference Include="Bit.Bswup" Version="5.2.0-pre-01" />
        <PackageReference Include="Bit.CodeAnalyzers" Version="5.2.0-pre-01">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Bit.SourceGenerators" Version="5.2.0-pre-01">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <!--/-:msbuild-conditional:noEmit -->
        <PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly" Version="7.0.9" />
        <PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="7.0.9" PrivateAssets="all" />
        <!--/+:msbuild-conditional:noEmit -->

        <Using Include="Microsoft.JSInterop" />
        <Using Include="TodoTemplate.Client.Core.Services.Contracts" />
        <Using Include="TodoTemplate.Client.Core.Services.Implementations" />
        <Using Include="TodoTemplate.Client.Core.Components" />
    </ItemGroup>

    <ItemGroup>
        <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" Condition="$(WebAppDeploymentType.Contains('Pwa'))" />
        <ProjectReference Include="..\Core\TodoTemplate.Client.Core.csproj" />
    </ItemGroup>

    <ItemGroup Condition=" '$(UseElectron)' == 'true' ">
        <Content Update="electron.manifest.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <PackageReference Include="ElectronNET.API" Version="23.6.1" />
    </ItemGroup>

    <ItemGroup>
      <Content Include=".config\dotnet-tools.json" />
    </ItemGroup>

    <Target Name="InstallElectronDotNet" BeforeTargets="BeforeBuild">
        <Exec Command="dotnet electronize version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCodeElectronDotNet" />
        </Exec>
        <Exec Condition="'$(UseElectron)' == 'true' AND '$(ErrorCodeElectronDotNet)' != '0'" Command="dotnet tool restore"></Exec>
    </Target>

</Project>
