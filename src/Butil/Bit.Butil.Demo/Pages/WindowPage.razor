@page "/window"
@implements IDisposable
@inject Bit.Butil.Console console
@inject Bit.Butil.Window window

<PageTitle>Window Samples</PageTitle>

<h1>Window</h1>

<pre style="font-family:Consolas">
@@inject Bit.Butil.Window window

@@code {
    ...
    await window.AddEventListener(ButilEvents.KeyDown, args => { ... });
    ...
}
</pre>

<br />
<hr />

<h4>Open the DevTools and start pressing keys or clicking on buttons</h4>

<hr />
<br />

<button @onclick=AddEventListener>AddEventListener</button>&nbsp;<button @onclick=RemoveEventListener>RemoveEventListener</button>
<br />
<br />
<div>Is KeyDown Registered? @isKeyDownRegistered</div>

<br />
<hr />
<br />

<button @onclick=AddBeforeUnload>AddBeforeUnload</button>&nbsp;<button @onclick=RemoveBeforeUnload>RemoveBeforeUnload</button>
<br />
<br />
<div>Is BeforeUnload Registered? @isBeforeUnloadRegistered</div>

<br />
<hr />
<br />

<button @onclick=GetInnerHeight>GetInnerHeight</button>&nbsp;<button @onclick=GetInnerWidth>GetInnerWidth</button>

@code {
    private bool isKeyDownRegistered;
    private bool isBeforeUnloadRegistered;

    private Action<ButilKeyboardEventArgs> _handler = default!;

    protected override void OnInitialized()
    {
        _handler = (ButilKeyboardEventArgs arg) => _ = console.Log("KeyDown from C#:", arg.Code);

        base.OnInitialized();
    }

    private void AddEventListener()
    {
        _ = window.AddEventListener(ButilEvents.KeyDown, _handler);
        isKeyDownRegistered = true;
    }

    private void RemoveEventListener()
    {
        _ = window.RemoveEventListener(ButilEvents.KeyDown, _handler);
        isKeyDownRegistered = false;
    }

    private void AddBeforeUnload()
    {
        _ = window.AddBeforeUnload();
        isBeforeUnloadRegistered = true;
    }

    private void RemoveBeforeUnload()
    {
        _ = window.RemoveBeforeUnload();
        isBeforeUnloadRegistered = false;
    }

    private async Task GetInnerHeight()
    {
        await console.Log("Window InnerHeight =", await window.GetInnerHeight());
    }

    private async Task GetInnerWidth()
    {
        await console.Log("Window InnerWidth =", await window.GetInnerWidth());
    }

    public void Dispose()
    {
        if (isKeyDownRegistered)
        {
            _ = window.RemoveEventListener(ButilEvents.KeyDown, _handler);
        }
    }
}