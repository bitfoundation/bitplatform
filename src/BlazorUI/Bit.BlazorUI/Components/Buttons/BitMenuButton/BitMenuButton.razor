@namespace Bit.BlazorUI
@inherits BitComponentBase
@typeparam TItem

@if (ChildContent is not null)
{
    <CascadingValue Value="this" IsFixed="true">
        @ChildContent
    </CascadingValue>
}

<button @ref="RootElement" @attributes="HtmlAttributes" @onclick="OpenCallout"
        id="@UniqueId"
        style="@StyleBuilder.Value"
        class="@ClassBuilder.Value"
        type="@_buttonType.GetValue()"
        tabindex="@(IsEnabled ? 0 : -1)"
        aria-label="@AriaLabel"
        aria-hidden="@AriaHidden"
        aria-describedby="@AriaDescription">
    @if (HeaderTemplate is not null)
    {
        @HeaderTemplate
    }
    else
    {
        @if (IconName.HasValue())
        {
            <i class="bit-icon bit-icon--@IconName" />
        }
        <span class="bit-mnb-txt">@Text</span>
        <i class="bit-icon bit-icon--ChevronDown" />
    }

    <div id="@_overlayId" class="bit-mnb-ovl" @onclick="CloseCallout" @onclick:stopPropagation></div>
    <div id="@_calloutId" class="bit-mnb-cal" tabindex="@(IsEnabled ? 0 : -1)">
        <ul role="presentation">
            @foreach (TItem item in _items)
            {
                var isEnabled = GetIsEnabled(item);
                <li role="presentation">
                    <button @onclick="() => HandleOnItemClick(item)" @onclick:stopPropagation
                            role="menuitem"
                            type="@_buttonType.GetValue()"
                            aria-disabled="@isEnabled"
                            tabindex="@(isEnabled ? 0 : -1)"
                            style="@GetStyle(item)"
                            class="bit-mnb-itm @(isEnabled ? "" : "bit-dis") @GetClass(item)">
                        @if (ItemTemplate is not null)
                        {
                            @ItemTemplate(item)
                        }
                        else
                        {
                            var iconName = GetIconName(item);
                            @if (iconName.HasValue())
                            {
                                <i class="bit-icon bit-icon--@iconName" />
                            }
                            <span class="bit-mnb-txt">@GetText(item)</span>
                        }
                    </button>
                </li>
            }
        </ul>
    </div>
</button>