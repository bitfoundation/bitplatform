@namespace Bit.BlazorUI
@inherits BitInputBase<TValue>
@typeparam TValue

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">
    @if (IconName.HasValue || Label.HasValue() || LabelTemplate != null)
    {
        <div class="bit-ntf-lbl-wrapper">
            @if (IconName.HasValue)
            {
                <i class="bit-icon bit-icon--@IconName.GetName() bit-icon--l"
                   aria-hidden="true"
                   role="@GetIconRole"
                   aria-label="@IconAriaLabel"></i>
            }

            @if (LabelTemplate != null)
            {
                <label id="@GetLabelId" for="@_inputId">@LabelTemplate</label>
            }
            else if (Label.HasValue())
            {
                <label id="@GetLabelId" for="@_inputId">@Label</label>
            }

        </div>
    }

    <div class="bit-ntf-wrapper"
         title="@Title"
         aria-label="@AriaLabel"
         aria-setsize="@AriaSetSize"
         aria-posinset="@AriaPositionInSet">
        <input value="@_intermediateValue"
               id="@_inputId"
               type="text"
               autocomplete="off"
               role="spinbutton"
               placeholder="@Placeholder"
               aria-labelledby="@GetLabelId"
               aria-valuenow="@GetAriaValueNow"
               aria-valuetext="@GetAriaValueText"
               aria-valuemin="@Min"
               aria-valuemax="@Max"
               aria-describedby="@AriaDescription"
               aria-disabled="@(IsEnabled is false)"
               disabled="@(IsEnabled is false || (ValueHasBeenSet && ValueChanged.HasDelegate is false))"
               class="bit-ntf-input"
               @ref="@_inputRef"
               @onfocus="e => HandleOnFocus(e)"
               @onblur="e => HandleOnBlur(e)"
               @oninput="e => HandleOnChange(e)"
               @onchange="e => HandleOnChange(e)"
               @onkeydown="e => HandleOnKeyDown(e)"
               @attributes="@InputHtmlAttributes" />
        @if (ShowArrows)
        {
            <span class="bit-ntf-arrows">
                <button type="button"
                        class="bit-ntf-arrow-up"
                        disabled="@(IsEnabled is false)"
                        aria-disabled="@(IsEnabled is false)"
                        date-is-focusable="false"
                        tabindex="-1"
                        aria-label="@IncrementAriaLabel"
                        @ref="_buttonIncrement"
                        @onmousedown="e => HandleOnMouseDown(BitNumericTextFieldAction.Increment, e)"
                        @onmouseout="HandleOnMouseUpOrOut"
                        @onmouseup="HandleOnMouseUpOrOut">
                    <span class="bit-ntf-arrow-icon">
                        <i class="bit-icon bit-icon--@IncrementIconName.GetName() bit-icon--s"></i>
                    </span>
                </button>

                <button type="button"
                        class="bit-ntf-arrow-down"
                        disabled="@(IsEnabled is false)"
                        aria-disabled="@(IsEnabled is false)"
                        date-is-focusable="false"
                        tabindex="-1"
                        aria-label="@DecrementAriaLabel"
                        @ref="_buttonDecrement"
                        @onmousedown="e => HandleOnMouseDown(BitNumericTextFieldAction.Decrement, e)"
                        @onmouseout="HandleOnMouseUpOrOut"
                        @onmouseup="HandleOnMouseUpOrOut">
                    <span class="bit-ntf-arrow-icon">
                        <i class="bit-icon bit-icon--@DecrementIconName.GetName() bit-icon--s"></i>
                    </span>
                </button>
            </span>
        }
    </div>
</div>