@namespace Bit.BlazorUI
@inherits BitInputBase<string?>
@typeparam TItem

@if (ChildContent is not null)
{
    <CascadingValue Value="this" IsFixed="true">
        @ChildContent
    </CascadingValue>
}

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     aria-label="@AriaLabel">

    <div role="radiogroup" aria-labelledby="@GetAriaLabelledBy()">
        @if (LabelTemplate is not null)
        {
            <label class="bit-rbl-label" id="@_labelId" disabled="@(IsEnabled is false)">
                @LabelTemplate
            </label>
        }
        else if (Label.HasValue())
        {
            <label class="bit-rbl-label" id="@_labelId" disabled="@(IsEnabled is false)">
                @Label
            </label>
        }

        <div class="choice-field-group @LayoutFlow?.GetDisplayName()">
            @foreach (var item in _items)
            {
                <div class="@GetDivClassNameItem(item)">
                    <input @attributes="InputHtmlAttributes"
                           @onclick="HandleClick"
                           @onchange="() => HandleChange(new ChangeEventArgs { Value = GetValue(item) })"
                           id="@GetInputId(item)"
                           class="input"
                           aria-label="@GetAriaLabel(item)"
                           type="radio"
                           checked=@GetIsCheckedItem(item)
                           name="@Name"
                           value="@GetValue(item)?.ToString()"
                           required="@IsRequired"
                           disabled="@(GetIsEnabled(item) is false)"
                           hidden />

                    <label for="@GetInputId(item)">
                        @if (ItemTemplate is not null)
                        {
                            @ItemTemplate(item)
                        }
                        else
                        {
                            <div class="@GetLabelClassNameItem(item)">

                                @if (ItemLabelTemplate is not null)
                                {
                                    @ItemLabelTemplate(item)
                                }
                                else
                                {
                                    @if (GetImageSrc(item).HasValue())
                                    {
                                        <div class="img-inner-field">
                                            <div class="img-wrapper">
                                                <div class="img" style="@($"width:{GetImageSize(item).Width}px; height:{GetImageSize(item).Height}px;")">
                                                    <img src="@(GetIsCheckedItem(item) ? GetSelectedImageSrc(item) : GetImageSrc(item))" alt="@GetImageAlt(item)">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if (GetIconName(item).HasValue)
                                    {
                                        <div class="icon-inner-field">
                                            <div class="icon-wrapper">
                                                <i aria-hidden="true" class="bit-icon bit-icon--@GetIconName(item).GetName()"></i>
                                            </div>
                                        </div>
                                    }
                                    @if (GetImageSrc(item).HasValue() || GetIconName(item).HasValue)
                                    {
                                        <div class="txt-wrapper">
                                            <span class="txt">
                                                @GetText(item)
                                            </span>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="txt">
                                            @GetText(item)
                                        </span>
                                    }
                                }
                            </div>
                        }
                    </label>
                </div>
            }
        </div>
    </div>
</div>