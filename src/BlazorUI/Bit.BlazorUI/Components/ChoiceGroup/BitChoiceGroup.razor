@namespace Bit.BlazorUI
@inherits BitInputBase<string?>

<div @ref="RootElement"
     @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">
    <div role="radiogroup" aria-labelledby="@GetGroupAriaLabelledBy()">
        @if (LabelTemplate is not null)
        {
            @LabelTemplate
        }
        else
        {
            <label class="label"
                   id="@GetGroupLabelId()"
                   disabled="@(IsEnabled is false)">
                @Label
            </label>
        }
        <div class="container @LayoutFlow.GetDisplayName()?.ToLowerInvariant()">
            @foreach (var option in Options)
            {
                <div class="@GetOptionClasses(option)">
                    <div class="option-wrapper">
                        <input @attributes="InputHtmlAttributes"
                               id="@GetOptionInputId(option)"
                               name="@Name"
                               type="radio"
                               class="input"
                               aria-label="@GetOptionAriaLabel(option)"
                               checked="@GetOptionIsChecked(option)"
                               value="@option.Value"
                               disabled="@(IsEnabled is false || option.IsEnabled is false)"
                               required="@IsRequired"
                               hidden="hidden" @onchange="() => HandleOptionChange(option)" />

                        <label for="@GetOptionInputId(option)">
                            @if (OptionTemplate is not null)
                            {
                                @OptionTemplate(option)
                            }
                            else
                            {
                                <div class="option-label">
                                    @if (OptionLabelTemplate is not null)
                                    {
                                        @OptionLabelTemplate(option)
                                    }
                                    else
                                    {
                                        @if (option.ImageSrc.HasValue())
                                        {
                                            <div class="img-inner-field">
                                                <div class="img-wrapper">
                                                    <div class="image" style="@GetOptionImageSizeStyle(option)">
                                                        <img src="@GetOptionImageSrc(option)" alt="@option.ImageAlt">
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if (option.IconName is not null)
                                        {
                                            <div class="icon-inner-field">
                                                <div class="icon-wrapper">
                                                    <i aria-hidden="true" class="bit-icon bit-icon--@option.IconName.GetName()"></i>
                                                </div>
                                            </div>
                                        }
                                        @if (option.ImageSrc.HasValue() || option.IconName is not null)
                                        {
                                            <div class="text-wrapper">
                                                <span class="text">
                                                    @option.Text
                                                </span>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text">
                                                @option.Text
                                            </span>
                                        }
                                    }
                                </div>
                            }
                        </label>
                    </div>
                </div>
            }
        </div>
    </div>
</div>