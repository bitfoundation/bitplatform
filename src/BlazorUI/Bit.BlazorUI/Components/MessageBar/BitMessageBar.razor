@namespace Bit.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     role="@RootElementRole"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     dir="@Dir?.ToString().ToLower()"
     aria-describedby="@AriaDescribedby">

    @if (IsMultiline)
    {
        <div class="bit-msb-mul">
            <div class="bit-msb-con">
                <div class="bit-msb-ict" aria-hidden="true">
                    <i class="bit-icon bit-icon--@_messageBarIconName" />
                </div>

                <div class="bit-msb-txt"
                     id="@LabelId"
                     aria-live="@GetAnnouncementPriority()"
                     role="@(Role is not null ? Role : GetTextRole())">
                    <span class="bit-msb-itx">
                        <span>@ChildContent</span>
                    </span>
                </div>

                @if (HasDismiss)
                {
                    <div class="bit-msb-dim">
                        <button @onclick="OnDismiss"
                                type="button"
                                title="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)"
                                aria-label="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)">
                            <span>
                                <i class="bit-icon bit-icon--@DismissIconName" aria-hidden="true" />
                            </span>
                        </button>
                    </div>
                }
            </div>

            @if (Actions is not null)
            {
                <div class="bit-msb-act">@Actions</div>
            }
        </div>
    }
    else
    {
        <div class="bit-msb-sin">
            <div class="bit-msb-con">
                <div class="bit-msb-ict" aria-hidden="true">
                    <i class="bit-icon bit-icon--@_messageBarIconName" />
                </div>
                <div id="@LabelId"
                     aria-live="@GetAnnouncementPriority()"
                     role="@(Role is not null ? Role : GetTextRole())"
                     class="bit-msb-txt @(_isExpanded ? "bit-msb-opn": string.Empty)">
                    <span class="bit-msb-itx">
                        <span>@ChildContent</span>
                    </span>
                </div>

                @if (Actions is not null)
                {
                    <div class="bit-msb-act">@Actions</div>
                }
                else if (Truncated)
                {
                    <div class="bit-msb-trn">
                        <button @onclick="ToggleExpand"
                                type="button"
                                aria-expanded="@(_isExpanded ? "true" : "false")"
                                aria-label="@(OverflowButtonAriaLabel.HasValue()? OverflowButtonAriaLabel : null)">
                            <span>
                                <i class="bit-icon bit-icon--@(_isExpanded ? "DoubleChevronUp" : "DoubleChevronDown")" aria-hidden="true" />
                            </span>
                        </button>
                    </div>
                }

                @if (HasDismiss)
                {
                    <div class="bit-msb-dim">
                        <button @onclick="OnDismiss"
                                type="button"
                                title="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)"
                                aria-label="@(DismissButtonAriaLabel.HasValue() ? DismissButtonAriaLabel : null)">
                            <span>
                                <i class="bit-icon bit-icon--@DismissIconName" aria-hidden="true" />
                            </span>
                        </button>
                    </div>
                }
            </div>
        </div>
    }
</div>
