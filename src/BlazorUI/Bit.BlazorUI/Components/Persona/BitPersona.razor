@namespace Bit.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     dir="@Dir?.ToString().ToLower()">

    <div role="presentation" class="bit-prs-cin">
        @{
            var presentationIcon = GetPresentationIcon();
        }

        @if (Size is BitPersonaSize.Size8)
        {
            if (Presence is BitPersonaPresence.None)
            {
                <i class="bit-prs-pic bit-icon bit-icon--@presentationIcon" role="presentation" />
            }
            else
            {
                <div title="@PresenceTitle" class="bit-prs-pre @GetPresentationClass()"></div>
            }
        }
        else
        {
            var coinWidthStyle = GetCoinWidthStyle();
            var coinBgColorStyle = GetCoinBgColorStyle();
            var coinStyle = coinWidthStyle + coinBgColorStyle;

            <div style="@coinStyle" class="@(CoinTemplate is null ? "bit-prs-imc" : null)" @onclick="HandleImageClick">
                @if (Unknown)
                {
                    <i class="bit-icon bit-icon--Help" role="presentation" />
                }
                else if (ImageUrl.HasValue() || CoinTemplate is not null)
                {
                    if (OnImageClick.HasDelegate)
                    {
                        <div style="@coinBgColorStyle" class="bit-prs-imo">
                            @if (ImageOverlayTemplate is not null)
                            {
                                @ImageOverlayTemplate
                            }
                            else
                            {
                                <span>@ImageOverlayText</span>
                            }
                        </div>
                    }

                    if ((ShowInitialsUntilImageLoads && _isLoaded is false) || _hasError)
                    {
                        <span>
                            @GetInitials()
                        </span>
                    }

                    if (CoinTemplate is not null)
                    {
                        @CoinTemplate
                    }
                    else if (ImageUrl.HasValue())
                    {
                        if (_hasError is false)
                        {
                            string dimension = GetPersonaImageDimension();

                            <img src="@ImageUrl"
                                 style="display:@(_isLoaded ? "unset": "none")"
                                 class="bit-prs-img"
                                 alt="@ImageAlt"
                                 width="@dimension"
                                 height="@dimension"
                                 @onerror="HandleOnError"
                                 @onload="HandleOnLoad" />
                        }
                    }
                }
                else
                {
                    @GetInitials()
                }
            </div>

            @if (OnActionClick.HasDelegate)
            {
                @if (ActionTemplate is not null)
                {
                    @ActionTemplate
                }
                else
                {
                    <button @onclick="HandleActionClick" type="button" class="bit-prs-abt" title="@ActionButtonTitle">
                        <span class="bit-prs-icn">
                            <i class="bit-prs-aic bit-icon bit-icon--@ActionIconName" />
                        </span>
                    </button>
                }
            }
            else if (Presence is not BitPersonaPresence.None)
            {
                <div title="@PresenceTitle" style="@GetPresentationStyle()" class="bit-prs-pre @GetPresentationClass()">
                    @if (presentationIcon.HasValue())
                    {
                        <i class="@($"bit-icon bit-icon--{presentationIcon}")" role="presentation" />
                    }
                </div>
            }
        }
    </div>

    @if (HidePersonaDetails is false || Size is BitPersonaSize.Size8)
    {
        <div class="bit-prs-det">
            <div class="bit-prs-ptx" title="@PrimaryText">
                @if (PrimaryTextTemplate is not null)
                {
                    @PrimaryTextTemplate
                }
                else
                {
                    @PrimaryText
                }
            </div>
            <div class="bit-prs-stx" title="@SecondaryText">
                @if (SecondaryTextTemplate is not null)
                {
                    @SecondaryTextTemplate
                }
                else
                {
                    @SecondaryText
                }
            </div>
            <div class="bit-prs-ttx" title="@TertiaryText">
                @if (TertiaryTextTemplate is not null)
                {
                    @TertiaryTextTemplate
                }
                else
                {
                    @TertiaryText
                }
            </div>
            <div class="bit-prs-otx" title="@OptionalText">
                @if (OptionalTextTemplate is not null)
                {
                    @OptionalTextTemplate
                }
                else
                {
                    @OptionalText
                }
            </div>
        </div>
    }

</div>

