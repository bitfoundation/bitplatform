@namespace Bit.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     dir="@Dir?.ToString().ToLower()">
    @if (LabelTemplate is not null)
    {
        <div id="@_labelId">
            @LabelTemplate
        </div>
    }
    else if (Label.HasValue())
    {
        <div style="@Styles?.Label" class="bit-pin-lbl @Classes?.Label" id="@_labelId">
            @Label
        </div>
    }

    @if (ShowPercentNumber && Indeterminate is false)
    {
        <div style="@Styles?.Percent" class="bit-pin-pct @Classes?.Percent">
            @string.Format(PercentNumberFormat, Normalize(Percent))
        </div>
    }

    @if (ProgressTemplate is not null)
    {
        @ProgressTemplate(this)
    }
    else
    {
        <div style="@($"height: {BarHeight}px;") @Styles?.IndicatorContainer" class="bit-pin-icn @Classes?.IndicatorContainer">
            <div style="@Styles?.Tracker" class="bit-pin-trc @Classes?.Tracker"></div>
            <div class="bit-pin-bar @Classes?.Bar"
                 role="progressbar"
                 aria-labelledby="@(Label.HasValue() || LabelTemplate is not null ? _labelId : null)"
                 aria-valuetext="@AriaValueText"
                 aria-describedby="@(Description.HasValue() ? _descriptionId : null)"
                 aria-valuemin="@(Indeterminate ? null : 0)"
                 aria-valuemax="@(Indeterminate ? null : 100)"
                 aria-valuenow="@(Indeterminate ? null : Normalize(Percent))"
                 style="@GetProgressBarStyle()">
            </div>
        </div>
    }

    @if (DescriptionTemplate is not null)
    {
        <div id="@_descriptionId">
            @DescriptionTemplate
        </div>
    }
    else if (Description.HasValue())
    {
        <div style="@Styles?.Description" class="bit-pin-des @Classes?.Description" id="@_descriptionId">
            @Description
        </div>
    }
</div>