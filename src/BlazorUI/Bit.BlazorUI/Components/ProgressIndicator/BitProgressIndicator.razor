@namespace Bit.BlazorUI
@inherits BitComponentBase

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value"
     dir="@Dir?.ToString().ToLower()">
    @if (LabelTemplate is not null)
    {
        <div id="@_labelId">
            @LabelTemplate
        </div>
    }
    else if (Label.HasValue())
    {
        <div style="@Styles?.Label" class="bit-pin-lbl @Classes?.Label" id="@_labelId">
            @Label
        </div>
    }

    @if (ShowPercentNumber && Indeterminate is false)
    {
        <div style="@Styles?.Percent" class="bit-pin-pct @Classes?.Percent">
            @string.Format(PercentNumberFormat, Normalize(PercentNumber))
        </div>
    }

    <div style="@($"height: {Height}px;") @Styles?.BarContainer" class="bit-pin-bcn @Classes?.BarContainer">
        <div style="@Styles?.Track" class="bit-pin-trc @Classes?.Track"></div>
        <div class="bit-pin-bar @(Indeterminate ? "bit-pin-ind" : null) @Classes?.Bar"
             role="progressbar"
             aria-labelledby="@(Label.HasValue() || LabelTemplate is not null ? _labelId : null)"
             aria-valuetext="@AriaValueText"
             aria-describedby="@(Description.HasValue() ? _descriptionId : null)"
             aria-valuemin="@(Indeterminate ? null : 0)"
             aria-valuemax="@(Indeterminate ? null : 100)"
             aria-valuenow="@(Indeterminate ? null : Normalize(PercentNumber))"
             style="@GetProgressBarStyle()">
        </div>
    </div>

    @if (DescriptionTemplate is not null)
    {
        <div id="@_descriptionId">
            @DescriptionTemplate
        </div>
    }
    else if (Description.HasValue())
    {
        <div style="@Styles?.Description" class="bit-pin-des @Classes?.Description" id="@_descriptionId">
            @Description
        </div>
    }
</div>