@namespace Bit.BlazorUI
@inherits BitInputBase<bool>

<div @ref="RootElement" @attributes="HtmlAttributes"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">
    <input @ref="_checkboxElement" @attributes="InputHtmlAttributes" @onclick="@HandleCheckboxClick"
           id="@_inputId"
           type="checkbox"
           value="@CurrentValue"
           checked="@CurrentValue"
           disabled="@(IsEnabled is false)"
           aria-label="@AriaLabel"
           aria-setsize="@AriaSetSize"
           aria-labelledby="@AriaLabelledby"
           aria-posinset="@AriaPositionInSet"
           aria-describedby="@AriaDescription"
           aria-disabled="@(IsEnabled is false)"
           name="@Name"
           hidden />
    <label title="@Title" for="@_inputId" class="bit-chb-lbl">
        @if (ChildContent is not null)
        {
            @ChildContent
        }
        else
        {
            <div class="bit-chb-ctn">
                <i class="bit-icon bit-icon--@CheckmarkIconName" aria-hidden="true" aria-label="@CheckmarkIconAriaLabel" />
            </div>

            @if (LabelTemplate is not null)
            {
                @LabelTemplate
            }
            else if (Label.HasValue())
            {
                <span class="bit-chb-txt bit-nts">
                    @Label
                </span>
            }
        }
    </label>
</div>