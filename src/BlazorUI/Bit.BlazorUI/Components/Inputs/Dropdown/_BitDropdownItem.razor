@namespace Bit.BlazorUI
@typeparam TItem
@typeparam TValue

@{
    var itemType = Dropdown.GetItemType(Item);
    var id = @Dropdown.GetId(Item);
    var text = Dropdown.GetText(Item);
    var isHidden = Dropdown.GetIsHidden(Item);
    var isEnabled = Dropdown.GetIsEnabled(Item);
    var isSelected = Dropdown.GetIsSelected(Item);
}

@if (itemType == BitDropdownItemType.Header)
{
    <div id="@id" style="@(isHidden ? "display:none" : "")" class="bit-drp-ihd">@text</div>
}
else if (itemType == BitDropdownItemType.Normal)
{
    @if (Dropdown.IsMultiSelect)
    {
        <div style="@(isHidden ? "display: none" : string.Empty)" class="@Dropdown.GetItemWrapperCssClasses(Item)">
            <button @onclick="@(() => Dropdown.HandleOnItemClick(Item))"
                    id="@id"
                    type="button"
                    role="option"
                    class="bit-drp-mcn">
                <div class="bit-drp-chb">
                    <i class="bit-drp-chm bit-icon bit-icon--Accept" aria-hidden="true" aria-label="@text" />
                </div>

                @if (Dropdown.ItemTemplate is not null)
                {
                    @Dropdown.ItemTemplate(Item)
                }
                else
                {
                    <span class="bit-drp-itx">@text</span>
                }
            </button>
        </div>
    }
    else
    {
        <button @onclick="()=> Dropdown.HandleOnItemClick(Item)"
                id="@id"
                type="button"
                role="option"
                title="@Dropdown.GetTitle(Item)"
                disabled=@(isEnabled is false)
                tabindex="@(isEnabled ? 0 : -1)"
                style="@(isHidden ? "display:none" : "")"
                class="bit-drp-itm@(isSelected ? $" bit-drp-sel" : "")"
                aria-label="@Dropdown.GetAriaLabel(Item)"
                aria-setsize="@Dropdown.GetTotalItems()"
                aria-disabled="@(isEnabled is false)"
                aria-selected="@(isSelected ? "true" : "false")"
                aria-posinset="@Dropdown.GetItemPosInSet(Item)">
            @if (Dropdown.ItemTemplate is not null)
            {
                @Dropdown.ItemTemplate(Item)
            }
            else
            {
                @text
            }
        </button>
    }
}
else if (itemType == BitDropdownItemType.Divider)
{
    <div id="@id" style="@(isHidden ? "display:none" : "")" class="bit-drp-sep" role="separator"></div>
}