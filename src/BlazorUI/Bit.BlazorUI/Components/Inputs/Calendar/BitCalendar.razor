@namespace Bit.BlazorUI
@inherits BitInputBase<DateTimeOffset?>

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">

    <div class="bit-cal-ctn" disabled=@(IsEnabled is false)>
        <div class="bit-cal-grp" role="group" aria-label="">
            <div class="bit-cal-sd" aria-live="polite" aria-atomic="true">Selected date @CurrentValueAsString</div>
            @if (MonthPickerPosition == BitCalendarMonthPickerPosition.Besides || _showMonthPicker is false)
            {
                <div class="bit-cal-dwp">
                    <div class="bit-cal-pkr-hdr">
                        @if (MonthPickerPosition == BitCalendarMonthPickerPosition.Overlay && IsMonthPickerVisible)
                        {
                            <button @onclick="@ToggleMonthPickerAsOverlay"
                            tabindex="0"
                            type="button"
                            aria-live="polite"
                            aria-atomic="true"
                            class="bit-cal-pkr-tit"
                            aria-label="@($"{_monthTitle}, change month")">
                                <span id="@_monthTitleId">@_monthTitle</span>
                            </button>
                        }
                        else
                        {
                            <div class="bit-cal-pkr-tit"
                            aria-live="polite"
                            aria-atomic="true"
                            tabindex="-1">
                                <span id="@_monthTitleId">@_monthTitle</span>
                            </div>
                        }
                        <div class="bit-cal-nav-btn-ctn">
                            <button @onclick="() => HandleOnMonthChange(ChangeDirection.Previous)"
                            type="button"
                            class="bit-cal-nav-btn"
                            title="@GoToPrevMonthTitle"
                            disabled="@(CanMonthChange(ChangeDirection.Previous) is false)"
                            aria-disabled="@(CanMonthChange(ChangeDirection.Previous) is false)">
                                <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                            </button>
                            <button @onclick="() => HandleOnMonthChange(ChangeDirection.Next)"
                            type="button"
                            class="bit-cal-nav-btn"
                            title="@GoToNextMonthTitle"
                            disabled="@(CanMonthChange(ChangeDirection.Next) is false)"
                            aria-disabled="@(CanMonthChange(ChangeDirection.Next) is false)">
                                <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                            </button>
                        </div>
                    </div>
                    <table role="grid"
                    aria-readonly="true"
                    aria-multiselectable="false"
                    aria-labelledby="@_monthTitleId"
                    aria-activedescendant="@_activeDescendantId">
                        <tbody>
                            <tr>
                                @if (ShowWeekNumbers)
                                {
                                    <th class="bit-cal-wd-lbl"></th>
                                }

                                @for (var index = 0; index < 7; index++)
                                {
                                    <th class="bit-cal-wd-lbl" scope="col" title="@Culture.DateTimeFormat.GetShortestDayName(GetDayOfWeek(index))">
                                        @Culture.DateTimeFormat.GetShortestDayName(GetDayOfWeek(index))[0]
                                    </th>
                                }
                            </tr>
                            @for (var week = 0; week < 6; week++)
                            {
                                //to ignore the last empty week out of month || to ignore the first whole week out of month
                                if (_currentMonthCalendar[week, 0] == 0 || (week == 0 && _currentMonthCalendar[week, 6] > 20))
                                {
                                    continue;
                                }

                                <tr>
                                    @if (ShowWeekNumbers)
                                    {
                                        <th class="bit-cal-wnumc"
                                        title="@($"Week number {GetWeekNumber(week)}")"
                                        aria-label="@($"Week number {GetWeekNumber(week)}")"
                                        scope="row">
                                            <span>@GetWeekNumber(week)</span>
                                        </th>
                                    }

                                    @for (var day = 0; day < 7; day++)
                                    {
                                        var localWeek = week;
                                        var localDay = day;
                                        <td class="bit-cal-dc @GetDateElClass(localDay, localWeek)" role="presentation">
                                            <button @onclick="() => SelectDate(localDay, localWeek)"
                                            type="button"
                                            role="gridcell"
                                            class="bit-cal-dbtn"
                                            aria-readonly="true"
                                            aria-label="@GetDateAriaLabel(localWeek, localDay)"
                                            disabled="@IsWeekDayOutOfMinAndMaxDate(localDay, localWeek)"
                                            aria-disabled="@IsWeekDayOutOfMinAndMaxDate(localDay, localWeek)"
                                            tabindex="@(week == _selectedDateWeek && day == _selectedDateDayOfWeek ? 0 : -1)"
                                            aria-selected="@(week == _selectedDateWeek && day == _selectedDateDayOfWeek ? "true" : "false")">
                                                @if (DayCellTemplate is not null)
                                                {
                                                    @DayCellTemplate(GetDayCellDate(localDay, localWeek))
                                                }
                                                else
                                                {
                                                    <span aria-hidden="true">@_currentMonthCalendar[localWeek, localDay]</span>
                                                }
                                            </button>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if ((MonthPickerPosition == BitCalendarMonthPickerPosition.Overlay || IsMonthPickerVisible is false) && ShowGoToToday)
                    {
                        <button @onclick="HandleGoToToday"
                        type="button"
                        class="bit-cal-gtd-btn"
                        disabled="@IsGoTodayDisabled()">
                            @GoToToday
                        </button>
                    }

                    @if (ShowTimePicker)
                    {
                        <div class="bit-cal-time-grp">
                            <div class="bit-cal-time-wrp">
                            <input @ref="_inputTimeHourRef"
                            @bind="@_timeHour"
                            @bind:event="oninput"
                            @onfocus="HandleOnTimeHourFocus"
                                    min="0"
                                    max="23"
                                    type="number"
                                    inputmode="numeric"
                                    class="bit-cal-tinp"
                                    autocomplete="@BitAutoCompleteValue.NewPassword" />
                            <span class="bit-cal-tdiv">:</span>
                            <input @ref="_inputTimeMinuteRef"
                            @bind="@_timeMinute"
                            @bind:event="oninput"
                            @onfocus="HandleOnTimeMinuteFocus"
                                    min="0"
                                    max="59"
                                    type="number"
                                    inputmode="numeric"
                                    class="bit-cal-tinp"
                                    autocomplete="@BitAutoCompleteValue.NewPassword" />
                        </div>
                    </div>
                }
            </div>
            }

            @if (IsMonthPickerVisible && (MonthPickerPosition == BitCalendarMonthPickerPosition.Besides || _showMonthPicker))
            {
                @if (MonthPickerPosition == BitCalendarMonthPickerPosition.Besides)
                {
                    <div class="bit-cal-div"></div>
                }

                <div class="bit-cal-mwp">
                        @if (_showYearView is false)
                        {
                            <div class="bit-cal-pkr-hdr">
                                <button @onclick="ToggleBetweenMonthAndYearPicker"
                                        tabindex="0"
                                        type="button"
                                        aria-atomic="true"
                                        aria-live="polite"
                                        class="bit-cal-pkr-tit"
                                        aria-label="@($"{_displayYear}, change year")">
                                    @_displayYear
                                </button>
                                <div class="bit-cal-nav-btn-ctn">
                                    <button @onclick="() => HandleYearChange(ChangeDirection.Previous)"
                                            type="button"
                                            class="bit-cal-nav-btn"
                                            title="Go to previous year @(_displayYear - 1)"
                                            disabled="@(CanYearChange(ChangeDirection.Previous) is false)"
                                            aria-disabled="@(CanYearChange(ChangeDirection.Previous) is false)">
                                        <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                                    </button>
                                    <button @onclick="() => HandleYearChange(ChangeDirection.Next)"
                                            type="button"
                                            class="bit-cal-nav-btn"
                                            title="Go to next year @(_displayYear + 1)"
                                            aria-disabled="@(CanYearChange(ChangeDirection.Next) is false)"
                                            disabled="@(CanYearChange(ChangeDirection.Next) is false)">
                                        <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                                    </button>
                                </div>
                            </div>
                            <div class="bit-cal-gctn" role="grid" aria-label="@_displayYear">
                                @for (var rowIndex = 0; rowIndex <= 2; rowIndex++)
                                {
                                    <div class="bit-cal-btn-row" role="row">
                                        @for (var cellIndex = 1; cellIndex <= 4; cellIndex++)
                                        {
                                            var monthIndex = (rowIndex * 4) + cellIndex;
                                            var monthName = Culture.DateTimeFormat.GetMonthName(monthIndex);
                                            <button @onclick="() => SelectMonth(monthIndex)"
                                                    type="button"
                                                    role="gridcell"
                                                    title="@monthName"
                                                    aria-readonly="true"
                                                    aria-label="@monthName"
                                                    class="bit-cal-rbtn @GetMonthCellClassName(monthIndex)"
                                                    disabled="@IsMonthOutOfMinAndMaxDate(monthIndex)"
                                                    tabindex="@(IsMonthSelected(monthIndex) ? 0 : -1)"
                                                    aria-disabled="@IsMonthOutOfMinAndMaxDate(monthIndex)"
                                                    aria-selected="@(IsMonthSelected(monthIndex) ? "true" : "false")">
                                                @if (MonthCellTemplate is not null)
                                                {
                                                    @MonthCellTemplate(GetMonthCellDate(monthIndex))
                                                }
                                                else
                                                {
                                                    <span aria-hidden="true">@Culture.DateTimeFormat.GetAbbreviatedMonthName(monthIndex)</span>
                                                }
                                            </button>
                                        }
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="bit-cal-pkr-hdr">
                                <button @onclick="ToggleBetweenMonthAndYearPicker"
                                        type="button"
                                        aria-atomic="true"
                                        aria-live="polite"
                                        class="bit-cal-pkr-tit"
                                        aria-label="@($"{_yearRangeFrom} - {_yearRangeTo}, change month")">
                                    @_yearRangeFrom - @_yearRangeTo
                                </button>
                                <div class="bit-cal-nav-btn-ctn">
                                    <button @onclick="() => HandleOnYearRangeChange(ChangeDirection.Previous)"
                                            type="button"
                                            class="bit-cal-nav-btn"
                                            disabled="@(CanYearRangeChange(ChangeDirection.Previous) is false)"
                                            aria-disabled="@(CanYearRangeChange(ChangeDirection.Previous) is false)"
                                            title="previous year range @(_yearRangeFrom - 12) - @(_yearRangeFrom - 1)">
                                        <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                                    </button>
                                    <button @onclick="() => HandleOnYearRangeChange(ChangeDirection.Next)"
                                            type="button"
                                            class="bit-cal-nav-btn"
                                            disabled="@(CanYearRangeChange(ChangeDirection.Next) is false)"
                                            aria-disabled="@(CanYearRangeChange(ChangeDirection.Next) is false)"
                                            title="next year range @(_yearRangeFrom + 12) - @(_yearRangeTo + 12)">
                                        <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                                    </button>
                                </div>
                            </div>
                            <div class="bit-cal-gctn" role="grid" aria-label="@_yearRangeFrom - @_yearRangeTo">
                                @for (var rowIndex = 0; rowIndex <= 2; rowIndex++)
                                {
                                    <div class="bit-cal-btn-row" role="row">
                                        @for (var cellIndex = 0; cellIndex <= 3; cellIndex++)
                                        {
                                            var year = _yearRangeFrom + (rowIndex * 4) + cellIndex;
                                            <button @onclick="() => SelectYear(year)"
                                                    type="button"
                                                    role="gridcell"
                                                    class="bit-cal-rbtn"
                                                    aria-readonly="true"
                                                    disabled="@IsYearOutOfMinAndMaxDate(year)"
                                                    tabindex="@(IsYearSelected(year) ? 0 : -1)"
                                                    aria-disabled="@IsYearOutOfMinAndMaxDate(year)"
                                                    aria-selected="@(IsYearSelected(year) ? "true" : "false")">
                                                @if (YearCellTemplate is not null)
                                                {
                                                    @YearCellTemplate(year)
                                                }
                                                else
                                                {
                                                    <span aria-hidden="true">@year</span>
                                                }
                                            </button>
                                        }
                                    </div>
                                }
                            </div>
                        }

                        @if (ShowGoToToday)
                        {
                            <button @onclick="HandleGoToToday"
                                    type="button"
                                    class="bit-cal-gtd-btn"
                                    disabled="@IsGoTodayDisabled()">
                                @GoToToday
                            </button>
                        }
                    </div>
            }
        </div>
    </div>
</div>