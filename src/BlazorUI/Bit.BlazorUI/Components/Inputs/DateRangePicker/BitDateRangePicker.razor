@namespace Bit.BlazorUI
@inherits BitInputBase<BitDateRangePickerValue?>

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value">

    @if (LabelTemplate is not null)
    {
        <label id="@_labelId" for="@_inputId">
            @LabelTemplate
        </label>
    }
    else if (Label.HasValue())
    {
        <label class="bit-dtrp-lbl" id="@_labelId" for="@_inputId">
            @Label
        </label>
    }
    <div id="@_dateRangePickerId" class="bit-dtrp-wrp" aria-owns="@(IsOpen ? _calloutId : null)" @onclick="HandleOnClick">
        <div class="bit-dtrp-icn">
            <input @attributes="InputHtmlAttributes"
                   @onfocusin="@HandleOnFocusIn"
                   @onfocusout="@HandleOnFocusOut"
                   @onfocus="@HandleOnFocus"
                   @onchange="@HandleOnChange"
                   type="text"
                   role="combobox"
                   id="@_inputId"
                   class="bit-dtrp-inp@(AllowTextInput ? " bit-dtrp-ein" : null)"
                   tabindex="@TabIndex"
                   aria-haspopup="dialog"
                   aria-label="@AriaLabel"
                   placeholder="@Placeholder"
                   value="@CurrentValueAsString"
                   disabled=@(IsEnabled is false)
                   readonly=@(AllowTextInput is false)
                   aria-expanded="@(IsOpen ? "true" : "false")"
                   aria-controls="@(IsOpen ? _calloutId : null)"
                   aria-labelledby="@(Label.HasValue() ? _labelId : null)" />

            @if (IconTemplate is not null)
            {
                @IconTemplate
            }
            else
            {
                <i class="bit-dtrp-ico bit-icon bit-icon--@IconName" aria-hidden="true" />
            }
        </div>
    </div>

    <div @onclick="CloseCallout"
         style="display:@(IsOpen ? "block;" : "none;")"
         class="bit-dtrp-ovl"></div>

    <div class="bit-dtrp-cal @(IsResponsive ? "bit-dtrp-rsp" : null)" id="@_calloutId">
        <div class="bit-dtrp-cac" role="dialog" @attributes=@CalloutHtmlAttributes aria-label="@CalloutAriaLabel">
            <div class="bit-dtrp-grp" role="group" aria-label="">
                <div class="bit-dtrp-sdt" aria-live="polite" aria-atomic="true">Selected date @CurrentValueAsString</div>

                @{
                    var todayYear = Culture.Calendar.GetYear(DateTime.Now);
                    var todayMonth = Culture.Calendar.GetMonth(DateTime.Now);
                    var todayDay = Culture.Calendar.GetDayOfMonth(DateTime.Now);
                }

                @if ((_showMonthPickerAsOverlayInternal && _isMonthPickerOverlayOnTop is false) || _showMonthPickerAsOverlayInternal is false)
                {
                    <div class="bit-dtrp-dwp">
                        <div class="bit-dtrp-pkh">
                            @if (_showMonthPickerAsOverlayInternal)
                            {
                                <button @onclick="@ToggleMonthPickerAsOverlay"
                                        tabindex="0"
                                        type="button"
                                        aria-live="polite"
                                        aria-atomic="true"
                                        class="bit-dtrp-ptb"
                                        aria-label="@($"{_monthTitle}, change month")">
                                    @_monthTitle
                                </button>
                            }
                            else
                            {
                                <div tabindex="-1"
                                     aria-live="polite"
                                     aria-atomic="true"
                                     class="bit-dtrp-pkt">
                                    @_monthTitle
                                </div>
                            }
                            <div class="bit-dtrp-nbc">
                                <button @onclick="() => HandleMonthChange(false)"
                                        type="button"
                                        class="bit-dtrp-nbt"
                                        title="@GoToPrevMonthTitle"
                                        disabled="@(CanChangeMonth(false) is false)"
                                        aria-disabled="@(CanChangeMonth(false) is false)">
                                    <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                                </button>
                                @if (_showMonthPickerAsOverlayInternal && ShowGoToToday)
                                {
                                    <button @onclick="HandleGoToToday"
                                            type="button"
                                            class="bit-dtrp-gtb"
                                            title="@GoToTodayTitle"
                                            disabled="@IsGoTodayButtonDisabled(todayYear, todayMonth)">
                                        <i class="bit-icon bit-icon--GotoToday" aria-hidden="true" />
                                    </button>
                                }
                                <button @onclick="() => HandleMonthChange(true)"
                                        type="button"
                                        class="bit-dtrp-nbt"
                                        title="@GoToNextMonthTitle"
                                        disabled="@(CanChangeMonth(true) is false)"
                                        aria-disabled="@(CanChangeMonth(true) is false)">
                                    <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                                </button>
                                @if (ShowCloseButton)
                                {
                                    <button @onclick="CloseCallout"
                                            type="button"
                                            class="bit-dtrp-nbt"
                                            title="Close date range picker">
                                        <i class="bit-icon bit-icon--Cancel" aria-hidden="true" />
                                    </button>
                                }
                            </div>
                        </div>
                        <div class="bit-dtrp-dgh">
                            @if (ShowWeekNumbers)
                            {
                                <div class="bit-dtrp-wlb"></div>
                            }

                            @for (var index = 0; index < 7; index++)
                            {
                                var dayOfWeekName = Culture.DateTimeFormat.GetShortestDayName(GetDayOfWeek(index));
                                <div class="bit-dtrp-wlb" scope="col" title="@dayOfWeekName">
                                    @dayOfWeekName[0]
                                </div>
                            }
                        </div>
                        @for (var week = 0; week < 6; week++)
                        {
                            //to ignore the last empty week out of month || to ignore the first whole week out of month
                            if (_daysOfCurrentMonth[week, 0] == 0 || (week == 0 && _daysOfCurrentMonth[week, 6] > 20)) continue;

                            <div class="bit-dtrp-dgr">
                                @if (ShowWeekNumbers)
                                {
                                    var weekNumber = GetWeekNumber(week);
                                    <div scope="row"
                                         class="bit-dtrp-wnm"
                                         title="@($"Week number {weekNumber}")"
                                         aria-label="@($"Week number {weekNumber}")">
                                        @weekNumber
                                    </div>
                                }

                                @for (var day = 0; day < 7; day++)
                                {
                                    var w = week;
                                    var d = day;
                                    var disabled = IsWeekDayOutOfMinAndMaxDate(d, w);
                                    var klass = GetDayButtonCss(d, w, todayYear, todayMonth, todayDay);
                                    var isSelected = (w == _selectedStartDateWeek && d == _selectedStartDateDayOfWeek) || (w == _selectedEndDateWeek && d == _selectedEndDateDayOfWeek);
                                    <button @onclick="() => SelectDate(d, w)"
                                            type="button"
                                            role="gridcell"
                                            aria-readonly="true"
                                            class="bit-dtrp-dbt@(klass)"
                                            disabled="@disabled"
                                            aria-disabled="@disabled"
                                            tabindex="@(isSelected ? 0 : -1)"
                                            aria-selected="@(isSelected ? "true" : "false")">
                                        @if (DayCellTemplate is not null)
                                        {
                                            @DayCellTemplate(GetDateTimeOfDayCell(d, w))
                                        }
                                        else
                                        {
                                            @_daysOfCurrentMonth[w, d]
                                        }
                                    </button>
                                }
                            </div>
                        }

                        @if (ShowTimePicker)
                        {
                            <div class="bit-dtrp-tgp@(TimeFormat == BitTimeFormat.TwelveHours ? " bit-dtrp-tap" : null)">
                                <div class="bit-dtrp-twp">
                                    <input @ref="_inputStartTimeHourRef"
                                           @bind="@_startTimeHourView"
                                           @bind:event="oninput"
                                           @onfocus="HandleOnStartTimeHourFocus"
                                           min="0"
                                           max="@(TimeFormat == BitTimeFormat.TwelveHours ? "12" : "23")"
                                           type="number"
                                           inputmode="numeric"
                                           class="bit-dtrp-tin"
                                           autocomplete="@BitAutoCompleteValue.NewPassword" />
                                    <span class="bit-dtrp-tdv">:</span>
                                    <input @ref="_inputStartTimeMinuteRef"
                                           @bind:event="oninput"
                                           @bind="@_startTimeMinuteView"
                                           @onfocus="HandleOnStartTimeMinuteFocus"
                                           min="0"
                                           max="59"
                                           type="number"
                                           inputmode="numeric"
                                           class="bit-dtrp-tin"
                                           autocomplete="@BitAutoCompleteValue.NewPassword" />
                                </div>

                                @if (TimeFormat == BitTimeFormat.TwelveHours)
                                {
                                    <div class="bit-dtrp-apc">
                                        <button @onclick="ToggleStartTimeAmPm"
                                                type="button"
                                                class="bit-dtrp-apb"
                                                disabled="@(_startTimeHour < 12)">
                                            @Culture.DateTimeFormat.AMDesignator
                                        </button>
                                        <button @onclick="ToggleStartTimeAmPm"
                                                type="button"
                                                class="bit-dtrp-apb"
                                                disabled="@(_startTimeHour >= 12)">
                                            @Culture.DateTimeFormat.PMDesignator
                                        </button>
                                    </div>
                                }

                                <div class="bit-dtrp-twp">
                                    <input @ref="_inputEndTimeHourRef"
                                           @bind="@_endTimeHourView"
                                           @bind:event="oninput"
                                           @onfocus="HandleOnEndTimeHourFocus"
                                           min="0"
                                           max="@(TimeFormat == BitTimeFormat.TwelveHours ? "12" : "23")"
                                           type="number"
                                           inputmode="numeric"
                                           class="bit-dtrp-tin"
                                           autocomplete="@BitAutoCompleteValue.NewPassword" />
                                    <span class="bit-dtrp-tdv">:</span>
                                    <input @ref="_inputEndTimeMinuteRef"
                                           @bind:event="oninput"
                                           @bind="@_endTimeMinuteView"
                                           @onfocus="HandleOnEndTimeMinuteFocus"
                                           min="0"
                                           max="59"
                                           type="number"
                                           inputmode="numeric"
                                           class="bit-dtrp-tin"
                                           autocomplete="@BitAutoCompleteValue.NewPassword" />
                                </div>

                                @if (TimeFormat == BitTimeFormat.TwelveHours)
                                {
                                    <div class="bit-dtrp-ampm-ctn">
                                        <button @onclick="ToggleEndTimeAmPm"
                                                type="button"
                                                class="bit-dtrp-apb"
                                                disabled="@(_endTimeHour < 12)">
                                            @Culture.DateTimeFormat.AMDesignator
                                        </button>
                                        <button @onclick="ToggleEndTimeAmPm"
                                                type="button"
                                                class="bit-dtrp-apb"
                                                disabled="@(_endTimeHour >= 12)">
                                            @Culture.DateTimeFormat.PMDesignator
                                        </button>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }

                @if (_showMonthPickerAsOverlayInternal is false)
                {
                    <div class="bit-dtrp-dvd"></div>
                }

                @if ((_showMonthPickerAsOverlayInternal && _isMonthPickerOverlayOnTop) || _showMonthPickerAsOverlayInternal is false)
                {
                    <div class="bit-dtrp-mwp">
                        @if (_showMonthPicker)
                        {
                            var prevDisabled = CanChangeYear(false) is false;
                            var nextDisabled = CanChangeYear(true) is false;
                            <div class="bit-dtrp-pkh">
                                <button @onclick="ToggleBetweenMonthAndYearPicker"
                                        tabindex="0"
                                        type="button"
                                        aria-atomic="true"
                                        aria-live="polite"
                                        class="bit-dtrp-ptb"
                                        aria-label="@($"{_displayYear}, change year")">
                                    @_displayYear
                                </button>
                                <div class="bit-dtrp-nbc">
                                    <button @onclick="() => HandleYearChange(false)"
                                            type="button"
                                            class="bit-dtrp-nbt"
                                            title="Go to previous year @(_displayYear - 1)"
                                            disabled="@prevDisabled"
                                            aria-disabled="@prevDisabled">
                                        <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                                    </button>
                                    @if (ShowGoToToday)
                                    {
                                        <button @onclick="HandleGoToToday"
                                                type="button"
                                                class="bit-dtrp-gtb"
                                                title="@GoToTodayTitle"
                                                disabled="@IsGoTodayButtonDisabled(todayYear, todayMonth)">
                                            <i class="bit-icon bit-icon--GotoToday" aria-hidden="true" />
                                        </button>
                                    }
                                    <button @onclick="() => HandleYearChange(true)"
                                            type="button"
                                            class="bit-dtrp-nbt"
                                            title="Go to next year @(_displayYear + 1)"
                                            disabled="@nextDisabled"
                                            aria-disabled="@nextDisabled">
                                        <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                                    </button>
                                </div>
                            </div>
                            <div class="bit-dtrp-pkc" role="grid" aria-label="@_displayYear">
                                @for (var rowIndex = 0; rowIndex <= 2; rowIndex++)
                                {
                                    <div class="bit-dtrp-pkr" role="row">
                                        @for (var cellIndex = 1; cellIndex <= 4; cellIndex++)
                                        {
                                            var month = (rowIndex * 4) + cellIndex;
                                            var monthName = Culture.DateTimeFormat.GetMonthName(month);
                                            var disabled = IsMonthOutOfMinAndMaxDate(month);
                                            var selected = month == _currentMonth;
                                            <button @onclick="() => SelectMonth(month)"
                                                    role="gridcell"
                                                    type="button"
                                                    title="@monthName"
                                                    aria-readonly="true"
                                                    aria-label="@monthName"
                                                    disabled="@disabled"
                                                    tabindex="@(selected ? 0 : -1)"
                                                    aria-disabled="@disabled"
                                                    class="bit-dtrp-pkb@(GetMonthCellCssClass(month, todayYear, todayMonth))"
                                                    aria-selected="@(selected ? "true" : "false")">
                                                @if (MonthCellTemplate is not null)
                                                {
                                                    @MonthCellTemplate(GetDateTimeOfMonthCell(month))
                                                }
                                                else
                                                {
                                                    @Culture.DateTimeFormat.GetAbbreviatedMonthName(month)
                                                }
                                            </button>
                                        }
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            var prevDisabled = CanChangeYearRange(false) is false;
                            var nextDisabled = CanChangeYearRange(true) is false;
                            <div class="bit-dtrp-pkh">
                                <button @onclick="ToggleBetweenMonthAndYearPicker"
                                        type="button"
                                        aria-live="polite"
                                        aria-atomic="true"
                                        class="bit-dtrp-ptb"
                                        aria-label="@($"{_yearPickerStartYear} - {_yearPickerEndYear}, change month")">
                                    @_yearPickerStartYear - @_yearPickerEndYear
                                </button>
                                <div class="bit-dtrp-nbc">
                                    <button @onclick="() => HandleYearRangeChange(false)"
                                            type="button"
                                            class="bit-dtrp-nbt"
                                            disabled="@prevDisabled"
                                            aria-disabled="@prevDisabled"
                                            title="previous year range @(_yearPickerStartYear - 12) - @(_yearPickerStartYear - 1)">
                                        <i class="bit-icon bit-icon--Up" aria-hidden="true" />
                                    </button>
                                    @if (ShowGoToToday)
                                    {
                                        <button @onclick="HandleGoToToday"
                                                type="button"
                                                class="bit-dtrp-gtb"
                                                title="@GoToTodayTitle"
                                                disabled="@IsGoTodayButtonDisabled(todayYear, todayMonth)">
                                            <i class="bit-icon bit-icon--GotoToday" aria-hidden="true" />
                                        </button>
                                    }
                                    <button @onclick="() => HandleYearRangeChange(true)"
                                            type="button"
                                            class="bit-dtrp-nbt"
                                            disabled="@nextDisabled"
                                            aria-disabled="@nextDisabled"
                                            title="next year range @(_yearPickerStartYear + 12) - @(_yearPickerEndYear + 12)">
                                        <i class="bit-icon bit-icon--Down" aria-hidden="true" />
                                    </button>
                                </div>
                            </div>
                            <div class="bit-dtrp-pkc" role="grid" aria-label="@_yearPickerStartYear - @_yearPickerEndYear">
                                @for (var rowIndex = 0; rowIndex <= 2; rowIndex++)
                                {
                                    <div class="bit-dtrp-pkr" role="row">
                                        @for (var cellIndex = 0; cellIndex <= 3; cellIndex++)
                                        {
                                            var year = _yearPickerStartYear + (rowIndex * 4) + cellIndex;
                                            var disabled = IsYearOutOfMinAndMaxDate(year);
                                            var selected = year == _currentYear;
                                            <button @onclick="() => SelectYear(year)"
                                                    role="gridcell"
                                                    type="button"
                                                    aria-readonly="true"
                                                    class="bit-dtrp-pkb"
                                                    disabled="@disabled"
                                                    tabindex="@(selected ? 0 : -1)"
                                                    aria-disabled="@disabled"
                                                    aria-selected="@(selected ? "true" : "false")">
                                                @if (YearCellTemplate is not null)
                                                {
                                                    @YearCellTemplate(year)
                                                }
                                                else
                                                {
                                                    @year
                                                }
                                            </button>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>