@import "../../Styles/functions.scss";

@mixin getStyle($enabled: true, $checked: true) {
    label {
        @if $enabled {
            color: $color-neutrals-gray160;
        }
        @else {
            color: $color-neutrals-gray90;
        }
    }

    .container {
        button {
            @if $enabled {
                @if $checked {
                    border: $shape-border-width $shape-border-style transparent;
                    cursor: pointer;
                    background: $color-primary-main;
                    justify-content: flex-end;

                    .state {
                        background-color: $color-background-primary;
                    }

                    &:hover {
                        background-color: $color-primary-darker;
                        border-color: transparent;
                    }
                }
                @else {
                    border: $shape-border-width $shape-border-style $color-neutrals-gray130;
                    cursor: pointer;
                    background: $color-neutrals-white;

                    .state {
                        background-color: $color-neutrals-gray130;
                    }

                    &:hover {
                        border-color: $color-neutrals-gray160;

                        .state {
                            background-color: $color-neutrals-gray160;
                        }
                    }
                }
            }
            @else {
                @if $checked {
                    border: $shape-border-width $shape-border-style transparent;
                    cursor: default;
                    background: $color-neutrals-gray60;
                    justify-content: flex-end;

                    .state {
                        background-color: $color-neutrals-gray20;
                    }
                }
                @else {
                    border: $shape-border-width $shape-border-style $color-neutrals-gray60;
                    cursor: default;
                    background: $color-neutrals-white;

                    .state {
                        background-color: $color-neutrals-gray60;
                    }
                }
            }
        }
    }
}

.bit-tgl {
    font-family: $typography-font-family;
    font-size: inherit;
    font-weight: inherit;

    label {
        font-size: spacing(1.75);
        font-weight: 600;
        box-sizing: border-box;
        box-shadow: none;
        margin: 0;
        display: inline-block;
        padding: spacing(0.625) 0;
        overflow-wrap: break-word;
    }

    .container {
        display: flex;
        position: relative;
        align-items: center;

        button {
            outline: transparent;
            position: relative;
            font-size: spacing(2.5);
            box-sizing: border-box;
            width: spacing(5);
            min-width: spacing(5);
            height: spacing(2.5);
            border-radius: spacing(1.25);
            transition: all 0.1s ease 0s;
            display: flex;
            align-items: center;
            padding: 0 spacing(0.375);

            .state {
                display: block;
                width: spacing(1.5);
                height: spacing(1.5);
                border-radius: 50%;
                transition: all 0.1s ease 0s;
                border: spacing(0.75) $shape-border-style transparent;
                box-sizing: border-box;
            }
        }

        .state-text {
            padding: 0;
            margin: 0 spacing(1);
            font-weight: 400;
            user-select: none;
        }
    }

    &.enabled-checked {
        @include getStyle();
    }

    &.enabled-unchecked {
        @include getStyle($enabled:true, $checked:false);
    }

    &.disabled-checked {
        @include getStyle($enabled:false, $checked:true);
    }

    &.disabled-unchecked {
        @include getStyle($enabled:false, $checked:false);
    }

    &.inline {
        display: flex;
        align-items: center;

        label {
            margin: 0 spacing(2) 0 0;
        }
    }

    &.noonoff {
        .container {
            .state-text {
                display: inline-block;
                margin: 0 spacing(2);
                order: 1;
            }
        }
    }

    &.invalid {
        &.enabled-unchecked {
            .container {
                button {
                    border-color: $color-state-invalid;
                }

                .state-text {
                    color: $color-state-invalid;
                }
            }
        }

        &.enabled-checked {
            .container {
                button {
                    background-color: $color-state-invalid;

                    &:hover {
                        background-color: $color-state-invalid-hover;
                    }
                }

                .state-text {
                    color: $color-state-invalid;
                }
            }
        }
    }
}
