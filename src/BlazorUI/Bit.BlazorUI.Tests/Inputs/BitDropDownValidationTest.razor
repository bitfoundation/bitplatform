<EditForm Model="@TestModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <DataAnnotationsValidator />

    <CascadingValue Value="Visual">
        <BitDropDown IsEnabled="IsEnabled"
                     OnClick="HandleClick"
                     IsMultiSelect="IsMultiSelect"
                     @bind-IsOpen="IsOpen"
                     Items="Items"
                     MultiSelectDelimiter="@MultiSelectDelimiter"
                     DefaultValues="DefaultValues"
                     DefaultValue="@DefaultValue"
                     Placeholder="@Placeholder"
                     Label="@Label"
                     Title="@Title"
                     NotifyOnReselect="NotifyOnReselect"
                     OnSelectItem="HandleSelectItem"
                     @bind-Value="@TestModel.Value"
                     IsRequired="IsRequired">
            <LabelFragment>
                @LabelFragment
            </LabelFragment>
        </BitDropDown>
    </CascadingValue>

</EditForm>

@code {
    [Parameter] public Visual Visual { get; set; }
    [Parameter] public bool IsMultiSelect { get; set; }
    [Parameter] public bool IsEnabled { get; set; }
    [Parameter] public bool IsRequired { get; set; }
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public List<BitDropDownItem> Items { get; set; } = new List<BitDropDownItem>();
    [Parameter] public BitDropDownTestModel TestModel { get; set; }
    [Parameter] public List<string> DefaultValues { get; set; } = new List<string>();
    [Parameter] public string DefaultValue { get; set; }
    [Parameter] public string Placeholder { get; set; }
    [Parameter] public string Label { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public string MultiSelectDelimiter { get; set; } = ", ";
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public EventCallback<BitDropDownItem> OnSelectItem { get; set; }
    [Parameter] public bool NotifyOnReselect { get; set; } = false;
    [Parameter] public RenderFragment LabelFragment { get; set; }

    public int Counter { get; set; }
    public int SelectItemCounter { get; set; }
    public int ValidCount { get; set; }
    public int InvalidCount { get; set; }

    public void HandleClick(MouseEventArgs args)
    {
        Counter++;
    }

    public void HandleSelectItem(BitDropDownItem item)
    {
        SelectItemCounter++;
    }

    private void HandleValidSubmit()
    {
        ValidCount++;
    }

    private void HandleInvalidSubmit()
    {
        InvalidCount++;
    }
}