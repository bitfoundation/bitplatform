@page "/components/compoundbutton"
@page "/components/compound-button"

<PageOutlet Url="components/compoundbutton"
            Title="CompoundButton"
            Description="CompoundButton component of the bit BlazorUI components" />

<ComponentDemo ComponentName="CompoundButton"
               ComponentDescription="CompoundButton is a button containing a secondary text describing the main action of the button."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div class="buttons-container">
                <BitCompoundButton SecondaryText="This is the secondary text">Compound Button</BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Variant" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div>The CompoundButton offers three variants: Fill (default), Outline, and Text.</div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton Variant="BitVariant.Fill" SecondaryText="This is the secondary text">Fill</BitCompoundButton>
                <BitCompoundButton Variant="BitVariant.Outline" SecondaryText="This is the secondary text">Outline</BitCompoundButton>
                <BitCompoundButton Variant="BitVariant.Text" SecondaryText="This is the secondary text">Text</BitCompoundButton>
            </div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton Variant="BitVariant.Fill" SecondaryText="This is the secondary text" IsEnabled="false">Fill</BitCompoundButton>
                <BitCompoundButton Variant="BitVariant.Outline" SecondaryText="This is the secondary text" IsEnabled="false">Outline</BitCompoundButton>
                <BitCompoundButton Variant="BitVariant.Text" SecondaryText="This is the secondary text" IsEnabled="false">Text</BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Color" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div>
                Offering a range of specialized color variants, providing visual cues for specific actions or states within your application.
            </div>
            <br />
            <div class="buttons-container-grid">
                <div>
                    <BitCompoundButton Color="BitColor.Primary" SecondaryText="This is the secondary text">Primary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Primary" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Primary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Primary" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Primary</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Secondary" SecondaryText="This is the secondary text">Secondary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Secondary" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Secondary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Secondary" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Secondary</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Tertiary" SecondaryText="This is the secondary text">Tertiary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Tertiary" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Tertiary</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Tertiary" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Tertiary</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Info" SecondaryText="This is the secondary text">Info</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Info" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Info</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Info" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Info</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Success" SecondaryText="This is the secondary text">Success</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Success" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Success</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Success" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Success</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Warning" SecondaryText="This is the secondary text">Warning</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Warning" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Warning</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Warning" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Warning</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.SevereWarning" SecondaryText="This is the secondary text">SevereWarning</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.SevereWarning" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">SevereWarning</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.SevereWarning" SecondaryText="This is the secondary text" Variant="BitVariant.Text">SevereWarning</BitCompoundButton>
                </div>
                <div>
                    <BitCompoundButton Color="BitColor.Error" SecondaryText="This is the secondary text">Error</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Error" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Error</BitCompoundButton>
                    <BitCompoundButton Color="BitColor.Error" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Error</BitCompoundButton>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div>
                Empower customization by overriding default styles and classes, allowing tailored design modifications to suit specific UI requirements.
            </div>
            <br />
            <div>Component's Style & Class:</div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton SecondaryText="This is the secondary text" Style="color:darkblue;font-weight:bold">
                    Styled Button
                </BitCompoundButton>

                <BitCompoundButton SecondaryText="This is the secondary text" Variant="BitVariant.Outline" Class="custom-class">
                    Classed Button
                </BitCompoundButton>
            </div>
            <br /><br /><br /><br />
            <div><b>Styles</b> & <b>Classes</b>:</div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton SecondaryText="This is the secondary text"
                                   Styles="@(new() { Container = "line-height: 2;",
                                                     Primary = "color: darkmagenta;",
                                                     Secondary = "color: darkslateblue;" })">
                    Fill
                </BitCompoundButton>

                <BitCompoundButton SecondaryText="This is the secondary text"
                                   Variant="BitVariant.Outline"
                                   Classes="@(new() { Container = "custom-container",
                                                      Primary = "custom-primary",
                                                      Secondary = "custom-secondary" })">
                    Outline
                </BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Icon" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div>
                BitCompoundButton has an icon slot that, if specified, renders an icon that can be set at the start or end of component using IconPosition.
            </div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton IconName="@BitIconName.Emoji" SecondaryText="IconPosition Start">
                    Start
                </BitCompoundButton>
                <BitCompoundButton IconName="@BitIconName.Emoji"
                                   SecondaryText="IconPosition Start"
                                   Variant="BitVariant.Outline">
                    Start
                </BitCompoundButton>
                <BitCompoundButton IconName="@BitIconName.Emoji"
                                   SecondaryText="IconPosition Start"
                                   Variant="BitVariant.Text">
                    Start
                </BitCompoundButton>
            </div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton IconName="@BitIconName.Emoji2"
                                   IconPosition="BitButtonIconPosition.End"
                                   SecondaryText="IconPosition End">
                    End
                </BitCompoundButton>
                <BitCompoundButton IconName="@BitIconName.Emoji2"
                                   IconPosition="BitButtonIconPosition.End"
                                   SecondaryText="IconPosition End"
                                   Variant="BitVariant.Outline">
                    End
                </BitCompoundButton>
                <BitCompoundButton IconName="@BitIconName.Emoji2"
                                   IconPosition="BitButtonIconPosition.End"
                                   SecondaryText="IconPosition End"
                                   Variant="BitVariant.Text">
                    End
                </BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Size" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div>
                Varying sizes for buttons tailored to meet diverse design needs, ensuring flexibility and visual hierarchy within your interface.
            </div>
            <br />
            <div class="buttons-container-grid">
                <div>
                    <BitCompoundButton Size="BitSize.Small" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Fill">Small</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Medium" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Fill">Medium</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Large" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Fill">Large</BitCompoundButton>
                </div>
                <br />
                <div>
                    <BitCompoundButton Size="BitSize.Small" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Small</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Medium" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Medium</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Large" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Outline">Large</BitCompoundButton>
                </div>
                <br />
                <div>
                    <BitCompoundButton Size="BitSize.Small" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Small</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Medium" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Medium</BitCompoundButton>
                    <BitCompoundButton Size="BitSize.Large" IconName="@BitIconName.Emoji2" SecondaryText="This is the secondary text" Variant="BitVariant.Text">Large</BitCompoundButton>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Templates" RazorCode="@example7RazorCode" Id="example7">
        <ExamplePreview>
            <div>
                Here are some examples of customizing the button content.
            </div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton>
                    <PrimaryTemplate>
                        <span style="color:red">Primary Template!</span>
                    </PrimaryTemplate>
                    <SecondaryTemplate>
                        <BitIcon IconName="@BitIconName.AirplaneSolid" />
                        <span style="color:blueviolet">Secondary Template goes here!</span>
                    </SecondaryTemplate>
                </BitCompoundButton>

                <BitCompoundButton Variant="BitVariant.Outline">
                    <PrimaryTemplate>
                        <span style="color:darkcyan">Primary Template!</span>
                    </PrimaryTemplate>
                    <SecondaryTemplate>
                        <span style="color:blueviolet">Secondary Template goes here!</span>
                        <BitGridLoading Size="20" Color="@($"var({BitCss.Var.Color.Foreground.Primary})")" />
                    </SecondaryTemplate>
                </BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Events" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div>
                Managing button click event (OnClick).
            </div>
            <br />
            <div class="buttons-container">
                <BitCompoundButton OnClick="() => clickCounter++" SecondaryText="@($"Click count is: {@clickCounter}")">Click me</BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Button Type" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <div>
                BitCompoundButton supports three different types, 'Submit' for sending form data, 'Reset' to clear form inputs, and 'Button' to provide flexibility for different interaction purposes.
            </div>
            <br />
            <div class="form-container">
                @if (formIsValidSubmit is false)
                {
                    <EditForm Model="buttonValidationModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" novalidate>
                        <DataAnnotationsValidator />

                        <BitTextField Label="Required" Required @bind-Value="buttonValidationModel.RequiredText" />
                        <ValidationMessage For="() => buttonValidationModel.RequiredText" />
                        <br />
                        <BitTextField Label="Non Required" @bind-Value="buttonValidationModel.NonRequiredText" />
                        <ValidationMessage For="() => buttonValidationModel.NonRequiredText" />
                        <br />
                        <div class="buttons-container">
                            <BitCompoundButton ButtonType=BitButtonType.Submit SecondaryText="This is a Submit button">Submit</BitCompoundButton>
                            <BitCompoundButton ButtonType=BitButtonType.Reset SecondaryText="This is a Reset button">Reset</BitCompoundButton>
                            <BitCompoundButton ButtonType=BitButtonType.Button SecondaryText="This is just a button">Button</BitCompoundButton>
                        </div>
                    </EditForm>
                }
                else
                {
                    <BitMessage Severity="BitSeverity.Success">
                        The form submitted successfully.
                    </BitMessage>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="RTL" RazorCode="@example10RazorCode" Id="example10">
        <ExamplePreview>
            <div class="buttons-container" dir="rtl">
                <BitCompoundButton Dir="BitDir.Rtl"
                                   IconName="@BitIconName.Emoji"
                                   SecondaryText="محل قرار گیری نماد در ابتدا">
                    پیش فرض (ابتدا)
                </BitCompoundButton>

                <BitCompoundButton Dir="BitDir.Rtl"
                                   IconName="@BitIconName.Emoji2"
                                   Variant="BitVariant.Outline"
                                   IconPosition="BitButtonIconPosition.End"
                                   SecondaryText="محل قرار گیری نماد در انتها">
                    انتها
                </BitCompoundButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

</ComponentDemo>