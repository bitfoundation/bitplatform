@page "/components/actionbutton"
@page "/components/action-button"

<PageOutlet Url="components/actionbutton"
            Title="ActionButton"
            Description="ActionButton component of the bit BlazorUI components" />

<ComponentDemo ComponentName="ActionButton"
               ComponentDescription="ActionButton is a special type of button with a specific set of visual styles and properties."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div class="buttons-container">
                <BitActionButton IconName="@BitIconName.AddFriend">Create account</BitActionButton>
                <BitActionButton AllowDisabledFocus="false" IsEnabled="false" IconName="@BitIconName.UserRemove">Remove user (Disabled)</BitActionButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div class="buttons-container column">
                <BitLabel>Component's Style & Class:</BitLabel>
                <BitActionButton IconName="@BitIconName.ThisPC" Style="border:2px solid #777">
                    Styled Action Button
                </BitActionButton>
                <BitActionButton IconName="@BitIconName.ThisPC" Class="custom-class">
                    Classed Action Button
                </BitActionButton>
            </div>
            <br /><br />
            <div class="buttons-container column">
                <BitLabel>Styles & Classes:</BitLabel>
                <BitActionButton IconName="@BitIconName.AddFriend" Classes="@(new() { Container = "custom-container" })">
                    Action Button Classes
                </BitActionButton>

                <BitActionButton IconName="@BitIconName.AddFriend" Styles="@(new() { Icon = "color:green", Content = "color:tomato" })">
                    Action Button Styles
                </BitActionButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Visibility" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div class="buttons-container-grid">
                <div>Visible: [ <BitActionButton IconName="@BitIconName.AddEvent" Visibility="BitVisibility.Visible">Visible Action Button</BitActionButton> ]</div>
                <div>Hidden: [ <BitActionButton Visibility="BitVisibility.Hidden">Hidden Action Button</BitActionButton> ]</div>
                <div>Collapsed: [ <BitActionButton Visibility="BitVisibility.Collapsed">Collapsed Action Button</BitActionButton> ]</div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ARIA" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div class="buttons-container">
                <BitActionButton IconName="@BitIconName.Library" AriaDescription="Detailed description used for screen reader.">
                    Action Button with AriaDescription
                </BitActionButton>
                <BitActionButton IconName="@BitIconName.Library" AriaHidden="true">
                    Action Button with AriaHidden
                </BitActionButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Link button" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div class="buttons-container">
                <BitActionButton IconName="@BitIconName.Website" Target="_blank" Href="https://github.com/bitfoundation/bitplatform">
                    Open bit platform In New Tab
                </BitActionButton>
                <BitActionButton IconName="@BitIconName.Website" Href="https://github.com/bitfoundation/bitplatform">
                    Go To bit platform
                </BitActionButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom content" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div class="buttons-container">
                <BitActionButton IconName="@BitIconName.AddFriend">
                    <div class="custom-btn-ctn">
                        <span>A Text from BitLabel</span>
                        <BitSpinnerLoading Size="20" />
                    </div>
                </BitActionButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Button Type" RazorCode="@example7RazorCode" CsharpCode="@example7CsharpCode" Id="example7">
        <ExamplePreview>
            <div class="form-container">
                @if (formIsValidSubmit is false)
                {
                    <EditForm Model="buttonValidationModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" novalidate>
                        <DataAnnotationsValidator />

                        <BitTextField Label="Required" IsRequired="true" @bind-Value="buttonValidationModel.RequiredText" />
                        <ValidationMessage For="() => buttonValidationModel.RequiredText" />
                        <br />
                        <BitTextField Label="Nonrequired" @bind-Value="buttonValidationModel.NonRequiredText" />
                        <ValidationMessage For="() => buttonValidationModel.NonRequiredText" />
                        <br />
                        <div>
                            <BitActionButton IconName="@BitIconName.SendMirrored" ButtonType="BitButtonType.Submit">Submit</BitActionButton>
                            <BitActionButton IconName="@BitIconName.Reset" ButtonType="BitButtonType.Reset">Reset</BitActionButton>
                            <BitActionButton IconName="@BitIconName.ButtonControl" ButtonType="BitButtonType.Button">Button</BitActionButton>
                        </div>
                    </EditForm>
                }
                else
                {
                    <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                        The form submitted successfully.
                    </BitMessageBar>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="RTL" RazorCode="@example8RazorCode" Id="example8">
        <ExamplePreview>
            <BitActionButton Dir="BitDir.Rtl" IconName="@BitIconName.AddFriend">ساخت حساب</BitActionButton>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>

@code {
    private bool formIsValidSubmit;
    private ButtonValidationModel buttonValidationModel = new();

    private async Task HandleValidSubmit()
    {
        formIsValidSubmit = true;

        await Task.Delay(2000);

        buttonValidationModel = new();

        formIsValidSubmit = false;

        StateHasChanged();
    }

    private void HandleInvalidSubmit()
    {
        formIsValidSubmit = false;
    }
}