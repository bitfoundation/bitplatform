@page "/components/togglebutton"
@page "/components/toggle-button"

<PageOutlet Url="components/togglebutton"
            Title="ToggleButton"
            Description="ToggleButton component of the bit BlazorUI components" />

<ComponentDemo ComponentName="ToggleButton"
               ComponentDescription="ToggleButton is a type of button that stores and shows a status representing the toggle state of the component."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitToggleButton OffText="Unmuted" OffIconName="@BitIconName.Microphone"
                                 OnText="Muted" OnIconName="@BitIconName.MicOff" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Variant" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div>The BitToggleButton offers three variants: Fill (default), Outline, and Text.</div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill">Fill</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline">Outline</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text">Text</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" IsEnabled="false">Fill</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" IsEnabled="false">Outline</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" IsEnabled="false">Text</BitToggleButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Size" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div>Varying sizes for BitToggleButton tailored to meet diverse design needs, ensuring flexibility and visual hierarchy within your interface.</div>
            <br />
            <div class="example-box">
                <BitToggleButton Size="BitSize.Small" Variant="BitVariant.Fill">Small</BitToggleButton>
                <BitToggleButton Size="BitSize.Medium" Variant="BitVariant.Fill">Medium</BitToggleButton>
                <BitToggleButton Size="BitSize.Large" Variant="BitVariant.Fill">Large</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Size="BitSize.Small" Variant="BitVariant.Outline">Small</BitToggleButton>
                <BitToggleButton Size="BitSize.Medium" Variant="BitVariant.Outline">Medium</BitToggleButton>
                <BitToggleButton Size="BitSize.Large" Variant="BitVariant.Outline">Large</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Size="BitSize.Small" Variant="BitVariant.Text">Small</BitToggleButton>
                <BitToggleButton Size="BitSize.Medium" Variant="BitVariant.Text">Medium</BitToggleButton>
                <BitToggleButton Size="BitSize.Large" Variant="BitVariant.Text">Large</BitToggleButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Color" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div>Offering a range of specialized color variants with Primary being the default, providing visual cues for specific actions or states within your application.</div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Primary">Primary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Primary">Primary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Primary">Primary</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Secondary">Secondary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Secondary">Secondary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Secondary">Secondary</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Tertiary">Tertiary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Tertiary">Tertiary</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Tertiary">Tertiary</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Info">Info</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Info">Info</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Info">Info</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Success">Success</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Success">Success</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Success">Success</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Warning">Warning</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Warning">Warning</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Warning">Warning</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.SevereWarning">SevereWarning</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.SevereWarning">SevereWarning</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.SevereWarning">SevereWarning</BitToggleButton>
            </div>
            <br />
            <div class="example-box">
                <BitToggleButton Variant="BitVariant.Fill" Color="BitColor.Error">Error</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Outline" Color="BitColor.Error">Error</BitToggleButton>
                <BitToggleButton Variant="BitVariant.Text" Color="BitColor.Error">Error</BitToggleButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div>Empower customization by overriding default styles and classes, allowing tailored design modifications to suit specific UI requirements.</div>
            <br />
            <div>Component's Style & Class:</div>
            <br />
            <div class="example-box">
                <BitToggleButton Style="background-color: transparent; border-color: blueviolet; color: blueviolet;"
                                 Variant="BitVariant.Outline"
                                 OffText="Styled Button: Unmuted" OffIconName="@BitIconName.Microphone"
                                 OnText="Styled Button: Muted" OnIconName="@BitIconName.MicOff" />

                <BitToggleButton Class="custom-class"
                                 OffText="Classed Button: Unmuted" OffIconName="@BitIconName.Microphone"
                                 OnText="Classed Button: Muted" OnIconName="@BitIconName.MicOff" />
            </div>
            <br /><br />
            <div>Styles & Classes:</div>
            <br />
            <div class="example-box">
                <BitToggleButton OffText="Styled Button: Unmuted" OffIconName="@BitIconName.Microphone"
                                 OnText="Styled Button: Muted" OnIconName="@BitIconName.MicOff"
                                 Styles="@(new() { Root = "--toggle-background: pink; background: var(--toggle-background); border: none;",
                                                   Checked = "--toggle-background: peachpuff;",
                                                   Icon = "color: red;",
                                                   Text = "color: tomato;" })" />

                <BitToggleButton Variant="BitVariant.Text"
                                 OffText="Classed Button: Unmuted" OffIconName="@BitIconName.Microphone"
                                 OnText="Classed Button: Muted" OnIconName="@BitIconName.MicOff"
                                 Classes="@(new() { Root = "custom-root",
                                                    Checked = "custom-checked",
                                                    Icon = "custom-icon",
                                                    Text = "custom-text" })" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled" RazorCode="@example6RazorCode" CsharpCode="@example6CsharpCode" Id="example6">
        <ExamplePreview>
            <div>Explore default checked state, two-way binding, and handling change events for a customizable user experience.</div>
            <br />
            <div>DefaultIsChecked:</div>
            <br />
            <div>
                <BitToggleButton DefaultIsChecked="true"
                                 OffText="Unmuted" OnText="Muted"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />
            </div>
            <br /><br /><br /><br />
            <div>Two-way bound:</div>
            <br />
            <div>
                <BitToggleButton @bind-IsChecked="example51Value"
                                 Text="@(example51Value ? "Muted" : "Unmuted")"
                                 IconName="@(example51Value ? BitIconName.MicOff : BitIconName.Microphone)" />
                <br /><br />
                <BitCheckbox Label="Checked Toggle Button" @bind-Value="example51Value" />
            </div>
            <br /><br /><br /><br />
            <div>OnChange:</div>
            <br />
            <div>
                <BitToggleButton OnChange="v => example52Value = v"
                                 OffText="Unmuted" OnText="Muted"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />
                <br /><br />
                <BitLabel>Check status is: @example52Value</BitLabel>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Templates" RazorCode="@example7RazorCode" Id="example7">
        <ExamplePreview>
            <div>Here are some examples of customizing the BitToggleButton content.</div>
            <br />
            <div>
                <BitToggleButton Class="custom-content">
                    <BitIcon IconName="@BitIconName.Airplane" />
                    <span>Custom template</span>
                    <BitRollerLoading Size="20" />
                </BitToggleButton>
                <br />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Events" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div>
                Managing BitToggleButton click event (OnClick).
            </div>
            <br />
            <div class="example-content">
                <BitToggleButton OnClick="() => clickCounter++">Click me (@clickCounter)</BitToggleButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="RTL" RazorCode="@example9RazorCode" Id="example9">
        <ExamplePreview>
            <div>Use BitToggleButton in right-to-left (RTL).</div>
            <br />
            <div class="example-box" dir="rtl">
                <BitToggleButton Dir="BitDir.Rtl" Variant="BitVariant.Fill"
                                 OffText="صدا وصل" OffIconName="@BitIconName.Microphone"
                                 OnText="صدا قطع" OnIconName="@BitIconName.MicOff" />

                <BitToggleButton Dir="BitDir.Rtl" Variant="BitVariant.Outline"
                                 OffText="صدا وصل" OffIconName="@BitIconName.Microphone"
                                 OnText="صدا قطع" OnIconName="@BitIconName.MicOff" />

                <BitToggleButton Dir="BitDir.Rtl" Variant="BitVariant.Text"
                                 OffText="صدا وصل" OffIconName="@BitIconName.Microphone"
                                 OnText="صدا قطع" OnIconName="@BitIconName.MicOff" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>
