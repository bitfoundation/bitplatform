@page "/components/datagrid"
@page "/components/data-grid"

@using Demo.Shared.Dtos.DataGridDemo
@inherits AppComponentBase
@inject HttpClient HttpClient
@inject NavigationManager NavManager

<PageOutlet Url="components/datagrid"
            Title="DataGrid"
            Description="datagrid component of the bit BlazorUI components" />

<ComponentDemo ComponentName="DataGrid"
               ComponentDescription="BitDataGrid is a robust way to display an information-rich collection of items, and allow people to sort, and filter the content. Use a data-grid when information density is critical."
               Notes="To use this component, you need to install the `Bit.BlazorUI.Extras` nuget package, as described in the Optional steps of the Getting started page."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    @if (isLoadingAssemblies)
    {
        <LoadingComponent />
    }
    else
    {
        <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" CsharpCode="@example1CsharpCode" Id="example1">
            <ExamplePreview>
                <div class="grid1">
                    <div class="grid1-container">
                        <BitDataGrid Items="@FilteredItems" ResizableColumns="true" Pagination="@pagination">
                            <BitDataGridPropertyColumn Class="column--large" Property="@(c => c.Name)" Sortable="true" IsDefaultSort="BitDataGridSortDirection.Ascending">
                                <ColumnOptions>
                                    <BitSearchBox @bind-Value="typicalSampleNameFilter"
                                                  Placeholder="Search on Name"
                                                  InputHtmlAttributes="@(new Dictionary<string, object> {{"autofocus", true}})" />
                                </ColumnOptions>
                            </BitDataGridPropertyColumn>
                            <BitDataGridTemplateColumn Title="Flag" Align="BitDataGridAlign.Center">
                                <img class="flag" src="https://flagsapi.com/@(context.Code)/shiny/32.png" loading="lazy" alt="@(context.Code)" />
                            </BitDataGridTemplateColumn>
                            <BitDataGridPropertyColumn Property="@(c => c.Medals.Gold)" Sortable="true" />
                            <BitDataGridPropertyColumn Property="@(c => c.Medals.Silver)" Sortable="true" />
                            <BitDataGridPropertyColumn Property="@(c => c.Medals.Bronze)" Sortable="true" />
                            <BitDataGridPropertyColumn Property="@(c => c.Medals.Total)" Sortable="true" />
                        </BitDataGrid>
                    </div>
                    <BitDataGridPaginator Value="@pagination" />
                </div>
            </ExamplePreview>
        </ComponentExampleBox>

        <ComponentExampleBox Title="Virtualizing" RazorCode="@example2RazorCode" CsharpCode="@example2CsharpCode" Id="example2">
            <ExamplePreview>
                <div class="grid2">
                    <BitDataGrid ItemsProvider="@foodRecallProvider" TGridItem="FoodRecall" Virtualize="true" @ref="dataGrid">
                        <BitDataGridPropertyColumn Property="@(c=>c.EventId)" />
                        <BitDataGridPropertyColumn Property="@(c => c.State)" />
                        <BitDataGridPropertyColumn Property="@(c => c.City)" />
                        <BitDataGridPropertyColumn Property="@(c => c.RecallingFirm)" Title="Company" />
                        <BitDataGridPropertyColumn Property="@(c => c.Status)" />
                        <BitDataGridPropertyColumn Sortable="true" Property="@(c => c.ReportDate)" Title="Report Date" />
                    </BitDataGrid>
                </div>
                <div class="search-panel">
                    <div class="inline-block">
                        <BitSearchBox @bind-Value="VirtualSampleNameFilter" Width="250px" Placeholder="Search on Company" />
                    </div>
                </div>
            </ExamplePreview>
        </ComponentExampleBox>

        <ComponentExampleBox Title="OData" Id="example3" RazorCode="@example3RazorCode" CsharpCode="@example3CsharpCode">
            <ExamplePreview>
                <div class="grid2">
                    <BitDataGrid ItemKey="(p => p.Id)" ItemsProvider="@productsItemsProvider" TGridItem="ProductDto" Virtualize="true" @ref="productsDataGrid">
                        <BitDataGridPropertyColumn Property="@(p => p.Id)" Sortable="true" IsDefaultSort="BitDataGridSortDirection.Ascending" />
                        <BitDataGridPropertyColumn Property="@(p => p.Name)" Sortable="true" />
                        <BitDataGridPropertyColumn Property="@(p => p.Price)" Sortable="true" />
                    </BitDataGrid>
                </div>
                <div class="search-panel">
                    <div class="inline-block">
                        <BitSearchBox @bind-Value="ODataSampleNameFilter" Width="250px" Placeholder="Search on Name" />
                    </div>
                </div>
            </ExamplePreview>
        </ComponentExampleBox>
    }
</ComponentDemo>

@code {
    IQueryable<CountryModel> allCountries;
    BitDataGrid<FoodRecall> dataGrid;
    BitDataGrid<ProductDto> productsDataGrid;
    BitDataGridItemsProvider<FoodRecall> foodRecallProvider;
    BitDataGridItemsProvider<ProductDto> productsItemsProvider;
    BitDataGridPaginationState pagination = new() { ItemsPerPage = 7 };
    IQueryable<CountryModel> FilteredItems => allCountries?.Where(x => x.Name.Contains(typicalSampleNameFilter, StringComparison.CurrentCultureIgnoreCase));

    string typicalSampleNameFilter = string.Empty;
    string _virtualSampleNameFilter = string.Empty;

    string VirtualSampleNameFilter
    {
        get => _virtualSampleNameFilter;
        set
        {
            _virtualSampleNameFilter = value;
            _ = dataGrid.RefreshDataAsync();
        }
    }

    string _odataSampleNameFilter = string.Empty;

    string ODataSampleNameFilter
    {
        get => _odataSampleNameFilter;
        set
        {
            _odataSampleNameFilter = value;
            _ = productsDataGrid.RefreshDataAsync();
        }
    }
}
