@page "/components/checkbox"
@page "/components/check-box"

<PageOutlet Url="components/checkbox"
            Title="Checkbox"
            Description="Checkbox component of the bit BlazorUI components" />

<ComponentDemo ComponentName="Checkbox"
               ComponentDescription="BitCheckbox is a component that permits the user to make a binary choice, a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' or 'no' on a simple yes/no question. Checkboxes by default are shown as ☐ when unchecked and ☑ when checked."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div class="example-content">
                <BitCheckbox Label="Basic checkbox" />
                <BitCheckbox Label="Disable checkbox" IsEnabled="false" />
                <BitCheckbox Label="Disable checked checkbox" IsEnabled="false" Value="true" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Check icon" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div class="example-content">
                <BitCheckbox Label="Custom check icon" CheckIconName="@BitIconName.Heart" />
                <BitCheckbox Label="Disabled custom check icon" CheckIconName="@BitIconName.WavingHand" Value="true" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Label position" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div class="example-content">
                <BitCheckbox Label="Reversed" Reversed />
                <BitCheckbox Label="Reversed - Disabled" Reversed IsEnabled="false" />
                <BitCheckbox Label="Reversed - Disable Checked" Reversed IsEnabled="false" Value="true" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div>Component's Style & Class:</div>
            <br />
            <div class="example-content">
                <BitCheckbox Label="Styled checkbox" Style="background-color:aqua;color:red" />

                <BitCheckbox Label="Classed checkbox" Class="custom-class" />
            </div>
            <br /><br /><br />
            <div><b>Styles</b> & <b>Classes</b>:</div>
            <br />
            <div class="example-content">
                <BitCheckbox Label="Styles" Styles="@(new() { Label="color:darkgoldenrod", Box="border-color:brown", Icon="color:red" })" />

                <BitCheckbox Label="Classes" Classes="@(new() { Label="custom-label", Box="custom-box" })" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Indeterminate" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div class="example-content">
                <BitCheckbox Label="Indeterminate checkbox" Indeterminate />
                <BitCheckbox Label="Disabled indeterminate checkbox" Indeterminate IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Binding" RazorCode="@example6RazorCode" CsharpCode="@example6CsharpCode" Id="example6">
        <ExamplePreview>
            <div><b>Value</b>:</div>
            <br />
            <div class="example-content">
                <div class="controlled-box">
                    <BitCheckbox Label="One-way checked checkbox (Fixed)" Value="true" />
                </div>
                <div class="controlled-box">
                    <BitCheckbox Label="One-way controlled checkbox" Value="oneWayValue" />
                    <BitButton OnClick="() => oneWayValue = !oneWayValue">@(oneWayValue ? "Remove" : "Make") Checked</BitButton>
                </div>
                <div class="controlled-box">
                    <BitCheckbox Label="Two-way controlled checkbox" @bind-Value="twoWayValue" />
                    <BitButton OnClick="() => twoWayValue = !twoWayValue">@(twoWayValue ? "Remove" : "Make") Checked</BitButton>
                </div>
            </div>
            <br />
            <br />
            <div><b>Indeterminate</b>:</div>
            <br />
            <div class="example-content">
                <div class="controlled-box">
                    <BitCheckbox Label="One-way indeterminate checkbox (Fixed)" Indeterminate />
                </div>
                <div class="controlled-box">
                    <BitCheckbox Label="One-way Controlled indeterminate checkbox" Indeterminate="oneWayIndeterminate" />
                    <BitButton OnClick="() => oneWayIndeterminate = !oneWayIndeterminate">@(oneWayIndeterminate ? "Remove" : "Make") Indeterminate</BitButton>
                </div>
                <div class="controlled-box">
                    <BitCheckbox Label="Two-way Controlled indeterminate checkbox" @bind-Indeterminate="twoWayIndeterminate" />
                    <BitButton OnClick="() => twoWayIndeterminate = !twoWayIndeterminate">@(twoWayIndeterminate ? "Remove" : "Make") Indeterminate</BitButton>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="LabelTemplate" RazorCode="@example7RazorCode" CsharpCode="@example7CsharpCode" Id="example7">
        <ExamplePreview>
            <div>
                <BitCheckbox @bind-Value="labelTemplateValue">
                    <LabelTemplate>
                        <span style="@(labelTemplateValue ? "color: green;" : "color: red;")">Label Template</span>
                    </LabelTemplate>
                </BitCheckbox>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom content" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div class="example-content">
                <BitCheckbox @bind-Value="customCheckboxValue">
                    <div class="custom-checkbox">
                        <div class="custom-box">
                            <BitIcon IconName="@(customCheckboxValue ? BitIconName.Accept : null)" />
                        </div>
                        <span>Custom basic checkbox</span>
                    </div>
                </BitCheckbox>

                <br />

                <BitCheckbox @bind-Value="customContentValue" @bind-Indeterminate="customContentIndeterminate">
                    <div class="custom-checkbox">
                        <div class="custom-box">
                            <BitIcon IconName="@(customContentIndeterminate ? BitIconName.Fingerprint : (customContentValue ? BitIconName.Accept : null))" />
                        </div>
                        <span>Custom indeterminate checkbox</span>
                    </div>
                </BitCheckbox>
                <BitButton OnClick="() => customContentIndeterminate = true">Make Indeterminate</BitButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Validation" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <div>
                @if (string.IsNullOrEmpty(SuccessMessage))
                {
                    <EditForm Model="validationModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                        <DataAnnotationsValidator />
                        <div>
                            <BitCheckbox Label="I agree with the terms and conditions." @bind-Value="validationModel.TermsAgreement" />
                            <ValidationMessage For="@(() => validationModel.TermsAgreement)" />
                        </div>
                        <br />
                        <BitButton ButtonType="BitButtonType.Submit">Submit</BitButton>
                    </EditForm>
                }
                else
                {
                    <BitMessage Color="BitColor.Success">@SuccessMessage</BitMessage>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="RTL" RazorCode="@example10RazorCode" Id="example10">
        <ExamplePreview>
            <div class="example-content" dir="rtl">
                <BitCheckbox Dir="BitDir.Rtl" Label="چکباکس راست به چپ" />
                <br />
                <BitCheckbox Dir="BitDir.Rtl" Label="چکباکس غیرفعال" IsEnabled="false" />
                <br />
                <BitCheckbox Dir="BitDir.Rtl" Label="چکباکس غیرفعال چک شده" IsEnabled="false" Value="true" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>
