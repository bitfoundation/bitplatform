<ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" CsharpCode="@example1CsharpCode" Id="example1">
    <ExamplePreview>
        <BitNav Items="CustomBitPlatformNavMenu"
                NameSelectors="@(new() { IconName =  { Name = nameof(Section.Icon) },
                                         ChildItems =  { Name = nameof(Section.Links) },
                                         Description =  { Name = nameof(Section.Comment) } })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="FitWidth" RazorCode="@example2RazorCode" CsharpCode="@example2CsharpCode" Id="example2">
    <ExamplePreview>
        <BitNav Items="CustomBitPlatformNavMenu" FitWidth
                NameSelectors="@(new() { IconName =  { Name = nameof(Section.Icon) },
                                         ChildItems =  { Name = nameof(Section.Links) },
                                         Description =  { Name = nameof(Section.Comment) } })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="IconOnly" RazorCode="@example3RazorCode" CsharpCode="@example3CsharpCode" Id="example3">
    <ExamplePreview>
        <BitToggle @bind-Value="iconOnly" Label="Hide texts?" Inline />
        <br />
        <BitNav Items="CustomIconOnlyNavMenu" IconOnly="iconOnly"
                NameSelectors="@(new() { IconName =  { Name = nameof(Section.Icon) },
                                         ChildItems =  { Name = nameof(Section.Links) },
                                         Description =  { Name = nameof(Section.Comment) } })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Grouped" RazorCode="@example4RazorCode" CsharpCode="@example4CsharpCode" Id="example4">
    <ExamplePreview>
        <BitNav Items="CustomCarNavMenu"
                RenderType="BitNavRenderType.Grouped"
                NameSelectors="@(new() { Text =  { Name = nameof(CarMenu.Name) },
                                         Url =  { Name = nameof(CarMenu.PageUrl) },
                                         Target =  { Name = nameof(CarMenu.UrlTarget) },
                                         Title =  { Name = nameof(CarMenu.Tooltip) },
                                         IsExpanded =  { Name = nameof(CarMenu.IsExpandedParent) },
                                         CollapseAriaLabel =  { Name = nameof(CarMenu.CollapsedAriaLabel) },
                                         ExpandAriaLabel =  { Name = nameof(CarMenu.ExpandedAriaLabel) },
                                         ChildItems =  { Name = nameof(CarMenu.Links) },
                                         Description =  { Name = nameof(CarMenu.Comment) } })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Manual Mode" RazorCode="@example5RazorCode" CsharpCode="@example5CsharpCode" Id="example5">
    <ExamplePreview>
        <div>Basic</div><br />
        <BitNav Items="CustomFoodNavMenu"
                Mode="BitNavMode.Manual"
                DefaultSelectedItem="CustomFoodNavMenu[0].Childs[2]"
                NameSelectors="@(new() { Text =  { Selector = item => item.Name },
                                         IconName =  { Selector = item => item.Icon },
                                         ChildItems =  { Selector = item => item.Childs },
                                         Description =  { Selector = item => item.Comment } })" />
        <br /><br /><br />
        <div>Two-Way Bind</div><br />
        <div class="example-box">
            <BitNav @bind-SelectedItem="CustomSelectedFood"
                    Items="CustomFoodNavMenu"
                    Mode="BitNavMode.Manual"
                    DefaultSelectedItem="CustomFoodNavMenu[0].Childs[2]"
                    NameSelectors="@(new() { Text =  { Selector = item => item.Name },
                                             IconName =  { Selector = item => item.Icon },
                                             ChildItems =  { Selector = item => item.Childs },
                                             Description =  { Selector = item => item.Comment } })"
                    OnSelectItem="(FoodMenu item) => CustomSelectedFoodName = FoodMenuDropdownItems.Single(i => i.Text == item.Name).Text" />
            <br />
            <BitDropdown @bind-Value="CustomSelectedFoodName"
                         FitWidth
                         Label="Select Item"
                         Items="FoodMenuDropdownItems"
                         OnSelectItem="(BitDropdownItem<string> item) => CustomSelectedFood = Flatten(CustomFoodNavMenu).Single(i => i.Name == item.Value)" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Custom Templates" RazorCode="@example6RazorCode" CsharpCode="@example6CsharpCode" Id="example6">
    <ExamplePreview>
        <div>Header Template (Grouped)</div><br />
        <BitNav Items="CustomCarNavMenu"
                RenderType="BitNavRenderType.Grouped"
                NameSelectors="@(new() { Text =  { Name = nameof(CarMenu.Name) },
                                         Url =  { Name = nameof(CarMenu.PageUrl) },
                                         Target =  { Name = nameof(CarMenu.UrlTarget) },
                                         Title =  { Name = nameof(CarMenu.Tooltip) },
                                         IsExpanded =  { Name = nameof(CarMenu.IsExpandedParent) },
                                         CollapseAriaLabel =  { Name = nameof(CarMenu.CollapsedAriaLabel) },
                                         ExpandAriaLabel =  { Name = nameof(CarMenu.ExpandedAriaLabel) },
                                         ChildItems =  { Name = nameof(CarMenu.Links) },
                                         Description =  { Name = nameof(CarMenu.Comment) } })">
            <HeaderTemplate Context="item">
                <div class="nav-custom-header">
                    <BitIcon IconName="@BitIconName.FavoriteStarFill" />
                    <span>@item.Name</span>
                </div>
            </HeaderTemplate>
        </BitNav>
        <br /><br /><br />
        <div>Item Template</div><br />
        <BitNav Items="CustomFoodNavMenu"
                Mode="BitNavMode.Manual"
                NameSelectors="@(new() { Text =  { Selector = item => item.Name },
                                         IconName =  { Selector = item => item.Icon },
                                         ChildItems =  { Selector = item => item.Childs },
                                         Description =  { Selector = item => item.Comment } })">
            <ItemTemplate Context="item">
                <div class="nav-custom-item">
                    <BitCheckbox />
                    <BitIcon IconName="@item.Icon" />
                    <span>@item.Name</span>
                </div>
            </ItemTemplate>
        </BitNav>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Events" RazorCode="@example7RazorCode" CsharpCode="@example7CsharpCode" Id="example7">
    <ExamplePreview>
        <div class="example-box">
            <BitNav Items="CustomFoodNavMenu"
                    Mode="BitNavMode.Manual"
                    OnItemClick="(FoodMenu item) => CustomClickedItem = item"
                    OnSelectItem="(FoodMenu item) => CustomSelectedItem = item"
                    OnItemToggle="(FoodMenu item) => CustomToggledItem = item"
                    NameSelectors="@(new() { Text =  { Selector = item => item.Name },
                                                       IconName =  { Selector = item => item.Icon },
                                                       ChildItems =  { Selector = item => item.Childs },
                                                       Description =  { Selector = item => item.Comment } })" />
            <div>
                <span>Clicked Item: <b>@CustomClickedItem?.Name</b></span><br />
                <span>Selected Item: <b>@CustomSelectedItem?.Name</b></span><br />
                <span>Toggled Item: <b>@(CustomToggledItem is null ? "N/A" : $"{CustomToggledItem.Name} ({(CustomToggledItem.IsExpanded ? "Expanded" : "Collapsed")})")</b></span>
            </div>
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Custom Styles" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
    <ExamplePreview>
        <BitNav Items="CustomCustomStyleNavMenu"
                NameSelectors="@(new() { IconName =  { Name = nameof(Section.Icon) },
                                         ChildItems =  { Name = nameof(Section.Links) },
                                         Description =  { Name = nameof(Section.Comment) } })"
                Styles="@(new() { ItemContainer = "border: 1px solid green; margin: 2px;",
                                  ToggleButton = "color: cyan;",
                                  Item = "color: red;",
                                  ItemIcon = "color: gold; margin-right: 15px;" })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="RTL" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
    <ExamplePreview>
        <div dir="rtl">
            <BitNav Dir="BitDir.Rtl"
                    Items="CustomRtlBitPlatformNavMenu"
                    NameSelectors="@(new() { IconName =  { Name = nameof(Section.Icon) },
                                             ChildItems =  { Name = nameof(Section.Links) },
                                             Description =  { Name = nameof(Section.Comment) } })" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>