@page "/components/snackbar"

<ComponentDemo ComponentName="Snackbar"
               ComponentDescription="Snackbars provide brief notifications. The component is also known as a toast."
               ComponentParameters="@componentParameters"
               EnumParameters="@enumParameters">

    <ComponentExampleBox Title="Type" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitSnackbar @ref="SnackbarTypeRef" />
                <BitButton OnClick="() => OpenSnackbarType(BitSnackbarType.Info)">Info</BitButton>
                <BitButton OnClick="() => OpenSnackbarType(BitSnackbarType.Success)">Success</BitButton>
                <BitButton OnClick="() => OpenSnackbarType(BitSnackbarType.Warning)">Warning</BitButton>
                <BitButton OnClick="() => OpenSnackbarType(BitSnackbarType.Error)">Error</BitButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Position" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-box">
                <BitSnackbar @ref="SnackbarPositionRef" Position="SnackbarPosition" />
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.TopLeft)">Top-Left</BitButton>
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.TopCenter)">Top-Center</BitButton>
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.TopRight)">Top-Right</BitButton>
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.BottomLeft)">Bottom-Left</BitButton>
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.BottomCenter)">Bottom-Center</BitButton>
                <BitButton OnClick="() => OpenSnackbarPosition(BitSnackbarPosition.BottomRight)">Bottom-Right</BitButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Dismiss" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-box">
                <div>
                    <BitButton OnClick="OpenNonAutoDismiss">Non-AutoDismiss</BitButton>
                    <BitSnackbar @ref="NonAutoDismiss" AutoDismiss="false" />
                </div>

                <div>
                    <BitButton OnClick="OpenAutoDismissTime">AutoDismissTime (10 Seconds)</BitButton>
                    <BitSnackbar @ref="AutoDismissTime" AutoDismissTime="TimeSpan.FromSeconds(10)" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Customized" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-box">
                <div>
                    <BitSnackbar @ref="DismissIconName" DismissIconName="BitIconName.Go" />
                    <BitButton OnClick="OpenDismissIconName">DismissIconName</BitButton>
                </div>

                <div>
                    <BitSnackbar @ref="TitleTemplate" AutoDismiss="false">
                        <TitleTemplate Context="title">
                            <div style="display: flex; flex-direction: row; gap: 10px;">
                                <span>@title</span>
                                <BitProgressIndicator BarHeight="20" Style="width: 40px;" />
                            </div>
                        </TitleTemplate>
                    </BitSnackbar>
                    <BitButton OnClick="OpenTitleTemplate">TitleTemplate</BitButton>
                </div>

                <div>
                    <BitSnackbar @ref="BodyTemplate" AutoDismiss="false">
                        <BodyTemplate Context="body">
                            <div style="display: flex; flex-flow: column nowrap; gap: 5px;">
                                <span style="font-size: 12px; margin-bottom: 5px;">@body</span>
                                <div style="display: flex; gap: 10px;">
                                    <BitButton OnClick="() => BodyTemplateAnswer = BodyTemplateYesAnswer">Yes</BitButton>
                                    <BitButton OnClick="() => BodyTemplateAnswer = BodyTemplateNoAnswer">No</BitButton>
                                </div>
                                <span>Answer: @BodyTemplateAnswer</span>
                            </div>
                        </BodyTemplate>
                    </BitSnackbar>
                    <BitButton OnClick="OpenBodyTemplate">BodyTemplate</BitButton>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>