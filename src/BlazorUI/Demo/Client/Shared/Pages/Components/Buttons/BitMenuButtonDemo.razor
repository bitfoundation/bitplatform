@page "/components/menu-button"

<ComponentDemo ComponentName="MenuButton"
               ComponentDescription="A menu button is a menu item that displays a word or phrase that the user can click to initiate an operation."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <BitPivot OnItemClick="OnTabClick">
        <BitPivotItem HeaderText="Item">
            <ComponentExampleBox Title="BitMenuButton" HTMLSourceCode="@example1BitMenuButtonItemHTMLCode" CSharpSourceCode="@example1BitMenuButtonItemCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />

                        <BitMenuButton Text="Primary"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />

                        <BitMenuButton Text="Disabled"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key"
                                       IsEnabled="false" />

                        <BitMenuButton Text="Item Disabled"
                                       Items="disabledItemMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example1SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with IconName" HTMLSourceCode="@example2BitMenuButtonItemHTMLCode" CSharpSourceCode="@example2BitMenuButtonItemCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       IconName="BitIconName.Add"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example2SelectedItem = item.Key" />

                        <BitMenuButton Text="Primary Button"
                                       IconName="BitIconName.Edit"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example2SelectedItem = item.Key" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example2SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Style & Class" HTMLSourceCode="@example3BitMenuButtonItemHTMLCode" CSharpSourceCode="@example3BitMenuButtonItemCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can directly get css class or inline style.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Styled Button"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example3SelectedItem = item.Key"
                                       Style="width: 200px; height: 40px; background-color: #8A8886; border-color: black;" />

                        <BitMenuButton Text="Classed Button"
                                       Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example3SelectedItem = item.Key"
                                       Class="custom-menu-btn" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example3SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with HeaderTemplate" HTMLSourceCode="@example4BitMenuButtonItemHTMLCode" CSharpSourceCode="@example4BitMenuButtonItemCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button header content.</div>
                    <div class="example-content">
                        <BitMenuButton Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example4SelectedItem = item.Key"
                                       ButtonStyle="BitButtonStyle.Standard">
                            <HeaderTemplate>
                                <div style="font-weight: bold; color: #d13438;">
                                    Custom Header!
                                </div>
                            </HeaderTemplate>
                        </BitMenuButton>

                        <BitMenuButton Items="basicMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example4SelectedItem = item.Key"
                                       ButtonStyle="BitButtonStyle.Primary">
                            <HeaderTemplate>
                                <BitIcon IconName="BitIconName.Warning" />
                                <div style="font-weight: 600; color: white;">
                                    Custom Header!
                                </div>
                                <BitIcon IconName="BitIconName.Warning" />
                            </HeaderTemplate>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example4SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with ItemTemplate" HTMLSourceCode="@example5BitMenuButtonItemHTMLCode" CSharpSourceCode="@example5BitMenuButtonItemCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       IconName="BitIconName.Edit"
                                       Items="itemTemplateMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example5SelectedItem = item.Key"
                                       ButtonStyle="BitButtonStyle.Standard">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "red");">
                                        @item.Text (@item.Key)
                                    </span>
                                </div>
                            </ItemTemplate>
                        </BitMenuButton>

                        <BitMenuButton Text="Primary Button"
                                       IconName="BitIconName.Edit"
                                       Items="itemTemplateMenuButton"
                                       OnItemClick="(BitMenuButtonItem item) => example5SelectedItem = item.Key"
                                       ButtonStyle="BitButtonStyle.Primary">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "red");">
                                        @item.Text (@item.Key)
                                    </span>
                                </div>
                            </ItemTemplate>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example5SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton in different sizes" HTMLSourceCode="@example6BitMenuButtonItemHTMLCode" CSharpSourceCode="@example6BitMenuButtonItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Small"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Medium"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Large"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitMenuButton in different sizes" HTMLSourceCode="@example7BitMenuButtonItemHTMLCode" CSharpSourceCode="@example7BitMenuButtonItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-sm"
                                           ButtonSize="BitButtonSize.Small"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-md"
                                           ButtonSize="BitButtonSize.Medium"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-lg"
                                           ButtonSize="BitButtonSize.Large"
                                           Items="basicMenuButton"
                                           OnItemClick="(BitMenuButtonItem item) => example1SelectedItem = item.Key" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>

        <BitPivotItem HeaderText="Custom">
            <ComponentExampleBox Title="BitMenuButton" HTMLSourceCode="@example1CustomItemHTMLCode" CSharpSourceCode="@example1CustomItemCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       Items="basicMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />

                        <BitMenuButton Text="Primary"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       Items="basicMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />

                        <BitMenuButton Text="Disabled"
                                       Items="basicMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id"
                                       IsEnabled="false" />

                        <BitMenuButton Text="Item Disabled"
                                       Items="disabledItemMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example1SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with IconName" HTMLSourceCode="@example2CustomItemHTMLCode" CSharpSourceCode="@example2CustomItemCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       IconName="BitIconName.Add"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       Items="basicMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example2SelectedItem = item.Id" />

                        <BitMenuButton Text="Primary Button"
                                       IconName="BitIconName.Edit"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       Items="basicMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example2SelectedItem = item.Id" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example2SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Style & Class" HTMLSourceCode="@example3CustomItemHTMLCode" CSharpSourceCode="@example3CustomItemCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can directly get css class or inline style.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Styled Button"
                                       Items="basicMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example3SelectedItem = item.Id"
                                       Style="width: 200px; height: 40px; background-color: #8A8886; border-color: black;" />

                        <BitMenuButton Text="Classed Button"
                                       Items="basicMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example3SelectedItem = item.Id"
                                       Class="custom-menu-btn" />
                    </div>
                    <div class="clicked-item">Clicked Item: @example3SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with HeaderTemplate" HTMLSourceCode="@example4CustomItemHTMLCode" CSharpSourceCode="@example4CustomItemCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button header content.</div>
                    <div class="example-content">
                        <BitMenuButton Items="basicMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example4SelectedItem = item.Id"
                                       ButtonStyle="BitButtonStyle.Standard">
                            <HeaderTemplate>
                                <div style="font-weight: bold; color: #d13438;">
                                    Custom Header!
                                </div>
                            </HeaderTemplate>
                        </BitMenuButton>

                        <BitMenuButton Items="basicMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example4SelectedItem = item.Id"
                                       ButtonStyle="BitButtonStyle.Primary">
                            <HeaderTemplate>
                                <BitIcon IconName="BitIconName.Warning" />
                                <div style="font-weight: 600; color: white;">
                                    Custom Header!
                                </div>
                                <BitIcon IconName="BitIconName.Warning" />
                            </HeaderTemplate>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example4SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with ItemTemplate" HTMLSourceCode="@example5CustomItemHTMLCode" CSharpSourceCode="@example5CustomItemCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       IconName="BitIconName.Edit"
                                       Items="itemTemplateMenuButtonWithCustomType"
                                       TextField="@nameof(MenuActionItem.Name)"
                                       KeyField="@nameof(MenuActionItem.Id)"
                                       IconNameField="@nameof(MenuActionItem.Icon)"
                                       OnItemClick="(MenuActionItem item) => example5SelectedItem = item.Id"
                                       ButtonStyle="BitButtonStyle.Standard">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Id == "add-key" ? "green" : item.Id == "edit-key" ? "yellow" : "red");">
                                        @item.Name (@item.Id)
                                    </span>
                                </div>
                            </ItemTemplate>
                        </BitMenuButton>

                        <BitMenuButton Text="Primary Button"
                                       IconName="BitIconName.Edit"
                                       Items="itemTemplateMenuButtonWithCustomType"
                                       TextFieldSelector="item => item.Name"
                                       KeyFieldSelector="item => item.Id"
                                       IconNameFieldSelector="item => item.Icon"
                                       OnItemClick="(MenuActionItem item) => example5SelectedItem = item.Id"
                                       ButtonStyle="BitButtonStyle.Primary">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Id == "add-key" ? "green" : item.Id == "edit-key" ? "yellow" : "red");">
                                        @item.Name (@item.Id)
                                    </span>
                                </div>
                            </ItemTemplate>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example5SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton in different sizes" HTMLSourceCode="@example6CustomItemHTMLCode" CSharpSourceCode="@example6CustomItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Small"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Medium"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Large"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitMenuButton in different sizes" HTMLSourceCode="@example7CustomItemHTMLCode" CSharpSourceCode="@example7CustomItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-sm"
                                           ButtonSize="BitButtonSize.Small"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-md"
                                           ButtonSize="BitButtonSize.Medium"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-lg"
                                           ButtonSize="BitButtonSize.Large"
                                           Items="basicMenuButtonWithCustomType"
                                           TextField="@nameof(MenuActionItem.Name)"
                                           KeyField="@nameof(MenuActionItem.Id)"
                                           IconNameField="@nameof(MenuActionItem.Icon)"
                                           OnItemClick="(MenuActionItem item) => example1SelectedItem = item.Id" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>

        <BitPivotItem HeaderText="Option">
            <ComponentExampleBox Title="BitMenuButton" HTMLSourceCode="@example1BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example1BitMenuButtonOptionCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>

                        <BitMenuButton Text="Primary"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>

                        <BitMenuButton Text="Disabled"
                                       OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key"
                                       IsEnabled="false">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>

                        <BitMenuButton Text="Item Disabled"
                                       OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" IsEnabled="false" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" IsEnabled="false" />
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example1SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with IconName" HTMLSourceCode="@example2BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example2BitMenuButtonOptionCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       IconName="BitIconName.Add"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       OnItemClick="(BitMenuButtonOption item) => example2SelectedItem = item.Key">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>

                        <BitMenuButton Text="Primary Button"
                                       IconName="BitIconName.Edit"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       OnItemClick="(BitMenuButtonOption item) => example2SelectedItem = item.Key">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example2SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Style & Class" HTMLSourceCode="@example3BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example3BitMenuButtonOptionCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can directly get css class or inline style.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Styled Button"
                                       OnItemClick="(BitMenuButtonOption item) => example3SelectedItem = item.Key"
                                       Style="width: 200px; height: 40px; background-color: #8A8886; border-color: black;">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>

                        <BitMenuButton Text="Classed Button"
                                       OnItemClick="(BitMenuButtonOption item) => example3SelectedItem = item.Key"
                                       Class="custom-menu-btn">
                            <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                            <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example3SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with HeaderTemplate" HTMLSourceCode="@example4BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example4BitMenuButtonOptionCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button header content.</div>
                    <div class="example-content">
                        <BitMenuButton ButtonStyle="BitButtonStyle.Standard"
                                       OnItemClick="(BitMenuButtonOption item) => example4SelectedItem = item.Key">
                            <HeaderTemplate>
                                <div style="font-weight: bold; color: #d13438;">
                                    Custom Header!
                                </div>
                            </HeaderTemplate>
                            <ChildContent>
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                                <BitMenuButtonOption Text="Item D" Key="D" IconName="BitIconName.Emoji" />
                            </ChildContent>
                        </BitMenuButton>

                        <BitMenuButton ButtonStyle="BitButtonStyle.Primary"
                                       OnItemClick="(BitMenuButtonOption item) => example4SelectedItem = item.Key">
                            <HeaderTemplate>
                                <BitIcon IconName="BitIconName.Warning" />
                                <div style="font-weight: 600; color: white;">
                                    Custom Header!
                                </div>
                                <BitIcon IconName="BitIconName.Warning" />
                            </HeaderTemplate>
                            <ChildContent>
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                                <BitMenuButtonOption Text="Item D" Key="D" IconName="BitIconName.Emoji" />
                            </ChildContent>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example4SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton with ItemTemplate" HTMLSourceCode="@example5BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example5BitMenuButtonOptionCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <BitMenuButton Text="Standard Button"
                                       ButtonStyle="BitButtonStyle.Standard"
                                       IconName="BitIconName.Add"
                                       OnItemClick="(BitMenuButtonOption item) => example5SelectedItem = item.Key">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "red");">
                                        @item.Text (@item.Key)
                                    </span>
                                </div>
                            </ItemTemplate>
                            <ChildContent>
                                <BitMenuButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                <BitMenuButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                <BitMenuButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                            </ChildContent>
                        </BitMenuButton>

                        <BitMenuButton Text="Primary Button"
                                       ButtonStyle="BitButtonStyle.Primary"
                                       IconName="BitIconName.Edit"
                                       OnItemClick="(BitMenuButtonOption item) => example5SelectedItem = item.Key">
                            <ItemTemplate Context="item">
                                <div class="item-template-box">
                                    <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "red");">
                                        @item.Text (@item.Key)
                                    </span>
                                </div>
                            </ItemTemplate>
                            <ChildContent>
                                <BitMenuButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                <BitMenuButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                <BitMenuButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                            </ChildContent>
                        </BitMenuButton>
                    </div>
                    <div class="clicked-item">Clicked Item: @example5SelectedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitMenuButton in different sizes" HTMLSourceCode="@example6BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example6BitMenuButtonOptionCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Small"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Medium"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           ButtonSize="BitButtonSize.Large"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitMenuButton in different sizes" HTMLSourceCode="@example7BitMenuButtonOptionHTMLCode" CSharpSourceCode="@example7BitMenuButtonOptionCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitMenuButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-sm"
                                           ButtonSize="BitButtonSize.Small"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-md"
                                           ButtonSize="BitButtonSize.Medium"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitMenuButton Text="Button"
                                           Class="custom-btn-lg"
                                           ButtonSize="BitButtonSize.Large"
                                           OnItemClick="(BitMenuButtonOption item) => example1SelectedItem = item.Key">
                                <BitMenuButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitMenuButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitMenuButton>
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>
    </BitPivot>
</ComponentDemo>