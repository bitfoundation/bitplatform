@page "/components/drop-down"
@inject HttpClient HttpClient
@inject NavigationManager NavManager

<ComponentDemo ComponentName="DropDown"
               ComponentParameters="componentParameters"
               ComponentDescription="A dropdown is a list in which the selected item is always visible while other items are visible on demand by clicking a dropdown button. Dropdowns are typically used for forms.">
    <ComponentExampleBox Title="BitDropDown" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a dropdown you can use a BitDropDown component.</div>
            <div>
                <BitDropDown Label="Basic Uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>
                <BitDropDown Label="Disabled with defaultValue"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             IsEnabled="false"
                             DefaultValue="v-bro"
                             Style="width: 100%; max-width: 290px; margin-bottom: 20px;">
                </BitDropDown>
                <BitDropDown Label="Multi-select uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select options"
                             IsMultiSelect="true"
                             Style="width: 100%; max-width: 290px; margin-bottom: 20px;">
                </BitDropDown>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled Single-Select" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <BitDropDown @bind-Value="ControlledValue"
                         Label="Single-select Controlled"
                         Items="GetDropdownItems()"
                         Placeholder="Select an option"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled Multi-Select" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <BitDropDown @bind-Values="ControlledValues"
                         Label="Multi-select controlled"
                         Items="GetDropdownItems()"
                         Placeholder="Select options"
                         IsMultiSelect="true"
                         Style="width: 100%; max-width: 290px; margin:20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Customized Dropdown" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <BitDropDown Label="Custom Controlled"
                         Items="GetCustomDropdownItems()"
                         Placeholder="Select an option"
                         AriaLabel="Custom dropdown"
                         Style="width: 100%; max-width: 290px; margin:20px 0 20px 0">
                <TextTemplate>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <i class="bit-icon bit-icon--@((context.Items.Find(i => i.Value == context.Value).Data as DropDownItemData).IconName)"
                           aria-hidden="true"
                           title="@((context.Items.Find(i => i.Value == context.Value).Data as DropDownItemData).IconName)"></i>
                        <span>@context.Items.Find(i => i.Value == context.Value).Text</span>
                    </div>
                </TextTemplate>
                <PlaceholderTemplate>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <i class="bit-icon bit-icon--MessageFill" aria-hidden="true"></i>
                        <span>@context.Placeholder</span>
                    </div>
                </PlaceholderTemplate>
                <CaretDownTemplate>
                    <i class="bit-icon bit-icon--CirclePlus"></i>
                </CaretDownTemplate>
                <ItemTemplate>
                    <div style="display: flex; flex-flow: row nowrap; justify-content: flex-start; align-items: center; gap: 10px;">
                        <i class="bit-icon bit-icon--@((context.Data as DropDownItemData).IconName)"
                           aria-hidden="true"
                           title="@((context.Data as DropDownItemData).IconName)"></i>
                        <span>@context.Text</span>
                    </div>
                </ItemTemplate>
            </BitDropDown>

            <BitDropDown Items="GetCustomDropdownItems()"
                         Placeholder="Select an option"
                         Label="Custom Label"
                         AriaLabel="Custom dropdown label"
                         Style="width: 100%; max-width: 290px; margin:0 0 20px 0">
                <LabelTemplate>
                    <label>Custom label</label>
                    <button type="button" title="Info" aria-label="Info" class="custom-drp-lbl-ic">
                        <i class="bit-icon bit-icon--Info"></i>
                    </button>
                </LabelTemplate>
            </BitDropDown>

            <BitDropDown Items="GetCustomDropdownItems()"
                         Placeholder="Select an option"
                         Label="Custom CaretDownIconName"
                         AriaLabel="Custom dropdown chevron icon with icon name"
                         CaretDownIconName="BitIconName.ScrollUpDown"
                         Style="width: 100%; max-width: 290px">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Cascading DropDowns" HTMLSourceCode="@example5HTMLCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="grid-wrap">
                <div>
                    <BitDropDown @bind-Value="@CurrentCategory"
                                 Label="Category"
                                 Items="Categories"
                                 Placeholder="Select options"
                                 Style="width: 100%; max-width: 290px; margin:20px 0 20px 0">
                    </BitDropDown>

                    <BitDropDown @bind-Value="@CurrentProduct"
                                 Label="Product"
                                 Items="@(Products.Where(p => p.Value.StartsWith($"{CurrentCategory}-")).ToList())"
                                 Placeholder="Select options"
                                 IsEnabled="string.IsNullOrEmpty(CurrentCategory) is false"
                                 Style="width: 100%; max-width: 290px; margin:20px 0 20px 0">
                    </BitDropDown>
                </div>

                <div class="cascading-dropdowns-info">
                    <h5>Current category: @(Categories.FirstOrDefault(c => c.Value == CurrentCategory)?.Text ?? "-")</h5>
                    <h5>Current product: @(Products.FirstOrDefault(c => c.Value == CurrentProduct)?.Text ?? "-")</h5>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="DropDown with validation" HTMLSourceCode="@example6HTMLCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            @if (string.IsNullOrEmpty(SuccessMessage))
            {
                <EditForm Model="formValidationDropDownModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                    <DataAnnotationsValidator />

                    <div class="validation-summary">
                        <ValidationSummary />
                    </div>

                    <div>
                        <BitDropDown @bind-Value="formValidationDropDownModel.Category"
                                     Label="Select category"
                                     Items="GetCategoryDropdownItems()"
                                     IsMultiSelect="false"
                                     Placeholder="Select an option"
                                     Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0" />

                        <ValidationMessage For="@(() => formValidationDropDownModel.Category)" />
                    </div>

                    <div>
                        <BitDropDown @bind-Values="formValidationDropDownModel.Products"
                                     Label="Select two ptoducts"
                                     Items="GetProductDropdownItems()"
                                     IsMultiSelect="true"
                                     Placeholder="Select an option"
                                     Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0" />

                        <ValidationMessage For="@(() => formValidationDropDownModel.Products)" />
                    </div>

                    <br />

                    <BitButton ButtonType="BitButtonType.Submit">
                        Submit
                    </BitButton>
                </EditForm>
            }
            else
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @SuccessMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Responsive BitDropDown" HTMLSourceCode="@example7HTMLCode" CSharpSourceCode="@example7CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <div class="example-desc">Using the IsResponsiveModeEnabled parameter, the drop down items will render in a side panel in small screen sizes.</div>
            <div>
                <BitDropDown Label="Responsive DropDown"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             IsResponsiveModeEnabled=true
                             Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="DropDown with search box" HTMLSourceCode="@example8HTMLCode" CSharpSourceCode="@example8CSharpCode" ExampleId="example8">
        <ExamplePreview>
            <div>
                <BitDropDown Label="Single-select Controlled with search box"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             IsResponsiveModeEnabled="true"
                             ShowSearchBox="true"
                             SearchBoxPlaceholder="Search item"
                             Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>

                <BitDropDown Label="Multi-select controlled with search box"
                             Items="GetDropdownItems()"
                             Placeholder="Select options"
                             IsMultiSelect="true"
                             IsResponsiveModeEnabled="true"
                             ShowSearchBox="true"
                             SearchBoxPlaceholder="Search items"
                             Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="DropDown with virtualization" HTMLSourceCode="@example9HTMLCode" CSharpSourceCode="@example9CSharpCode" ExampleId="example9">
        <ExamplePreview>
            <BitDropDown Label="Single-select Controlled with virtualization"
                         Items="LargeListOfCategoriesForSingleSelect"
                         Virtualize="true"
                         Placeholder="Select an option"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search item"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>

            <BitDropDown Label="Multi-select controlled with virtualization"
                         Items="LargeListOfCategoriesForMultiSelect"
                         Virtualize="true"
                         Placeholder="Select options"
                         IsMultiSelect="true"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search items"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="DropDown with virtualization (ItemsProvider)" HTMLSourceCode="@example10HTMLCode" CSharpSourceCode="@example10CSharpCode" ExampleId="example9">
        <ExamplePreview>
            <BitDropDown Label="Single-select Controlled with virtualization"
                         ItemsProvider="LoadDropdownItems"
                         Virtualize="true"
                         Placeholder="Select an option"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search item"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>

            <BitDropDown Label="Multi-select controlled with virtualization"
                         ItemsProvider="LoadDropdownItems"
                         Virtualize="true"
                         Placeholder="Select options"
                         IsMultiSelect="true"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search items"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitDropDown RTL" HTMLSourceCode="@example11HTMLCode" CSharpSourceCode="@example11CSharpCode" ExampleId="example11">
        <ExamplePreview>
            <BitDropDown Label="Single-select with Rtl direction"
                         Items="GetArabicDropdownItems()"
                         Placeholder="حدد اختيارا"
                         IsResponsiveModeEnabled="true"
                         IsRtl="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="عناصر البحث"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
            <BitDropDown Label="Multi-select with Rtl direction"
                         Items="GetArabicDropdownItems()"
                         Placeholder="اشر على الخيارات"
                         IsMultiSelect="true"
                         IsResponsiveModeEnabled="true"
                         IsRtl="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="عناصر البحث"
                         Style="width: 100%; max-width: 290px; margin-bottom: 20px;">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitDropDown Drop Direction" HTMLSourceCode="@example12HTMLCode" CSharpSourceCode="@example12CSharpCode" ExampleId="example12">
        <ExamplePreview>
            <BitDropDown Label="Single-select Controlled with auto drop direction"
                         Items="LargeListOfCategoriesDropDirection"
                         Virtualize="true"
                         Placeholder="Select an option"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search item"
                         DropDirection="BitDropDirection.Auto"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>

            <BitDropDown Label="Single-select Controlled with top and bottom drop direction"
                         Items="LargeListOfCategoriesDropDirection"
                         Virtualize="true"
                         Placeholder="Select an option"
                         IsResponsiveModeEnabled="true"
                         ShowSearchBox="true"
                         SearchBoxPlaceholder="Search item"
                         DropDirection="BitDropDirection.TopAndBottom"
                         Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
            </BitDropDown>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Clear button" HTMLSourceCode="@example13HTMLCode" CSharpSourceCode="@example13CSharpCode" ExampleId="example13">
        <ExamplePreview>
            <div class="example-desc">Select an item for the Clear button to show.</div>
            <div>
                <BitDropDown @bind-Value="SelectedValue"
                             ShowClearButton="true"
                             Label="Basic Uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select an option"
                             Style="width: 100%; max-width: 290px; margin: 20px 0 20px 0">
                </BitDropDown>
                <div>Value: @SelectedValue</div>
                <br>
                <hr />
                <br>
                <BitDropDown @bind-Values="SelectedValues"
                             ShowClearButton="true"
                             Label="Multi-select uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select options"
                             IsMultiSelect="true"
                             Style="width: 100%; max-width: 290px; margin-bottom: 20px;">
                </BitDropDown>
                <div>Values: @string.Join(',', SelectedValues)</div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>