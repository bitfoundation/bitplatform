@page "/components/text-field"

<ComponentDemo ComponentName="TextField"
               ComponentDescription="Text fields give people a way to enter and edit text. They’re used in forms, modal dialogs, tables, and other surfaces where text input is required."
               ComponentParameters="componentParameters"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" HTMLSourceCode="@example1HTMLCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a text..." Label="Basic" />
                <BitTextField Placeholder="Enter a text..." Label="Disabled" IsEnabled="false" />
                <BitTextField Placeholder="Enter a text..." Label="Description" Description="This is Description" />
                <BitTextField Placeholder="Enter a text..." Label="IsRequired" IsRequired="true" />
                <BitTextField Placeholder="Enter a text..." Label="MaxLength: 5" MaxLength="5" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Underlined BitTextField" HTMLSourceCode="@example2HTMLCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a text..." Label="Basic" IsUnderlined="true" />
                <BitTextField Placeholder="Enter a text..." Label="Required" IsUnderlined="true" IsRequired="true" />
                <BitTextField Placeholder="Enter a text..." Label="Disabled" IsUnderlined="true" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTextField without Border" HTMLSourceCode="@example3HTMLCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a text..." Label="Basic No Border" HasBorder="false" />
                <BitTextField Placeholder="Enter a text..." Label="Required No Border" HasBorder="false" IsRequired="true" />
                <BitTextField Placeholder="Enter a text..." Label="Disabled No Border" HasBorder="false" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Multiline BitTextField" HTMLSourceCode="@example4HTMLCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a text..." Label="Resizable (By default)" IsMultiline="true" />
                <BitTextField Placeholder="Enter a text..." Label="Unresizable (Fixed)" IsMultiline="true" IsResizable="false" />
                <BitTextField Placeholder="Enter a text..." Label="Row count (10)" IsMultiline="true" Rows="10" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTextField with Icon" HTMLSourceCode="@example5HTMLCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter an email..." Label="Email Icon" IconName="BitIconName.EditMail" />
                <BitTextField Placeholder="Enter a date..." Label="Calendar Icon" IconName="BitIconName.Calendar" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Prefix & Suffix" HTMLSourceCode="@example6HTMLCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Label="With Prefix" Prefix="https://" />
                <BitTextField Label="With Suffix" Suffix=".com" />
                <BitTextField Label="With Prefix and Suffix" Prefix="https://" Suffix=".com" />
                <BitTextField Label="Disabled" Prefix="https://" Suffix=".com" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTextField with Templates" HTMLSourceCode="@example7HTMLCode" ExampleId="example7">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a text...">
                    <LabelTemplate>
                        <label style="color: coral;">This is custom Label</label>
                    </LabelTemplate>
                </BitTextField>

                <BitTextField Placeholder="Enter a text..." Label="This is custom Description">
                    <DescriptionTemplate>
                        <span style="color: coral;">Description</span>
                    </DescriptionTemplate>
                </BitTextField>

                <BitTextField Placeholder="Enter a text..." Label="This is custom Prefix">
                    <PrefixTemplate>
                        <span style="color: coral; margin: 0 5px;">Prefix</span>
                    </PrefixTemplate>
                </BitTextField>

                <BitTextField Placeholder="Enter a text..." Label="This is custom Suffix">
                    <SuffixTemplate>
                        <span style="color: coral; margin: 0 5px;">Suffix</span>
                    </SuffixTemplate>
                </BitTextField>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTextField Password type" HTMLSourceCode="@example8HTMLCode" ExampleId="example8">
        <ExamplePreview>
            <div class="example-box">
                <BitTextField Placeholder="Enter a password..." Label="Password" Type="BitTextFieldType.Password" />
                <BitTextField Placeholder="Enter a password..." Label="Can Reveal Password" Type="BitTextFieldType.Password" CanRevealPassword="true" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Binding" HTMLSourceCode="@example9HTMLCode" CSharpSourceCode="@example9CSharpCode" ExampleId="example9">
        <ExamplePreview>
            <div class="example-box">
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="One-way" Value="@OneWayValue" />
                    <BitOtpInput Length="4" Style="margin-top: 5px;" @bind-Value="OneWayValue" />
                </div>
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="Two-way" @bind-Value="TwoWayValue" />
                    <BitOtpInput Length="4" Style="margin-top: 5px;" @bind-Value="TwoWayValue" />
                </div>
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="OnChange" OnChange="(v) => OnChangeValue = v" />
                    <span>Value: @OnChangeValue</span>
                </div>
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="Readonly" @bind-Value="ReadOnlyValue" IsReadonly="true" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Trimmed TextField" HTMLSourceCode="@example10HTMLCode" CSharpSourceCode="@example10CSharpCode" ExampleId="example10">
        <ExamplePreview>
            <div class="example-desc">The trim property removes whitespaces from both sides of a string.</div>
            <div class="example-box">
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="Trimmed" IsTrimmed="true" @bind-Value="TrimmedValue" />
                    <pre class="trimmed-box">[@TrimmedValue]</pre>
                </div>
                <div>
                    <BitTextField Placeholder="Enter a text..." Label="Not Trimmed" @bind-Value="NotTrimmedValue" />
                    <pre class="trimmed-box">[@NotTrimmedValue]</pre>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom Style & CSS Class" HTMLSourceCode="@example11HTMLCode" ExampleId="example11">
        <ExamplePreview>
            <div class="custom-wrapper">
                <BitTextField Placeholder="Enter a text..." Label="Custom LabelStyle" LabelStyle="color:green" />
                <BitTextField Placeholder="Enter a text..." Label="Custom LabelClass" LabelClass="custom-label" />
            </div>
            <div class="custom-wrapper">
                <BitTextField Placeholder="Enter a text..." Label="Custom InputStyle" InputStyle="color:red" />
                <BitTextField Placeholder="Enter a text..." Label="Custom InputClass" InputClass="custom-input" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="TextField validation" HTMLSourceCode="@example12HTMLCode" CSharpSourceCode="@example12CSharpCode" ExampleId="example12">
        <ExamplePreview>
            <div class="example-box">
                @if (formIsValidSubmit is false)
                {
                    <EditForm Model="validationTextFieldModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                        <DataAnnotationsValidator />
                        <div class="validation-summary">
                            <ValidationSummary />
                        </div>
                        <div class="form-item">
                            <BitTextField Label="Required" IsRequired="true" @bind-Value="validationTextFieldModel.Text" />
                            <ValidationMessage For="() => validationTextFieldModel.Text" />
                        </div>
                        <div class="form-item">
                            <BitTextField Label="Numeric validation" @bind-Value="validationTextFieldModel.NumericText" />
                            <ValidationMessage For="() => validationTextFieldModel.NumericText" />
                        </div>
                        <div class="form-item">
                            <BitTextField Label="Character validation" @bind-Value="validationTextFieldModel.CharacterText" />
                            <ValidationMessage For="() => validationTextFieldModel.CharacterText" />
                        </div>
                        <div class="form-item">
                            <BitTextField Label="Email format validation" @bind-Value="validationTextFieldModel.EmailText" />
                            <ValidationMessage For="() => validationTextFieldModel.EmailText" />
                        </div>
                        <div class="form-item">
                            <BitTextField Label="Length character validation (Min: 3, Max: 5)" MaxLength="5" @bind-Value="validationTextFieldModel.RangeText" />
                            <ValidationMessage For="() => validationTextFieldModel.RangeText" />
                        </div>
                        <BitButton ButtonType="BitButtonType.Submit">
                            Submit
                        </BitButton>
                    </EditForm>
                }
                else
                {
                    <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                        The form is valid to submit successfully.
                    </BitMessageBar>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>