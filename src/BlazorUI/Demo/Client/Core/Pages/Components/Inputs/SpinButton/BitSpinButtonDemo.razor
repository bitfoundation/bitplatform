@page "/components/spinbutton"
@page "/components/spin-button"

<PageOutlet Url="components/spinbutton"
            Title="SpinButton"
            Description="spinbutton component of the bit BlazorUI components" />

<ComponentDemo ComponentName="SpinButton"
               ComponentDescription="A spin button (SpinButton) allows someone to incrementally adjust a value in small steps. It’s mainly used for numeric values, but other values are supported too."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Basic"
                               IncrementTitle="Increment"
                               DecrementTitle="Decrement" />
                <BitSpinButton Label="Disabled" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Mode" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Compact" Mode="BitSpinButtonMode.Compact" />
                <BitSpinButton Label="Inline" Mode="BitSpinButtonMode.Inline" />
                <BitSpinButton Label="Spread" Mode="BitSpinButtonMode.Spread" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div>Component's Style & Class:</div>
            <br />
            <div class="example-box">
                <BitSpinButton Label="Styled" Style="background:darkred;padding:1rem" />

                <BitSpinButton Label="Classed" Class="custom-class" />
            </div>
            <br /><br /><br /><br />
            <div>Styles & Classes:</div>
            <br />
            <div class="example-box">
                <BitSpinButton Label="Styles" Styles="@(new() { LabelContainer = "background:darkred;padding:1.5rem",
                                                                Label = "font-size:22px;color:chartreuse",
                                                                DecrementButton = "background:blue",
                                                                IncrementButton = "background:green",})" />

                <BitSpinButton Label="Classes" Classes="@(new() { Input = "custom-input",
                                                                  CompactButtonsWrapper = "custom-wrapper" })" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="LabelPosition" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Top Label & Icon" IconName="@BitIconName.Lightbulb" />
                <BitSpinButton Label="Left Label" LabelPosition="BitSpinButtonLabelPosition.Left" />
                <BitSpinButton Label="Right Label" LabelPosition="BitSpinButtonLabelPosition.Right" />
                <BitSpinButton Label="Bottom Label" LabelPosition="BitSpinButtonLabelPosition.Bottom" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="LabelTemplate" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton>
                    <LabelTemplate>
                        <div style="display:flex; align-items: center; gap: 10px">
                            <BitLabel Style="color: green;">This is custom Label</BitLabel>
                            <BitIcon IconName="@BitIconName.Filter" />
                        </div>
                    </LabelTemplate>
                </BitSpinButton>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Icons" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Like and Dislike"
                               IncrementIconName="@BitIconName.LikeSolid"
                               DecrementIconName="@BitIconName.DislikeSolid" />

                <BitSpinButton Label="Back & Forward"
                               Mode="BitSpinButtonMode.Inline"
                               DecrementIconName="@BitIconName.Back"
                               IncrementIconName="@BitIconName.Forward" />

                <BitSpinButton Label="Plus and Minus"
                               Mode="BitSpinButtonMode.Spread"
                               DecrementIconName="@BitIconName.CalculatorSubtract"
                               IncrementIconName="@BitIconName.CalculatorAddition" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Min, Max, Step" RazorCode="@example7RazorCode" Id="example7">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Min: -10, Max: 10" Min="-10" Max="10" />
                <BitSpinButton Label="Min: -20, Max: 20, Step: 2" Min="-20" Max="20" Step="2" />
                <BitSpinButton Label="Min: -1, Max: 1, Step: 0.1" Min="-1" Max="1" Step="0.1" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Suffix" RazorCode="@example8RazorCode" Id="example8">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton Label="Height"
                               Suffix=" cm"
                               DefaultValue="150"
                               IconName="@BitIconName.AutoHeight" />

                <BitSpinButton Label="Weight"
                               Step="0.5"
                               Suffix=" kg"
                               DefaultValue="50"
                               IconName="@BitIconName.Weights" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Binding" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <div class="example-box">
                <div>
                    <BitSpinButton Label="One-way" Value="OneWayValue" />
                    <BitRating @bind-Value="OneWayValue" />
                </div>
                <div>
                    <BitSpinButton Label="Two-way" Step="0.5" @bind-Value="TwoWayValue" />
                    <BitRating @bind-Value="TwoWayValue" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Events" RazorCode="@example10RazorCode" CsharpCode="@example10CsharpCode" Id="example10">
        <ExamplePreview>
            <div class="example-box">
                <div class="column">
                    <BitSpinButton @bind-Value="IncrementEventValue"
                                   Label="OnIncrement / OnDecrement"
                                   Step="0.1"
                                   OnIncrement="() => OnIncrementCounter++"
                                   OnDecrement="() => OnDecrementCounter++" />
                    <BitLabel>OnIncrement Counter: @OnIncrementCounter</BitLabel>
                    <BitLabel>OnDecrement Counter: @OnDecrementCounter</BitLabel>
                </div>
                <br />
                <div class="column">
                    <BitSpinButton @bind-Value="OnChangeEventBindedValue"
                                   Label="OnChange"
                                   Step="0.1"
                                   OnChange="HandleOnChangeEvent" />
                    <BitLabel>OnChange Clicked Counter: @OnChangeClickedCounter</BitLabel>
                    <BitLabel>OnChange Returned Value: @OnChangeEventReturnedValue</BitLabel>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ShowInput" RazorCode="@example11RazorCode" CsharpCode="@example11CsharpCode" Id="example11">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton ShowInput="false"
                               @bind-Value="showInputValue"
                               Mode="BitSpinButtonMode.Inline"
                               Label="@showInputValue.ToString()" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Readonly" RazorCode="@example12RazorCode" Id="example12">
        <ExamplePreview>
            <div class="example-box">
                <BitSpinButton IsInputReadOnly="true" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Validation" RazorCode="@example13RazorCode" CsharpCode="@example13CsharpCode" Id="example13">
        <ExamplePreview>
            <div class="example-box">
                @if (string.IsNullOrEmpty(SuccessMessage))
                {
                    <EditForm Model="@ValidationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">

                        <DataAnnotationsValidator />

                        <BitSpinButton Label="Age" @bind-Value="@ValidationModel.AgeInYears"></BitSpinButton>
                        <ValidationMessage For="@(() => ValidationModel.AgeInYears)" />
                        <br />
                        <BitButton ButtonType="BitButtonType.Submit">
                            Submit
                        </BitButton>
                    </EditForm>
                }
                else
                {
                    <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                        @SuccessMessage
                    </BitMessageBar>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>
