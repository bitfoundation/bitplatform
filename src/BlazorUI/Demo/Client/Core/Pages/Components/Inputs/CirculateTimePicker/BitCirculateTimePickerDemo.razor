@page "/components/circulatetimepicker"
@page "/components/circulate-time-picker"

<PageOutlet Url="components/circulatetimepicker"
            Title="CirculateTimePicker"
            Description="circulatetimepicker component of the bit BlazorUI components" />

<ComponentDemo ComponentName="CirculateTimePicker"
               ComponentDescription="Picking a time can be tough without context. A BitCirculateTimePicker offers a drop-down control that’s optimized for picking a single time from a clock view where contextual information like the day of the week or fullness of the calendar is important. You can modify the calendar to provide additional context or to limit available times."
               ComponentParameters="componentParameters"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Default BitCirculateTimePicker" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with 12 hours (AM/PM)" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..."
                           AmPm="true" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled BitCirculateTimePicker" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <BitCirculateTimePicker IsEnabled=false
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled BitCirculateTimePicker with label" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <BitCirculateTimePicker IsEnabled=false
                           Style="max-width: 300px"
                           Label="Start time"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Required BitCirculateTimePicker" RazorCode="@example5RazorCode" CsharpCode="@example5CsharpCode" Id="example5">
        <ExamplePreview>
            <div class="example-desc">Validation will happen when the <code>Submit</code> button is clicked.</div>

            <EditForm Model="formValidationCirculateTimePickerModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                <DataAnnotationsValidator />

                <div class="validation-summary">
                    <ValidationSummary />
                </div>
                <div>
                    <BitCirculateTimePicker @bind-Value="formValidationCirculateTimePickerModel.Time"
                                   AllowTextInput="true"
                                   Style="max-width: 300px"
                                   AriaLabel="Select a time"
                                   Placeholder="Select a time..."
                                   Label="Time required" />
                    <ValidationMessage For="@(() => formValidationCirculateTimePickerModel.Time)" />
                </div>
                <br />
                <BitButton ButtonType="BitButtonType.Submit">
                    Submit
                </BitButton>
            </EditForm>

            @if (string.IsNullOrEmpty(successMessage) is false)
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @successMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker allowing text input" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div class="example-desc">
                The input field will open the BitCirculateTimePicker, and clicking the field again will dismiss the BitCirculateTimePicker and
                allow text input. Please note to use this feature, you must enter the time in the exact <code>TimeFormat</code> provided for the BitCirculateTimePicker.
            </div>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AllowTextInput=true
                           Label="Start time"
                           AriaLabel="Select a time" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with custom time formatting" RazorCode="@example7RazorCode" Id="example7">
        <ExamplePreview>
            <div class="example-desc">
                Applications can customize how times are formatted and parsed. Formatted times can be ambiguous, so the control will avoid parsing the formatted strings of times selected using the UI when text input is allowed.
                In this example, we are formatting and parsing times as hh:MM:ss.
            </div>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time."
                           Placeholder="Select a time..."
                           TimeFormat="hh:MM:ss" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with a custom label" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div class="example-desc">
                In this example, the callout of the BitCirculateTimePicker would be opened and closed using an icon button which is customely located in the label.
                This functionality has been implemented using a public API provided in the BitCirculateTimePicker.
            </div>
            <BitCirculateTimePicker @ref="circulateTimePicker"
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time...">
                <LabelTemplate>
                    Custom label <BitIconButton IconName="@BitIconName.AlarmClock" OnClick="OpenCallout"></BitIconButton>
                </LabelTemplate>
            </BitCirculateTimePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with value two-way binding" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <BitCirculateTimePicker @bind-Value="@selectedTime"
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
            <BitLabel>Selected time: @selectedTime.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with custom left-handed icon" RazorCode="@example10RazorCode" Id="example10">
        <ExamplePreview>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           IconLocation="BitIconLocation.Left"
                           Placeholder="Select a time...">
                <IconTemplate>
                    <img src="https://img.icons8.com/fluency/2x/clock.png" width="24" height="24" />
                </IconTemplate>
            </BitCirculateTimePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitCirculateTimePicker with custom icon name" RazorCode="@example11RazorCode" Id="example11">
        <ExamplePreview>
            <BitCirculateTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           IconName="@BitIconName.Airplane"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom Invalid Error Message" RazorCode="@example12RazorCode" CsharpCode="@example12CsharpCode" Id="example12">
        <ExamplePreview>
            <div class="example-desc">The custom invalid error message will show when an invalid time is entered.</div>

            <EditForm Model="formValidationCirculateTimePickerModel">
                <DataAnnotationsValidator />
                <div>
                    <BitCirculateTimePicker @bind-Value="formValidationCirculateTimePickerModel.Time"
                                   Style="max-width: 350px"
                                   AllowTextInput="true"
                                   Label="BitCirculateTimePicker with Custom Invalid Error Message"
                                   InvalidErrorMessage="Invalid Time!!!" />
                    <ValidationMessage For="@(() => formValidationCirculateTimePickerModel.Time)" />
                </div>
                <br />
                <div class="validation-summary">
                    <ValidationSummary />
                </div>
            </EditForm>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Responsive BitCirculateTimePicker" RazorCode="@example13RazorCode" Id="example13">
        <ExamplePreview>
            <BitCirculateTimePicker Style="max-width: 300px"
                           IsResponsive="true"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>