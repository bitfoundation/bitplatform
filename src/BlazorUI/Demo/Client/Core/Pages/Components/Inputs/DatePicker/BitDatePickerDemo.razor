@page "/components/datepicker"
@page "/components/date-picker"

<PageOutlet Url="components/datepicker"
            Title="DatePicker"
            Description="datepicker component of the bit BlazorUI components" />

<ComponentDemo ComponentName="DatePicker"
               ComponentDescription="Picking a date can be tough without context. A BitDatePicker offers a drop-down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important. You can modify the calendar to provide additional context or to limit available dates."
               ComponentParameters="componentParameters"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <BitDatePicker IsEnabled=false
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
            <br />
            <BitDatePicker IsEnabled=false
                           Style="max-width: 350px"
                           Label="Start date"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Week numbers" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <BitDatePicker Style="max-width: 350px"
                           ShowWeekNumbers=true
                           ShowMonthPickerAsOverlay=true
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Required" RazorCode="@example4RazorCode" CsharpCode="@example4CsharpCode" Id="example4">
        <ExamplePreview>
            <div class="example-desc">Validation will happen when the <code>Submit</code> button is clicked.</div>

            <EditForm Model="formValidationDatePickerModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                <DataAnnotationsValidator />

                <div class="validation-summary">
                    <ValidationSummary />
                </div>
                <div>
                    <BitDatePicker @bind-Value="formValidationDatePickerModel.Date"
                                   AllowTextInput="true"
                                   Style="max-width: 350px"
                                   AriaLabel="Select a date"
                                   Placeholder="Select a date..."
                                   Label="Date required (with label)" />
                    <ValidationMessage For="@(() => formValidationDatePickerModel.Date)" />
                </div>
                <br />
                <BitButton ButtonType="BitButtonType.Submit">
                    Submit
                </BitButton>
            </EditForm>

            @if (string.IsNullOrEmpty(SuccessMessage) is false)
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @SuccessMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Text input" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div class="example-desc">
                The input field will open the BitDatePicker, and clicking the field again will dismiss the BitDatePicker and
                allow text input. Please note to use this feature, you must enter the date in the exact <code>DateFormat</code> provided for the BitDatePicker.
            </div>
            <BitDatePicker Style="max-width: 350px"
                           AllowTextInput=true
                           HighlightSelectedMonth=true
                           Label="Start date"
                           DateFormat="dd/MM/yyyy"
                           AriaLabel="Select a date"
                           Placeholder="Enter a date (DD/MM/YYYY)" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Date format" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div class="example-desc">
                Applications can customize how dates are formatted and parsed. Formatted dates can be ambiguous, so the control will avoid parsing the formatted strings of dates selected using the UI when text input is allowed.
                In this example, we are formatting and parsing dates as dd=MM(yy).
            </div>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date."
                           Placeholder="Select a date..."
                           DateFormat="dd=MM(yy)" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Min & Max" RazorCode="@example7RazorCode" Id="example7">
        <ExamplePreview>
            <div class="example-desc">
                When date boundaries are set (via MinDate and MaxDate params) the BitDatePicker will not allow out-of-bounds dates to be picked or entered.
                <br />
                In the first example, the allowed dates are between 5 days after now and 5 days before now.
            </div>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..."
                           MaxDate="DateTimeOffset.Now.AddDays(5)"
                           MinDate="DateTimeOffset.Now.AddDays(-5)" />
            <br />
            <div class="example-desc">
                In the second example, the allowed dates are between 1 month after now and 2 months before now.
            </div>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..."
                           MaxDate="DateTimeOffset.Now.AddMonths(1)"
                           MinDate="DateTimeOffset.Now.AddMonths(-2)" />
            <br />
            <div class="example-desc">
                In the third example, the allowed dates are between 1 year after now and 5 years before now.
            </div>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..."
                           MaxDate="DateTimeOffset.Now.AddYears(1)"
                           MinDate="DateTimeOffset.Now.AddYears(-5)" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom label" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div class="example-desc">
                In this example, the callout of the BitDatePicker would be opened and closed using an icon button which is customely located in the label.
                This functionality has been implemented using a public API provided in the BitDatePicker.
            </div>
            <BitDatePicker @ref="datePicker"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date...">
                <LabelTemplate>
                    Custom label <BitIconButton IconName="@BitIconName.Calendar" OnClick="OpenCallout"></BitIconButton>
                </LabelTemplate>
            </BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Two-way binding" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <BitDatePicker @bind-Value="@selectedDate"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
            <BitLabel>Selected date: @selectedDate.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Jalali calendar" RazorCode="@example10RazorCode" Id="example10">
        <ExamplePreview>
            <div class="example-desc">In this sample, you can see the usage of CultureInfoHelper class to specify a particular format for the BitDatePicker. You can also provide your own class for any custom culture of your interest. For more information, you can visit <BitLink Href="https://github.com/bitfoundation/bitplatform/blob/develop/src/BlazorUI/Bit.BlazorUI/Utils/CultureInfoHelper.cs">here</BitLink>.</div>
            <div class="example-desc">Please note to reduce the download size of this page, the sample is not implemented here. In order to use this example, it's required to set <b>InvariantGlobalization</b> to <b>false</b> in the project setting, which causes an extra download size for the website.</div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Templates" RazorCode="@example11RazorCode" CsharpCode="@example11CsharpCode" Id="example11">
        <ExamplePreview>
            <div class="example-desc">
                In this sample, you can see how to implement a custom template for different parts of BitDatePicker.
            </div>
            <BitDatePicker Label="Custom weekend cells"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date...">
                <DayCellTemplate>
                    <span class="@(context.DayOfWeek == DayOfWeek.Sunday ? "weekend-cell" : null)">
                        @context.Day
                    </span>
                </DayCellTemplate>
            </BitDatePicker>
            <br />
            <BitDatePicker Label="Custom year, month, and day cells"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date...">
                <DayCellTemplate>
                    <span class="custom-day-cell">
                        @context.Day

                        @if (context.Day % 5 is 0)
                        {
                            <span class="discount-badge">off</span>
                        }
                    </span>
                </DayCellTemplate>
                <MonthCellTemplate>
                    <span>
                        @this.Culture.DateTimeFormat.GetAbbreviatedMonthName(context.Month)

                        @if (context.Month == 1)
                        {
                            <span class="discount-badge">Xmas</span>
                        }
                    </span>
                </MonthCellTemplate>
                <YearCellTemplate>
                    <span style="position: relative">
                        @context
                        <span class="year-suffix">AC</span>
                    </span>
                </YearCellTemplate>
            </BitDatePicker>
            <br />
            <BitDatePicker Label="Icon template"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           IconLocation="BitIconLocation.Left"
                           Placeholder="Select a date...">
                <IconTemplate>
                    <img src="https://img.icons8.com/fluency/2x/calendar-13.png" width="24" height="24" />
                </IconTemplate>
            </BitDatePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom icon" RazorCode="@example12RazorCode" Id="example12">
        <ExamplePreview>
            <BitDatePicker Style="max-width: 350px"
                           AriaLabel="Select a date"
                           IconName="@BitIconName.Airplane"
                           Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Error message" RazorCode="@example13RazorCode" CsharpCode="@example13CsharpCode" Id="example13">
        <ExamplePreview>
            <div class="example-desc">The custom invalid error message will show when an invalid date is entered.</div>

            <EditForm Model="formValidationDatePickerModel">
                <DataAnnotationsValidator />
                <div>
                    <BitDatePicker @bind-Value="formValidationDatePickerModel.Date"
                                   Style="max-width: 350px"
                                   AllowTextInput="true"
                                   Label="BitDatePicker with Custom Invalid Error Message"
                                   InvalidErrorMessage="Invalid Date!!!" />
                    <ValidationMessage For="@(() => formValidationDatePickerModel.Date)" />
                </div>
                <br />
                <div class="validation-summary">
                    <ValidationSummary />
                </div>
            </EditForm>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Responsive" RazorCode="@example14RazorCode" Id="example14">
        <ExamplePreview>
            <BitDatePicker IsResponsive="true"
                           Style="max-width: 350px"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="With time" RazorCode="@example15RazorCode" CsharpCode="@example15CsharpCode" Id="example15">
        <ExamplePreview>
            <BitDatePicker @bind-Value="@selectedDateTime"
                           Label="Time format 24 hours"
                           Style="max-width: 350px"
                           ShowTimePicker="true"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />

            <BitDatePicker @bind-Value="@selectedDateTime"
                           Label="Time format 12 hours"
                           Style="max-width: 350px"
                           ShowTimePicker="true"
                           TimeFormat="BitTimeFormat.TwelveHours"
                           AriaLabel="Select a date"
                           Placeholder="Select a date..." />
            <BitLabel>Selected DateTime: @selectedDateTime.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>

@code {
    private DateTimeOffset? selectedDate = new DateTimeOffset(new DateTime(2020, 1, 17), DateTimeOffset.Now.Offset);
    private DateTimeOffset? selectedDateTime = DateTimeOffset.Now;
    private FormValidationDatePickerModel formValidationDatePickerModel = new();
    private string SuccessMessage = string.Empty;
    private CultureInfo Culture = CultureInfo.CurrentUICulture;
    private BitDatePicker datePicker;

    private async Task OpenCallout()
    {
        await datePicker.OpenCallout();
    }

    private async Task HandleValidSubmit()
    {
        SuccessMessage = "Form Submitted Successfully!";
        await Task.Delay(3000);
        SuccessMessage = string.Empty;
        StateHasChanged();
    }

    private void HandleInvalidSubmit()
    {
        SuccessMessage = string.Empty;
    }
}