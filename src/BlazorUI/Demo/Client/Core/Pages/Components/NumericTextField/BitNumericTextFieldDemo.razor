@page "/components/numerictextfield"
@page "/components/numeric-text-field"

<PageOutlet Url="components/numerictextfield"
            Title="NumericTextField"
            Description="numerictextfield component of the bit BlazorUI components" />

<ComponentDemo ComponentName="NumericTextField"
               ComponentDescription="A NumericTextField allows you to enter any number type and format you want. It could be a decimal number or integer number with a suffix and so on. Also, give you the capability to show or hide increment and decrement keys."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic BitNumericTextField" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitNumericTextField @bind-Value="BasicValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Basic" />
                <br />
                <BitNumericTextField @bind-Value="DisabledValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Disabled"
                                     IsEnabled="false" />
                <br />
                <BitNumericTextField @bind-Value="LabelAndIconValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Label & Icon"
                                     IconName="@BitIconName.Lightbulb" />
                <br />
                <BitNumericTextField @bind-Value="LabelLeftValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Label Left"
                                     LabelPosition="BitNumericTextFieldLabelPosition.Left" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitNumericTextField with LabelTemplate" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-box">
                <BitNumericTextField @bind-Value="LabelTemplateValue" Placeholder="Enter a number..." Step="@(1)">
                    <LabelTemplate>
                        <label style="color: green;">This is custom Label</label>
                        <BitIcon IconName="@BitIconName.Filter" />
                    </LabelTemplate>
                </BitNumericTextField>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitNumericTextField with Increment and Decrement Arrows" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-box">
                <BitNumericTextField @bind-Value="SpinArrowValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Increment & Decrement"
                                     ShowArrows="true" />
                <br />
                <BitNumericTextField @bind-Value="SpinArrowWithIconValue"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Increment & Decrement Icon"
                                     ShowArrows="true"
                                     IncrementIconName="@BitIconName.LikeSolid"
                                     DecrementIconName="@BitIconName.DislikeSolid" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Min & Max" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-box">
                <BitNumericTextField @bind-Value="MinMaxValue1"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Min: -10, Max: 10, Step: 1"
                                     Min="-10"
                                     Max="10" />
                <br />
                <BitNumericTextField @bind-Value="MinMaxValue2"
                                     Placeholder="Enter a number..."
                                     Step="@(2)"
                                     Label="Min: -20, Max: 20, Step: 2"
                                     Min="-20"
                                     Max="20" />
                <br />
                <BitNumericTextField @bind-Value="MinMaxValue3"
                                     Placeholder="Enter a number..."
                                     Step="@(0.1M)"
                                     Label="Min: -1, Max: 1, Step: 0.1"
                                     Min="-1"
                                     Max="1" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitNumericTextField with Suffix" HTMLSourceCode="@example5HTMLCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-box">
                <BitNumericTextField @bind-Value="SuffixValue1"
                                     Placeholder="Enter a number..."
                                     Step="@(1)"
                                     Label="Height"
                                     IconName="@BitIconName.AutoHeight"
                                     DefaultValue="150"
                                     Suffix=" cm" />
                <br />
                <BitNumericTextField @bind-Value="SuffixValue2"
                                     Placeholder="Enter a number..."
                                     Step="@(0.5M)"
                                     Label="Weight"
                                     IconName="@BitIconName.Weights"
                                     DefaultValue="50"
                                     Suffix=" kg" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitNumericTextField Binding" HTMLSourceCode="@example6HTMLCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-box">
                <div>
                    <BitNumericTextField Value="OneWayValue"
                                         Placeholder="Enter a number..."
                                         Step="@(1)"
                                         Label="One-way" />
                    <BitRating @bind-Value="OneWayValue" />
                </div>
                <br />
                <div>
                    <BitNumericTextField @bind-Value="TwoWayValue"
                                         Placeholder="Enter a number..."
                                         Step="@(0.5)"
                                         Label="Two-way" />
                    <BitRating @bind-Value="TwoWayValue" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitNumericTextField Events" HTMLSourceCode="@example7HTMLCode" CSharpSourceCode="@example7CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <div class="example-box">
                <div class="column">
                    <BitNumericTextField @bind-Value="ArrowsEventBindedValue"
                                         Placeholder="Enter a number..."
                                         Step="@(0.1)"
                                         Label="OnIncrement / OnDecrement"
                                         ShowArrows="true"
                                         OnIncrement="(BitNumericTextFieldChangeValue<double> v) => HandleOnIncrementEvent(v)"
                                         OnDecrement="(BitNumericTextFieldChangeValue<double> v) => HandleOnDecrementEvent(v)" />
                    <span>OnIncrement Counter: @OnIncrementCounter</span>
                    <span>OnDecrement Counter: @OnDecrementCounter</span>
                    <span>Returned Value: @ArrowsEventReturnedValue</span>
                </div>
                <br />
                <div class="column">
                    <BitNumericTextField @bind-Value="OnChangeEventBindedValue"
                                         Placeholder="Enter a number..."
                                         Step="@(0.1)"
                                         Label="OnChange"
                                         OnChange="(double v) => HandleOnChangeEvent(v)" />
                    <span>OnChange Counter: @OnChangeCounter</span>
                    <span>Returned Value: @OnChangeEventReturnedValue</span>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="NumericTextField validation" HTMLSourceCode="@example8HTMLCode" CSharpSourceCode="@example8CSharpCode" ExampleId="example8">
        <ExamplePreview>
            <div class="example-box">
                @if (string.IsNullOrEmpty(SuccessMessage))
                {
                    <EditForm Model="@ValidationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                        <DataAnnotationsValidator />

                        <div class="validation-summary">
                            <ValidationSummary />
                        </div>

                        <BitNumericTextField @bind-Value="@ValidationModel.AgeInYears"
                                             Placeholder="Enter a number..."
                                             Step="@(1)"
                                             Label="Age" />
                        <ValidationMessage For="@(() => ValidationModel.AgeInYears)" />

                        <BitButton Style="margin-top: 10px;" ButtonType="BitButtonType.Submit">
                            Submit
                        </BitButton>
                    </EditForm>
                }
                else
                {
                    <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                        @SuccessMessage
                    </BitMessageBar>
                }
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>