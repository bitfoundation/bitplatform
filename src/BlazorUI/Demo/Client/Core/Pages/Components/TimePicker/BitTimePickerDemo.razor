@page "/components/timepicker"
@page "/components/time-picker"

<PageOutlet Url="components/timepicker"
            Title="TimePicker"
            Description="timepicker component of the bit BlazorUI components" />

<ComponentDemo ComponentName="TimePicker"
               ComponentDescription="Picking a time can be tough without context. A BitTimePicker offers a drop-down control that’s optimized for picking a single time from a clock view where contextual information like the day of the week or fullness of the calendar is important. You can modify the calendar to provide additional context or to limit available times."
               ComponentParameters="componentParameters"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Default BitTimePicker" HtmlCode="@example1HTMLCode" Id="example1">
        <ExamplePreview>
            <BitTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with 12 hours (AM/PM)" HtmlCode="@example2HTMLCode" Id="example2">
        <ExamplePreview>
            <BitTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..."
                           AmPm="true" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled BitTimePicker" HtmlCode="@example3HTMLCode" Id="example3">
        <ExamplePreview>
            <BitTimePicker IsEnabled=false
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled BitTimePicker with label" HtmlCode="@example4HTMLCode" Id="example4">
        <ExamplePreview>
            <BitTimePicker IsEnabled=false
                           Style="max-width: 300px"
                           Label="Start time"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Required BitTimePicker" HtmlCode="@example5HTMLCode" CsharpCode="@example5CSharpCode" Id="example5">
        <ExamplePreview>
            <div class="example-desc">Validation will happen when the <code>Submit</code> button is clicked.</div>

            <EditForm Model="formValidationTimePickerModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                <DataAnnotationsValidator />

                <div class="validation-summary">
                    <ValidationSummary />
                </div>
                <div>
                    <BitTimePicker @bind-Value="formValidationTimePickerModel.Time"
                                   AllowTextInput="true"
                                   Style="max-width: 300px"
                                   AriaLabel="Select a time"
                                   Placeholder="Select a time..."
                                   Label="Time required" />
                    <ValidationMessage For="@(() => formValidationTimePickerModel.Time)" />
                </div>
                <br />
                <BitButton ButtonType="BitButtonType.Submit">
                    Submit
                </BitButton>
            </EditForm>

            @if (string.IsNullOrEmpty(successMessage) is false)
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @successMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker allowing text input" HtmlCode="@example6HTMLCode" Id="example6">
        <ExamplePreview>
            <div class="example-desc">
                The input field will open the BitTimePicker, and clicking the field again will dismiss the BitTimePicker and
                allow text input. Please note to use this feature, you must enter the time in the exact <code>TimeFormat</code> provided for the BitTimePicker.
            </div>
            <BitTimePicker Style="max-width: 300px"
                           AllowTextInput=true
                           Label="Start time"
                           AriaLabel="Select a time" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with custom time formatting" HtmlCode="@example7HTMLCode" Id="example7">
        <ExamplePreview>
            <div class="example-desc">
                Applications can customize how times are formatted and parsed. Formatted times can be ambiguous, so the control will avoid parsing the formatted strings of times selected using the UI when text input is allowed.
                In this example, we are formatting and parsing times as hh:MM:ss.
            </div>
            <BitTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time."
                           Placeholder="Select a time..."
                           TimeFormat="hh:MM:ss" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with a custom label" HtmlCode="@example8HTMLCode" CsharpCode="@example8CSharpCode" Id="example8">
        <ExamplePreview>
            <div class="example-desc">
                In this example, the callout of the BitTimePicker would be opened and closed using an icon button which is customely located in the label.
                This functionality has been implemented using a public API provided in the BitTimePicker.
            </div>
            <BitTimePicker @ref="timePicker"
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time...">
                <LabelTemplate>
                    Custom label <BitIconButton IconName="@BitIconName.AlarmClock" OnClick="OpenCallout"></BitIconButton>
                </LabelTemplate>
            </BitTimePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with value two-way binding" HtmlCode="@example9HTMLCode" CsharpCode="@example9CSharpCode" Id="example9">
        <ExamplePreview>
            <BitTimePicker @bind-Value="@selectedTime"
                           Style="max-width: 300px"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
            <BitLabel>Selected time: @selectedTime.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with custom left-handed icon" HtmlCode="@example10HTMLCode" Id="example10">
        <ExamplePreview>
            <BitTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           IconLocation="BitIconLocation.Left"
                           Placeholder="Select a time...">
                <IconTemplate>
                    <img src="https://img.icons8.com/fluency/2x/clock.png" width="24" height="24" />
                </IconTemplate>
            </BitTimePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="BitTimePicker with custom icon name" HtmlCode="@example11HTMLCode" Id="example11">
        <ExamplePreview>
            <BitTimePicker Style="max-width: 300px"
                           AriaLabel="Select a time"
                           IconName="@BitIconName.Airplane"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom Invalid Error Message" HtmlCode="@example12HTMLCode" CsharpCode="@example12CSharpCode" Id="example12">
        <ExamplePreview>
            <div class="example-desc">The custom invalid error message will show when an invalid time is entered.</div>

            <EditForm Model="formValidationTimePickerModel">
                <DataAnnotationsValidator />
                <div>
                    <BitTimePicker @bind-Value="formValidationTimePickerModel.Time"
                                   Style="max-width: 350px"
                                   AllowTextInput="true"
                                   Label="BitTimePicker with Custom Invalid Error Message"
                                   InvalidErrorMessage="Invalid Time!!!" />
                    <ValidationMessage For="@(() => formValidationTimePickerModel.Time)" />
                </div>
                <br />
                <div class="validation-summary">
                    <ValidationSummary />
                </div>
            </EditForm>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Responsive BitTimePicker" HtmlCode="@example13HTMLCode" Id="example13">
        <ExamplePreview>
            <BitTimePicker Style="max-width: 300px"
                           IsResponsive="true"
                           AriaLabel="Select a time"
                           Placeholder="Select a time..." />
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>