<ComponentExampleBox Title="Basic" HtmlCode="@example1HtmlCode" CsharpCode="@example1CsharpCode" Id="example1">
    <ExamplePreview>
        <BitChoiceGroup Label="Basic Customs"
                        Items="basicCustoms"
                        DefaultValue="@("A")"
                        NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Disabled" HtmlCode="@example2HtmlCode" CsharpCode="@example2CsharpCode" Id="example2">
    <ExamplePreview>
        <div class="chg-box">
            <BitChoiceGroup Label="Disabled ChoiceGroup"
                            IsEnabled="false"
                            Items="basicCustoms"
                            DefaultValue="@("A")"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />

            <BitChoiceGroup Label="ChoiceGroup with Disabled Customs"
                            Items="disabledCustoms"
                            DefaultValue="@("A")"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name }, Value = { Selector = i => i.ItemValue } })" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Images and Icons" HtmlCode="@example3HtmlCode" CsharpCode="@example3CsharpCode" Id="example3">
    <ExamplePreview>
        <div class="chg-box">
            <BitChoiceGroup Label="Image Customs"
                            DefaultValue="@("Bar")"
                            Items="imageCustoms"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) },
                                                     Value = { Name = nameof(ChoiceModel.ItemValue) },
                                                     ImageSrc = { Name = nameof(ChoiceModel.ImageAddress) },
                                                     ImageAlt = { Name = nameof(ChoiceModel.ImageDescription) },
                                                     ImageSize = { Name = nameof(ChoiceModel.ImageSize) },
                                                     SelectedImageSrc = { Name = nameof(ChoiceModel.SelectedImageAddress) }})" />

            <BitChoiceGroup Label="Icon Customs"
                            DefaultValue="@("Day")"
                            Items="iconCustoms"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name },
                                                     Value = { Selector = i => i.ItemValue },
                                                     IconName = { Selector = i => i.IconName }})" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="LabelTemplate" HtmlCode="@example4HtmlCode" CsharpCode="@example4CsharpCode" Id="example4">
    <ExamplePreview>
        <BitChoiceGroup Items="basicCustoms"
                        DefaultValue="@("A")"
                        NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })">
            <LabelTemplate>
                <div class="custom-label">
                    Custom label <BitIcon IconName="@BitIconName.Filter" />
                </div>
            </LabelTemplate>
        </BitChoiceGroup>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Item Templates" HtmlCode="@example5HtmlCode" CsharpCode="@example5CsharpCode" Id="example5">
    <ExamplePreview>
        <div class="chg-box">
            <BitChoiceGroup Label="ItemLabelTemplate" @bind-Value="itemLabelTemplateValue"
                            Items="itemTemplateCustoms"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name },
                                                     Value = { Selector = i => i.ItemValue },
                                                     IconName = { Selector = i => i.IconName }})">
                <ItemLabelTemplate Context="custom">
                    <div style="margin-left: 27px;" class="custom-option @(itemLabelTemplateValue == custom.ItemValue ? "selected-option" : string.Empty)">
                        <BitIcon IconName="@custom.IconName" />
                        <span>@custom.Name</span>
                    </div>
                </ItemLabelTemplate>
            </BitChoiceGroup>

            <BitChoiceGroup Label="ItemTemplate" @bind-Value="itemTemplateValue"
                            Items="itemTemplateCustoms"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) },
                                                     Value = { Name = nameof(ChoiceModel.ItemValue) },
                                                     IconName = { Name = nameof(ChoiceModel.IconName) } })">
                <ItemTemplate Context="custom">
                    <div class="custom-option @(itemTemplateValue == custom.ItemValue ? "selected-option" : string.Empty)">
                        <div class="option-pointer"></div>
                        <BitIcon IconName="@custom.IconName" />
                        <span>@custom.Name</span>
                    </div>
                </ItemTemplate>
            </BitChoiceGroup>
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Binding" HtmlCode="@example6HtmlCode" CsharpCode="@example6CsharpCode" Id="example6">
    <ExamplePreview>
        <div class="chg-box">
            <div>
                <BitChoiceGroup Label="One-way" Value="@oneWayValue"
                                Items="basicCustoms"
                                NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />
                <div class="chg-output">
                    <BitTextField @bind-Value="oneWayValue" />
                </div>
            </div>
            <div>
                <BitChoiceGroup Label="Two-way" @bind-Value="twoWayValue"
                                Items="basicCustoms"
                                NameSelectors="@(new() { Text = { Selector = i => i.Name }, Value = { Selector = i => i.ItemValue } })" />
                <div class="chg-output">
                    <BitTextField @bind-Value="twoWayValue" />
                </div>
            </div>
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Horizontal" HtmlCode="@example7HtmlCode" CsharpCode="@example7CsharpCode" Id="example7">
    <ExamplePreview>
        <div class="chg-box column">
            <BitChoiceGroup Label="Basic"
                            DefaultValue="@("A")"
                            Items="basicCustoms"
                            LayoutFlow="BitLayoutFlow.Horizontal"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />

            <BitChoiceGroup Label="Disabled"
                            IsEnabled="false"
                            DefaultValue="@("A")"
                            Items="basicCustoms"
                            LayoutFlow="BitLayoutFlow.Horizontal"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name }, Value = { Selector = i => i.ItemValue } })" />

            <BitChoiceGroup Label="Image"
                            DefaultValue="@("Bar")"
                            Items="imageCustoms"
                            LayoutFlow="BitLayoutFlow.Horizontal"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) },
                                                     Value = { Name = nameof(ChoiceModel.ItemValue) },
                                                     ImageSrc = { Name = nameof(ChoiceModel.ImageAddress) },
                                                     ImageAlt = { Name = nameof(ChoiceModel.ImageDescription) },
                                                     ImageSize = { Name = nameof(ChoiceModel.ImageSize) },
                                                     SelectedImageSrc = { Name = nameof(ChoiceModel.SelectedImageAddress) }})" />

            <BitChoiceGroup Label="Icon"
                            DefaultValue="@("Day")"
                            Items="iconCustoms"
                            LayoutFlow="BitLayoutFlow.Horizontal"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name },
                                                     Value = { Selector = i => i.ItemValue },
                                                     IconName = { Selector = i => i.IconName }})" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="RTL" HtmlCode="@example8HtmlCode" CsharpCode="@example8CsharpCode" Id="example8">
    <ExamplePreview>
        <div class="chg-box column">
            <BitChoiceGroup Label="Basic"
                            IsRtl="true"
                            DefaultValue="@("A")"
                            Items="rtlCustoms"
                            NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />

            <BitChoiceGroup Label="Disabled"
                            IsRtl="true"
                            IsEnabled="false"
                            DefaultValue="@("A")"
                            Items="rtlCustoms"
                            NameSelectors="@(new() { Text = { Selector = i => i.Name }, Value = { Selector = i => i.ItemValue } })" />
        </div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Validation" HtmlCode="@example9HtmlCode" CsharpCode="@example9CsharpCode" Id="example9">
    <ExamplePreview>
        @if (string.IsNullOrEmpty(successMessage))
        {
            <EditForm Model="@validationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                <DataAnnotationsValidator />
                <div class="validation-summary">
                    <ValidationSummary />
                </div>
                <div>
                    <BitChoiceGroup @bind-Value="validationModel.Value"
                                    Items="basicCustoms"
                                    NameSelectors="@(new() { Text = { Name = nameof(ChoiceModel.Name) }, Value = { Name = nameof(ChoiceModel.ItemValue) } })" />
                    <ValidationMessage For="@(() => validationModel.Value)" />
                </div>
                <BitButton Style="margin-top: 10px;" ButtonType="BitButtonType.Submit">Submit</BitButton>
            </EditForm>
        }
        else
        {
            <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">@successMessage</BitMessageBar>
        }
        <br />
        <BitButton ButtonStyle="BitButtonStyle.Standard" OnClick="() => { validationModel = new(); successMessage=string.Empty; }">Reset</BitButton>
    </ExamplePreview>
</ComponentExampleBox>