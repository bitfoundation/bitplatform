@page "/components/badge"

<PageOutlet Url="components/badge"
            Title="Badge"
            Description="Badge component of the bit BlazorUI components" />

<ComponentDemo ComponentName="Badge"
               ComponentDescription="Badge component is a small visual element used to highlight or indicate specific information within a user interface."
               ComponentParameters="componentParameters"
               ComponentSubEnums="componentSubEnums"
               ComponentSubClasses="componentSubClasses">
    <ComponentExampleBox Title="Basic" RazorCode="@example1RazorCode" Id="example1">
        <ExamplePreview>
            <div>
                The badge offers three appearance options: Primary (default), Standard, and Text.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Content="5">Primary</BitBadge>
                <BitBadge Content="15" Appearance="BitAppearance.Standard">Standard</BitBadge>
                <BitBadge Content="25" Appearance="BitAppearance.Text">Text</BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Primary badge" RazorCode="@example2RazorCode" Id="example2">
        <ExamplePreview>
            <div>
                Primary badges are attention-grabbing, featuring a filled appearance. They're designed for essential actions at the core of your application.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Content="35">Default</BitBadge>
                <BitBadge Content="45" IsEnabled="false">Disabled</BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Standard badge" RazorCode="@example3RazorCode" Id="example3">
        <ExamplePreview>
            <div>
                Standard badges offer a moderate level of emphasis, suitable for important actions that aren't central to the application. They serve as a middle ground between Text badges and the more prominent Primary Badges, providing flexibility in emphasis.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Content="55" Appearance="BitAppearance.Standard">Default</BitBadge>
                <BitBadge Content="65" Appearance="BitAppearance.Standard" IsEnabled="false">Disabled</BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Text badge" RazorCode="@example4RazorCode" Id="example4">
        <ExamplePreview>
            <div>
                Text badges are best suited for understated actions, serving as a less prominent choice in various interface elements.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Content="75" Appearance="BitAppearance.Text">Default</BitBadge>
                <BitBadge Content="85" Appearance="BitAppearance.Text" IsEnabled="false">Disabled</BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Max" RazorCode="@example5RazorCode" Id="example5">
        <ExamplePreview>
            <div>
                When content is integer type, you can define a max value to display.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Max="85" Content="95">Max value</BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Customization" RazorCode="@example6RazorCode" Id="example6">
        <ExamplePreview>
            <div>
                Here are some examples of customizing the badge content.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Icon="Clock">
                    Icon
                </BitBadge>

                <BitBadge Content="@("Text")" Appearance="BitAppearance.Standard">
                    <BitIcon IconName="Clock" />
                </BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Events" RazorCode="@example7RazorCode" CsharpCode="@example7CsharpCode" Id="example7">
        <ExamplePreview>
            <div>
                Managing badge click event (OnClick).
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Content="@(badgeClickCounter)" OnClick="() => badgeClickCounter++">
                    Click the badge
                </BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Dot" RazorCode="@example8RazorCode" CsharpCode="@example8CsharpCode" Id="example8">
        <ExamplePreview>
            <div>
                Badge size can be reduced and hide any of its content.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Dot="@isDot" Content="100">
                    <BitToggleButton @bind-IsChecked="@isDot" ButtonStyle="BitButtonStyle.Standard">Toggle Dot</BitToggleButton>
                </BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Hidden" RazorCode="@example9RazorCode" CsharpCode="@example9CsharpCode" Id="example9">
        <ExamplePreview>
            <div>
                You can easiliy control the display of Badges.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Hidden="@isHidden" Content="100">
                    <BitToggleButton @bind-IsChecked="@isHidden" ButtonStyle="BitButtonStyle.Standard">Toggle Hidden</BitToggleButton>
                </BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Position" RazorCode="@example10RazorCode" CsharpCode="@example10CsharpCode" Id="example10">
        <ExamplePreview>
            <div>
                Explore different positions for badges, Customize the badge positions to enhance the user experience.
            </div>
            <br />
            <div class="badges-container">
                <BitBadge Overlap="@isOverlap" Content="100" Position="@badgePostion">
                    <BitToggleButton @bind-IsChecked="@isOverlap" ButtonStyle="BitButtonStyle.Standard">Toggle overlap</BitToggleButton>
                </BitBadge>
                <BitDropdown Items="@badgePositionList"
                             @bind-Value="@badgePostion"
                             Style="width: 10rem;" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Color" RazorCode="@example11RazorCode" Id="example11">
        <ExamplePreview>
            <div>
                Offering a range of specialized color variants, providing visual cues for specific actions or states within your application.
            </div>
            <br />
            <div class="badges-container-grid">
                <BitLabel>Info</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Color="BitBadgeColor.Info" />
                    <BitBadge Content="100" Color="BitBadgeColor.Info" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Color="BitBadgeColor.Info" Appearance="BitAppearance.Text" />
                </div>
                <BitLabel>Success</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Color="BitBadgeColor.Success" />
                    <BitBadge Content="100" Color="BitBadgeColor.Success" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Color="BitBadgeColor.Success" Appearance="BitAppearance.Text" />
                </div>
                <BitLabel>Warning</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Color="BitBadgeColor.Warning" />
                    <BitBadge Content="100" Color="BitBadgeColor.Warning" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Color="BitBadgeColor.Warning" Appearance="BitAppearance.Text" />
                </div>
                <BitLabel>SevereWarning</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Color="BitBadgeColor.SevereWarning" />
                    <BitBadge Content="100" Color="BitBadgeColor.SevereWarning" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Color="BitBadgeColor.SevereWarning" Appearance="BitAppearance.Text" />
                </div>
                <BitLabel>Error</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Color="BitBadgeColor.Error" />
                    <BitBadge Content="100" Color="BitBadgeColor.Error" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Color="BitBadgeColor.Error" Appearance="BitAppearance.Text" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Size" RazorCode="@example12RazorCode" Id="example12">
        <ExamplePreview>
            <div>
                Varying sizes for badges tailored to meet diverse design needs, ensuring flexibility and visual hierarchy within your interface.
            </div>
            <br />
            <div class="badges-container-grid">
                <BitLabel>Primary</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Size="BitBadgeSize.Small" />
                    <BitBadge Content="100" Size="BitBadgeSize.Medium" />
                    <BitBadge Content="100" Size="BitBadgeSize.Large" />
                </div>
                <BitLabel>Standard</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Size="BitBadgeSize.Small" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Size="BitBadgeSize.Medium" Appearance="BitAppearance.Standard" />
                    <BitBadge Content="100" Size="BitBadgeSize.Large" Appearance="BitAppearance.Standard" />
                </div>
                <BitLabel>Text</BitLabel>
                <div class="badges-container">
                    <BitBadge Content="100" Size="BitBadgeSize.Small" Appearance="BitAppearance.Text" />
                    <BitBadge Content="100" Size="BitBadgeSize.Medium" Appearance="BitAppearance.Text" />
                    <BitBadge Content="100" Size="BitBadgeSize.Large" Appearance="BitAppearance.Text" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" RazorCode="@example13RazorCode" Id="example13">
        <ExamplePreview>
            <div>
                Empower customization by overriding default styles and classes, allowing tailored design modifications to suit specific UI requirements.
            </div>
            <br />
            <div>Component's Style & Class:</div>
            <br />
            <div class="badges-container">
                <BitBadge Content="100" Style="color: darkblue; border-color: darkblue;">
                    Styled
                </BitBadge>
                <BitBadge Content="100" Class="custom-class" Appearance="BitAppearance.Standard">
                    <div>Item 1</div>
                    <div>Item 2</div>
                    <div>Item 3</div>
                </BitBadge>
            </div>
            <br /><br /><br />
            <div><b>Styles</b> & <b>Classes</b>:</div>
            <br />
            <div class="badges-container">
                <BitBadge Content="100" Icon="Clock"
                          Styles="@(new() { Root = "color: dodgerblue;",
                                            Badge = "border-radius: unset;",
                                            Icon = "color: tomato;" })">
                    Primary
                </BitBadge>

                <BitBadge Content="100" Icon="Clock"
                          Appearance="BitAppearance.Standard"
                          Classes="@(new() { Root = "custom-root",
                                             BadgeWrapper = "custom-wrapper",
                                             Badge = "custom-badge",
                                             Icon = "custom-icon" })">
                    Standard
                </BitBadge>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

</ComponentDemo>

@code {
    private int badgeClickCounter;

    private bool isDot = true;

    private bool isHidden = true;

    private bool isOverlap = true;
    private BitBadgePosition badgePostion;

    private List<BitDropdownItem<BitBadgePosition>> badgePositionList = Enum.GetValues(typeof(BitBadgePosition))
    .Cast<BitBadgePosition>()
    .Select(enumValue => new BitDropdownItem<BitBadgePosition>
    {
        Value = enumValue,
        Text = enumValue.ToString()
    })
    .ToList();
}