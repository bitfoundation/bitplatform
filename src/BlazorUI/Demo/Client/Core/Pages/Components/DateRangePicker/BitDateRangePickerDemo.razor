@page "/components/daterangepicker"

<PageOutlet Url="components/daterangepicker"
            Title="DateRangePicker"
            Description="daterangepicker component of the bit blazorui components" />

<ComponentDemo ComponentName="DateRangePicker"
               ComponentDescription="Picking a date range can be tough without context. A BitDateRangePicker offers a drop-down control that’s optimized for picking two dates from a calendar view where contextual information like the day of the week or fullness of the calendar is important. You can modify the calendar to provide additional context or to limit available dates."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" HTMLSourceCode="@example1HTMLCode" ExampleId="example1">
        <ExamplePreview>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled" HTMLSourceCode="@example2HTMLCode" ExampleId="example2">
        <ExamplePreview>
            <BitDateRangePicker IsEnabled=false
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..." />
            <br />
            <BitDateRangePicker IsEnabled=false
                                Style="max-width: 300px"
                                Label="Date range"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Week numbers" HTMLSourceCode="@example3HTMLCode" ExampleId="example3">
        <ExamplePreview>
            <BitDateRangePicker Style="max-width: 300px"
                                ShowWeekNumbers=true
                                ShowMonthPickerAsOverlay=true
                                AriaLabel="Select dates"
                                Placeholder="Select dates..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Date format" HTMLSourceCode="@example4HTMLCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">
                Applications can customize how dates are formatted and parsed. Formatted dates can be ambiguous, so the control will avoid parsing the formatted strings of dates selected using the UI when text input is allowed.
                In this example, we are formatting and parsing dates as dd=MM(yy).
            </div>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..."
                                DateFormat="dd=MM(yy)" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Min & Max" HTMLSourceCode="@example5HTMLCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-desc">
                When date boundaries are set (via MinDate and MaxDate params) the BitDateRangePicker will not allow out-of-bounds dates to be picked or entered.
                In the first example, the allowed dates are between 5 days after now and 5 days before now.
            </div>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..."
                                MaxDate="DateTimeOffset.Now.AddDays(5)"
                                MinDate="DateTimeOffset.Now.AddDays(-5)" />
            <br />
            <div class="example-desc">
                In the second example, the allowed dates are between 1 month after now and 2 months before now.
            </div>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..."
                                MaxDate="DateTimeOffset.Now.AddMonths(1)"
                                MinDate="DateTimeOffset.Now.AddMonths(-2)" />
            <br
            <div class="example-desc">
                In the third example, the allowed dates are between 1 year after now and 5 years before now.
            </div>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..."
                                MaxDate="DateTimeOffset.Now.AddYears(1)"
                                MinDate="DateTimeOffset.Now.AddYears(-5)" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom label" HTMLSourceCode="@example6HTMLCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-desc">
                In this example, the callout of the BitDateRangePicker would be opened and closed using an icon button which is customely located in the label.
                This functionality has been implemented using a public API provided in the BitDateRangePicker.
            </div>
            <BitDateRangePicker @ref="dateRangePicker"
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates...">
                <LabelTemplate>
                    Custom label <BitIconButton IconName="BitIconName.Calendar" OnClick="OpenCallout"></BitIconButton>
                </LabelTemplate>
            </BitDateRangePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Two-way binding" HTMLSourceCode="@example7HTMLCode" CSharpSourceCode="@example7CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <BitDateRangePicker @bind-Value="@selectedDateRange"
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates..." />
            <BitLabel>selected date: @selectedDateRange.StartDate.ToString() - @selectedDateRange.EndDate.ToString()</BitLabel>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Jalali calendar" HTMLSourceCode="@example8HTMLCode" ExampleId="example8">
        <ExamplePreview>
            <div class="example-desc">In this sample, you can see the usage of CultureInfoHelper class to specify a particular format for the BitDateRangePicker. You can also provide your own class for any custom culture of your interest. For more information, you can visit <a href="https://github.com/bitfoundation/bitplatform/blob/develop/src/BlazorUI/Bit.BlazorUI/Utils/CultureInfoHelper.cs">here</a>.</div>
            <div class="example-desc">Please note to reduce the download size of this page, the sample is not implemented here. In order to use this example, it's required to set InvariantGlobalization to false in the project setting, which causes an extra download size for the website.</div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Templates" HTMLSourceCode="@example9HTMLCode" CSharpSourceCode="@example9CSharpCode" ExampleId="example9">
        <ExamplePreview>
            <div class="example-desc">
                In this sample, you can see how to implement a custom template for different parts of the BitDateRangePicker.
            </div>
            <BitDateRangePicker Label="Custom weekend cells"
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates...">
                <DayCellTemplate>
                    <span class="@(context.DayOfWeek == DayOfWeek.Sunday ? "weekend-cell" : null)">
                        @context.Day
                    </span>
                </DayCellTemplate>
            </BitDateRangePicker>
            <br />
            <BitDateRangePicker Label="Custom year, month, and day cells"
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                Placeholder="Select dates...">
                <DayCellTemplate>
                    <span class="custom-day-cell">
                        @context.Day

                        @if (context.Day % 5 is 0)
                        {
                            <span class="discount-badge">off</span>
                        }
                    </span>
                </DayCellTemplate>
                <MonthCellTemplate>
                    <span>
                        @Culture.DateTimeFormat.GetAbbreviatedMonthName(context.Month)

                        @if (context.Month == 1)
                        {
                            <span class="discount-badge">Xmas</span>
                        }
                    </span>
                </MonthCellTemplate>
                <YearCellTemplate>
                    <span style="position: relative">
                        @context
                        <span class="year-suffix">AC</span>
                    </span>
                </YearCellTemplate>
            </BitDateRangePicker>
            <br />
            <BitDateRangePicker Label="Icon template"
                                Style="max-width: 300px"
                                AriaLabel="Select dates"
                                IconLocation="BitIconLocation.Left"
                                Placeholder="Select dates...">
                <IconTemplate>
                    <img src="https://img.icons8.com/fluency/2x/calendar-13.png" width="24" height="24" />
                </IconTemplate>
            </BitDateRangePicker>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Value format" HTMLSourceCode="@example10HTMLCode" ExampleId="example10">
        <ExamplePreview>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                ValueFormat="Dep: {0}, Arr: {1}"
                                DateFormat="dd=MM(yy)"
                                Placeholder="Select dates..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Custom icon name" HTMLSourceCode="@example11HTMLCode" ExampleId="example11">
        <ExamplePreview>
            <BitDateRangePicker Style="max-width: 300px"
                                AriaLabel="Select dates"
                                IconName="BitIconName.Airplane"
                                Placeholder="Select dates..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Responsive" HTMLSourceCode="@example12HTMLCode" ExampleId="example12">
        <ExamplePreview>
            <BitDateRangePicker IsResponsive="true"
                                Style="max-width: 300px"
                                AriaLabel="Select a date"
                                Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="AutoClose" HTMLSourceCode="@example13HTMLCode" ExampleId="example13">
        <ExamplePreview>
            <div class="example-desc">
                You can disable the auto-close feature
            </div>
            <BitDateRangePicker Style="max-width: 300px"
                                AutoClose="false"
                                AriaLabel="Select a date"
                                Placeholder="Select a date..." />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="With time" HTMLSourceCode="@example14HTMLCode" CSharpSourceCode="@example14CSharpCode" ExampleId="example14">
        <ExamplePreview>
            <BitDateRangePicker @bind-Value="@selectedDateTimeRange"
                                ShowTimePicker="true"
                                Style="max-width: 300px"
                                AriaLabel="Select a date"
                                Placeholder="Select a date..." />
            <div>Start: @selectedDateTimeRange.StartDate.ToString()</div>
            <div>End: @selectedDateTimeRange.EndDate.ToString()</div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>

@code {
    private BitDateRangePickerValue selectedDateRange = new()
    {
        StartDate = new DateTimeOffset(new DateTime(2020, 1, 17), DateTimeOffset.Now.Offset),
        EndDate = new DateTimeOffset(new DateTime(2020, 1, 25), DateTimeOffset.Now.Offset)
    };

    private BitDateRangePickerValue selectedDateTimeRange = new()
    {
        StartDate = new DateTimeOffset(new DateTime(2020, 1, 17), DateTimeOffset.Now.Offset),
        EndDate = new DateTimeOffset(new DateTime(2020, 1, 25), DateTimeOffset.Now.Offset)
    };

    private CultureInfo Culture = CultureInfo.CurrentUICulture;

    private BitDateRangePicker dateRangePicker;

    private async Task OpenCallout()
    {
        await dateRangePicker.OpenCallout();
    }
}