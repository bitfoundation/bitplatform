@page "/components/togglebutton"
@page "/components/toggle-button"

<PageOutlet Url="components/togglebutton"
            Title="ToggleButton"
            Description="ToggleButton component of the bit BlazorUI components" />

<ComponentDemo ComponentName="ToggleButton"
               ComponentDescription="Buttons give people a way to trigger an action. They’re typically found in forms, dialog panels, and dialogs. Some buttons are specialized for particular tasks, such as navigation, repeated actions, or presenting menus."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums">
    <ComponentExampleBox Title="Basic" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-box">
                <BitToggleButton OffText="Primary Unmute" OnText="Primary Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />

                <BitToggleButton OffText="Standard Unmute" OnText="Standard Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff"
                                 ButtonStyle="BitButtonStyle.Standard" />

                <BitToggleButton IsEnabled="false" Text="Disabled" IconName="@BitIconName.MicOff" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Style & Class" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div>Style & Class:</div>
            <br />
            <div class="example-box">
                <BitToggleButton Style="color:darkblue; font-weight:bold"
                                 OffText="Styled Button : Unmute" OnText="Styled Button : Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />

                <BitToggleButton Class="custom-class"
                                 ButtonStyle="BitButtonStyle.Standard"
                                 OffText="Classed Button : Unmute" OnText="Classed Button : Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />
            </div>
            <br /><br />
            <div>Styles & Classes:</div>
            <br />
            <div class="example-box">
                <BitToggleButton OffText="Styled Button : Unmute" OnText="Styled Button : Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff"
                                 Styles="@(new() { Container="font-size:18px", Icon="color:red", Text="color:blue" })" />

                <BitToggleButton ButtonStyle="BitButtonStyle.Standard"
                                 OffText="Classed Button : Unmute" OnText="Classed Button : Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff"
                                 Classes="@(new() { Container="custom-container", Icon="custom-icon", Text="custom-text" })" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Visibility" HTMLSourceCode="@example3HTMLCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-box column">
                <div>Visible: [ <BitToggleButton Visibility="BitVisibility.Visible">Visible toggle button</BitToggleButton> ]</div>
                <div>Hidden: [ <BitToggleButton Visibility="BitVisibility.Hidden">Hidden toggle button</BitToggleButton> ]</div>
                <div>Collapsed: [ <BitToggleButton Visibility="BitVisibility.Collapsed">Collapsed toggle button</BitToggleButton> ]</div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Controlled" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div>DefaultIsChecked:</div>
            <br />
            <div class="example-box column">
                <BitToggleButton DefaultIsChecked="true"
                                 OffText="Unmute" OnText="Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />
            </div>
            <br /><br /><br />
            <div>Two-way bound:</div>
            <br />
            <div class="example-box column">
                <BitToggleButton @bind-IsChecked="example31Value"
                                 Text="@(example31Value ? "Mute" : "Unmute")"
                                 IconName="@(example31Value ? BitIconName.MicOff : BitIconName.Microphone)" />
                <BitCheckbox Label="Checked Toggle Button" @bind-Value="example31Value" />
            </div>
            <br /><br /><br />
            <div>OnChange:</div>
            <br />
            <div class="example-box column">
                <BitToggleButton OnChange="v => example32Value = v"
                                 OffText="Unmute" OnText="Mute"
                                 OffIconName="@BitIconName.Microphone" OnIconName="@BitIconName.MicOff" />
                <BitLabel>Check status is: @example32Value</BitLabel>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>
