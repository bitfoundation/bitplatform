<ComponentExampleBox Title="Basic" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example11">
    <ExamplePreview>
        <div class="example-content">
            <div>
                <BitLabel>Primary</BitLabel>
                <BitSplitButton Items="basicItems" OnClick="(BitSplitButtonItem item) => example1SelectedItem = item.Text" />
            </div>
            <div>
                <BitLabel>Standard</BitLabel>
                <BitSplitButton Items="basicItems"
                                ButtonStyle="BitButtonStyle.Standard"
                                OnClick="(BitSplitButtonItem item) => example1SelectedItem = item.Text" />
            </div>
            <div>
                <BitLabel>Disabled</BitLabel>
                <BitSplitButton Items="basicItems" IsEnabled="false" />
            </div>
        </div>
        <div class="clicked-item">Clicked item: @example1SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="IsSticky" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example12">
    <ExamplePreview>
        <div class="example-content">
            <div>
                <BitLabel>Primary</BitLabel>
                <BitSplitButton IsSticky="true"
                                Items="isStickyItems"
                                OnClick="(BitSplitButtonItem item) => example2SelectedItem = item.Text" />
            </div>
            <div>
                <BitLabel>Standard</BitLabel>
                <BitSplitButton IsSticky="true"
                                Items="isStickyItems"
                                ButtonStyle="BitButtonStyle.Standard"
                                OnClick="(BitSplitButtonItem item) => example2SelectedItem = item.Text" />
            </div>
        </div>
        <div class="clicked-item">Clicked item: @example2SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Disabled item" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example13">
    <ExamplePreview>
        <div class="example-content">
            <div>
                <BitLabel>Sticky Primary</BitLabel>
                <BitSplitButton IsSticky="true"
                                Items="disabledItems"
                                OnClick="(BitSplitButtonItem item) => example3SelectedItem = item.Text" />
            </div>
            <div>
                <BitLabel>Basic Standard</BitLabel>
                <BitSplitButton Items="disabledItems"
                                ButtonStyle="BitButtonStyle.Standard"
                                OnClick="(BitSplitButtonItem item) => example3SelectedItem = item.Text" />
            </div>
        </div>
        <div class="clicked-item">Clicked item: @example3SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Item OnClick" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example14">
    <ExamplePreview>
        <div class="example-content">
            <div>
                <BitLabel>Primary</BitLabel>
                <BitSplitButton Items="itemsOnClick" />
            </div>
            <div>
                <BitLabel>Standard</BitLabel>
                <BitSplitButton Items="itemsOnClick" ButtonStyle="BitButtonStyle.Standard" IsSticky="true" />
            </div>
        </div>
        <div class="clicked-item">Clicked item: @example4SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="Style & Class" HTMLSourceCode="@example5HTMLCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example15">
    <ExamplePreview>
        <div>Component's Style & Class:</div>
        <br />
        <div class="example-content">
            <BitSplitButton Items="basicItems"
                            Style="width:200px;height:40px;"
                            ChevronDownIcon="@BitIconName.DoubleChevronDown8"
                            OnClick="(BitSplitButtonItem item) => example51SelectedItem = item.Text" />

            <BitSplitButton Items="basicItems"
                            Class="custom-class"
                            ButtonStyle="BitButtonStyle.Standard"
                            OnClick="(BitSplitButtonItem item) => example51SelectedItem = item.Text" />
        </div>
        <div class="clicked-item">Clicked item: @example51SelectedItem</div>
        <br /><br /><br /><br />
        <div>Item's Style & Class:</div>
        <br />
        <div class="example-content">
            <BitSplitButton IsSticky="true"
                            Items="itemStyleClassItems"
                            OnClick="(BitSplitButtonItem item) => example52SelectedItem = item.Text" />
        </div>
        <div class="clicked-item">Clicked Item: @example52SelectedItem</div>
        <br /><br /><br /><br />
        <div>Styles & Classes:</div>
        <br />
        <div class="example-content">
            <BitSplitButton Items="basicItems"
                            OnClick="(BitSplitButtonItem item) => example53SelectedItem = item.Text" 
                            Styles="@(new() { ChevronDownButton="background-color:red", 
                                              ChevronDownIcon="color:darkblue", 
                                              ItemButton="background:darkgoldenrod" })" />

            <BitSplitButton Items="basicItems"
                            ButtonStyle="BitButtonStyle.Standard"
                            OnClick="(BitSplitButtonItem item) => example53SelectedItem = item.Text"
                            Classes="@(new() { ChevronDownButton="custom-chevron",
                                               ItemButton="custom-button" })" />
        </div>
        <div class="clicked-item">Clicked Item: @example53SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

<ComponentExampleBox Title="ItemTemplate" HTMLSourceCode="@example6HTMLCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example16">
    <ExamplePreview>
        <div class="example-content">
            <div>
                <BitLabel>Primary</BitLabel>
                <BitSplitButton IsSticky="true"
                                Items="itemTemplateItems"
                                OnClick="(BitSplitButtonItem item) => example61SelectedItem = item.Text">
                    <ItemTemplate Context="item">
                        <div class="item-template-box">
                            <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "#600000");">
                                @item.Text (@item.Key)
                            </span>
                        </div>
                    </ItemTemplate>
                </BitSplitButton>
            </div>
            <div>
                <BitLabel>Standard</BitLabel>
                <BitSplitButton IsSticky="true"
                                Items="itemTemplateItems"
                                ButtonStyle="BitButtonStyle.Standard"
                                OnClick="(BitSplitButtonItem item) => example61SelectedItem = item.Text">
                    <ItemTemplate Context="item">
                        @if (item.Key == "add-key")
                        {
                            <div class="item-template-box">
                                <BitIcon IconName="@BitIconName.Add" />
                                <span style="color: green;">
                                    @item.Text (@item.Key)
                                </span>
                            </div>
                        }
                        else if (item.Key == "edit-key")
                        {
                            <div class="item-template-box">
                                <BitIcon IconName="@BitIconName.Edit" />
                                <span style="color: yellow;">
                                    @item.Text (@item.Key)
                                </span>
                            </div>
                        }
                        else if (item.Key == "delete-key")
                        {
                            <div class="item-template-box">
                                <BitIcon IconName="@BitIconName.Delete" />
                                <span style="color: red;">
                                    @item.Text (@item.Key)
                                </span>
                            </div>
                        }
                    </ItemTemplate>
                </BitSplitButton>
            </div>
        </div>
        <div class="clicked-item">Clicked item: @example61SelectedItem</div>
        <br /><br /><br /><br />
        <div>Item's Template</div>
        <br />
        <div class="example-content">
            <BitSplitButton IsSticky="true"
                            Items="itemTemplateItems2"
                            OnClick="(BitSplitButtonItem item) => example62SelectedItem = item.Text" />
        </div>
        <div class="clicked-item">Clicked Item: @example62SelectedItem</div>
    </ExamplePreview>
</ComponentExampleBox>

@code {
    private List<BitSplitButtonItem> itemTemplateItems2 = new()
    {
        new()
        {
            Text = "Add",
            Key = "add-key",
            IconName = BitIconName.Add,
            Template = (item => @<div class="item-template-box" style="color:green">@item.Text (@item.Key)</div>)
        },
        new ()
        {
            Text = "Edit",
            Key = "edit-key",
            IconName = BitIconName.Edit,
            Template = (item => @<div class="item-template-box" style="color:yellow">@item.Text (@item.Key)</div>)
        },
        new()
        {
            Text = "Delete",
            Key = "delete-key",
            IconName = BitIconName.Delete,
            Template = (item => @<div class="item-template-box" style="color:red">@item.Text (@item.Key)</div>)
        }
    };
}