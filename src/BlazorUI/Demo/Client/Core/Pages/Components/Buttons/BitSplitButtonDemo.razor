@page "/components/splitbutton"
@page "/components/split-button"

<PageOutlet Url="components/splitbutton"
            Title="SplitButton"
            Description="splitbutton component of the bit blazorui components" />

<ComponentDemo ComponentName="SplitButton"
               ComponentDescription="Buttons give people a way to trigger an action. They’re typically found in forms, dialog panels, and dialogs. Some buttons are specialized for particular tasks, such as navigation, repeated actions, or presenting menus."
               ComponentParameters="componentParameters"
               ComponentSubClasses="componentSubClasses"
               ComponentSubEnums="componentSubEnums"
               Notes="The BitSplitButton is a Multi-API component which can accept the list of Items in 3 different ways: BitSplitButtonItem class, a custom Generic class, and BitSplitButtonOption component.">
    <BitPivot OnItemClick="OnTabClick" ClassStyles="@(new() { Header = new() { Class = "pivot-sticky-header" } })">
        <BitPivotItem HeaderText="Item">
            <ComponentExampleBox Title="Basic SplitButton" HTMLSourceCode="@example1BitSplitButtonItemHTMLCode" CSharpSourceCode="@example1BitSplitButtonItemCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-desc">To create a multi button you can use a BitSplitButton component.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Disabled</BitLabel>
                            <BitSplitButton Items="BasicItems" IsEnabled="false" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @BasicClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with IsSticky" HTMLSourceCode="@example2BitSplitButtonItemHTMLCode" CSharpSourceCode="@example2BitSplitButtonItemCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-desc">You can first select the button item and then click on it to execute its onclick event.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="IsStickyItems"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonItem item) => IsStickyClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="IsStickyItems"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonItem item) => IsStickyClickedItem = item.Text" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @IsStickyClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Disabled" HTMLSourceCode="@example3BitSplitButtonItemHTMLCode" CSharpSourceCode="@example3BitSplitButtonItemCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">You can disable the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Sticky Primary</BitLabel>
                            <BitSplitButton Items="DisabledItems"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonItem item) => DisabledClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Basic Standard</BitLabel>
                            <BitSplitButton Items="DisabledItems"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(BitSplitButtonItem item) => DisabledClickedItem = item.Text" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @DisabledClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Template" HTMLSourceCode="@example4BitSplitButtonItemHTMLCode" CSharpSourceCode="@example4BitSplitButtonItemCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="TemplateItems"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonItem item) => TemplateClickedItem = item.Text">
                                <ItemTemplate Context="item">
                                    <div class="item-template-box">
                                        <span style="color: @(item.Key == "add-key" ? "#71ef71" : item.Key == "edit-key" ? "yellow" : "#600000");">
                                            @item.Text (@item.Key)
                                        </span>
                                    </div>
                                </ItemTemplate>
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="TemplateItems"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonItem item) => TemplateClickedItem = item.Text">
                                <ItemTemplate Context="item">
                                    @if (item.Key == "add-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Add" />&nbsp;
                                            <span style="color: green;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Key == "edit-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Edit" />&nbsp;
                                            <span style="color: yellow;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Key == "delete-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Delete" />&nbsp;
                                            <span style="color: red;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                </ItemTemplate>
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @TemplateClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitSplitButton in different sizes" HTMLSourceCode="@example5BitSplitButtonItemHTMLCode" CSharpSourceCode="@example5BitSplitButtonItemCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            ButtonSize="BitButtonSize.Small"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            ButtonSize="BitButtonSize.Medium"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            ButtonSize="BitButtonSize.Large"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitSplitButton in different sizes" HTMLSourceCode="@example6BitSplitButtonItemHTMLCode" CSharpSourceCode="@example6BitSplitButtonItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            Class="custom-btn-sm"
                                            ButtonSize="BitButtonSize.Small"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            Class="custom-btn-md"
                                            ButtonSize="BitButtonSize.Medium"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton Items="BasicItems"
                                            Class="custom-btn-lg"
                                            ButtonSize="BitButtonSize.Large"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonItem item) => BasicClickedItem = item.Text" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>

        <BitPivotItem HeaderText="Custom">
            <ComponentExampleBox Title="Basic SplitButton" HTMLSourceCode="@example1CustomItemHTMLCode" CSharpSourceCode="@example1CustomItemCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-desc">To create a multi button you can use a BitSplitButton component.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            TextFieldSelector="item => item.Name"
                                            KeyFieldSelector="item => item.Id"
                                            IconNameFieldSelector="item => item.Icon"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Disabled</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            IsEnabled="false" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @BasicClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with IsSticky" HTMLSourceCode="@example2CustomItemHTMLCode" CSharpSourceCode="@example2CustomItemCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-desc">You can first select the button item and then click on it to execute its onclick event.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="IsStickyCustomItems"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(SplitActionItem item) => IsStickyClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="IsStickyCustomItems"
                                            TextFieldSelector="item => item.Name"
                                            KeyFieldSelector="item => item.Id"
                                            IconNameFieldSelector="item => item.Icon"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(SplitActionItem item) => IsStickyClickedItem = item.Name" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @IsStickyClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Disabled" HTMLSourceCode="@example3CustomItemHTMLCode" CSharpSourceCode="@example3CustomItemCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">You can disable the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Sticky Primary</BitLabel>
                            <BitSplitButton Items="DisabledCustomItems"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(SplitActionItem item) => DisabledClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Basic Standard</BitLabel>
                            <BitSplitButton Items="DisabledCustomItems"
                                            TextFieldSelector="item => item.Name"
                                            KeyFieldSelector="item => item.Id"
                                            IconNameFieldSelector="item => item.Icon"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(SplitActionItem item) => DisabledClickedItem = item.Name" />
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @DisabledClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Template" HTMLSourceCode="@example4CustomItemHTMLCode" CSharpSourceCode="@example4CustomItemCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton Items="TemplateCustomItems"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(SplitActionItem item) => TemplateClickedItem = item.Name">
                                <ItemTemplate Context="item">
                                    <div class="item-template-box">
                                        <span style="color: @(item.Id == "add-key" ? "green" : item.Id == "edit-key" ? "yellow" : "red");">
                                            @item.Name (@item.Id)
                                        </span>
                                    </div>
                                </ItemTemplate>
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton Items="TemplateCustomItems"
                                            TextFieldSelector="item => item.Name"
                                            KeyFieldSelector="item => item.Id"
                                            IconNameFieldSelector="item => item.Icon"
                                            ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(SplitActionItem item) => TemplateClickedItem = item.Name">
                                <ItemTemplate Context="item">
                                    @if (item.Id == "add-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Add" />
                                            <span style="color: green;">
                                                @item.Name (@item.Id)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Id == "edit-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Edit" />
                                            <span style="color: yellow;">
                                                @item.Name (@item.Id)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Id == "delete-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Delete" />
                                            <span style="color: red;">
                                                @item.Name (@item.Id)
                                            </span>
                                        </div>
                                    }
                                </ItemTemplate>
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @TemplateClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitSplitButton in different sizes" HTMLSourceCode="@example5CustomItemHTMLCode" CSharpSourceCode="@example5CustomItemCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            ButtonSize="BitButtonSize.Small"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            ButtonSize="BitButtonSize.Medium"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            ButtonSize="BitButtonSize.Large"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitSplitButton in different sizes" HTMLSourceCode="@example6CustomItemHTMLCode" CSharpSourceCode="@example6CustomItemCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            Class="custom-btn-sm"
                                            ButtonSize="BitButtonSize.Small"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            Class="custom-btn-md"
                                            ButtonSize="BitButtonSize.Medium"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton Items="BasicCustomItems"
                                            Class="custom-btn-lg"
                                            ButtonSize="BitButtonSize.Large"
                                            TextField="@nameof(SplitActionItem.Name)"
                                            KeyField="@nameof(SplitActionItem.Id)"
                                            IconNameField="@nameof(SplitActionItem.Icon)"
                                            ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(SplitActionItem item) => BasicClickedItem = item.Name" />
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>

        <BitPivotItem HeaderText="Option">
            <ComponentExampleBox Title="Basic SplitButton" HTMLSourceCode="@example1BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example1BitSplitButtonOptionCSharpCode" ExampleId="example1">
                <ExamplePreview>
                    <div class="example-desc">To create a multi button you can use a BitSplitButton component.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Disabled</BitLabel>
                            <BitSplitButton IsEnabled="false"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @BasicClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with IsSticky" HTMLSourceCode="@example2BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example2BitSplitButtonOptionCSharpCode" ExampleId="example2">
                <ExamplePreview>
                    <div class="example-desc">You can first select the button item and then click on it to execute its onclick event.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonOption item) => IsStickyClickedItem = item.Text">
                                <BitSplitButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                <BitSplitButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                <BitSplitButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonOption item) => IsStickyClickedItem = item.Text">
                                <BitSplitButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                <BitSplitButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                <BitSplitButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @IsStickyClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Disabled" HTMLSourceCode="@example3BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example3BitSplitButtonOptionCSharpCode" ExampleId="example3">
                <ExamplePreview>
                    <div class="example-desc">You can disable the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Sticky Primary</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonOption item) => DisabledClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji2" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item D" Key="D" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Basic Standard</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Standard"
                                            OnClick="(BitSplitButtonOption item) => DisabledClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji2" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item D" Key="D" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @DisabledClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="SplitButton with Item Template" HTMLSourceCode="@example4BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example4BitSplitButtonOptionCSharpCode" ExampleId="example4">
                <ExamplePreview>
                    <div class="example-desc">You can customize the button item.</div>
                    <div class="example-content">
                        <div>
                            <BitLabel>Primary</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonOption item) => TemplateClickedItem = item.Text">
                                <ItemTemplate Context="item">
                                    <div class="item-template-box">
                                        <span style="color: @(item.Key == "add-key" ? "green" : item.Key == "edit-key" ? "yellow" : "red");">
                                            @item.Text (@item.Key)
                                        </span>
                                    </div>
                                </ItemTemplate>
                                <ChildContent>
                                    <BitSplitButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                    <BitSplitButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                    <BitSplitButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                                </ChildContent>
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Standard</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Standard"
                                            IsSticky="true"
                                            OnClick="(BitSplitButtonOption item) => TemplateClickedItem = item.Text">
                                <ItemTemplate Context="item">
                                    @if (item.Key == "add-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Add" />
                                            <span style="color: green;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Key == "edit-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Edit" />
                                            <span style="color: yellow;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                    else if (item.Key == "delete-key")
                                    {
                                        <div class="item-template-box">
                                            <BitIcon IconName="BitIconName.Delete" />
                                            <span style="color: red;">
                                                @item.Text (@item.Key)
                                            </span>
                                        </div>
                                    }
                                </ItemTemplate>
                                <ChildContent>
                                    <BitSplitButtonOption Text="Add" Key="add-key" IconName="BitIconName.Add" />
                                    <BitSplitButtonOption Text="Edit" Key="edit-key" IconName="BitIconName.Edit" />
                                    <BitSplitButtonOption Text="Delete" Key="delete-key" IconName="BitIconName.Delete" />
                                </ChildContent>
                            </BitSplitButton>
                        </div>
                    </div>
                    <div class="clicked-item">Clicked item: @TemplateClickedItem</div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="BitSplitButton in different sizes" HTMLSourceCode="@example5BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example5BitSplitButtonOptionCSharpCode" ExampleId="example5">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can get different sizes using the <code>ButtonSize</code> parameter.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            ButtonSize="BitButtonSize.Small"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            ButtonSize="BitButtonSize.Medium"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            ButtonSize="BitButtonSize.Large"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>

            <ComponentExampleBox Title="Customized BitSplitButton in different sizes" HTMLSourceCode="@example6BitSplitButtonOptionHTMLCode" CSharpSourceCode="@example6BitSplitButtonOptionCSharpCode" ExampleId="example6">
                <ExamplePreview>
                    <div class="example-desc">BitSplitButton can be customized easily in different sizes by overriding a certain CSS class.</div>
                    <div class="buttons-container-grid">
                        <div>
                            <BitLabel>Small size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            Class="custom-btn-sm"
                                            ButtonSize="BitButtonSize.Small"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Medium size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            Class="custom-btn-md"
                                            ButtonSize="BitButtonSize.Medium"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                        <div>
                            <BitLabel>Large size</BitLabel>
                            <BitSplitButton ButtonStyle="BitButtonStyle.Primary"
                                            Class="custom-btn-lg"
                                            ButtonSize="BitButtonSize.Large"
                                            OnClick="(BitSplitButtonOption item) => BasicClickedItem = item.Text">
                                <BitSplitButtonOption Text="Item A" Key="A" />
                                <BitSplitButtonOption Text="Item B" Key="B" IconName="BitIconName.Emoji" />
                                <BitSplitButtonOption Text="Item C" Key="C" IconName="BitIconName.Emoji2" />
                            </BitSplitButton>
                        </div>
                    </div>
                </ExamplePreview>
            </ComponentExampleBox>
        </BitPivotItem>
    </BitPivot>
</ComponentDemo>