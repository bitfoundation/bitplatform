@page "/components/choice-group"

<ComponentDemo ComponentName="ChoiceGroup"
               ComponentDescription="ChoiceGroup let people select a single option from two or more choices."
               ComponentParameters="componentParameters"
               ComponentSubParameters="@componentSubParameters">

    <ComponentExampleBox Title="Basic ChoiceGroup" HTMLSourceCode="@example1HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a ChoiceGroup you can use a BitChoiceGroup component</div>
            <BitChoiceGroup Label="Pick one" Options="ChoiceGroupBasicOption" DefaultValue="A" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled" HTMLSourceCode="@example2HtmlCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">you can disable ChoiceGroup or ChoiceGroupOption.</div>
            <div class="chg-box">
                <BitChoiceGroup Label="Disabled ChoiceGroup" Options="ChoiceGroupBasicOption" IsEnabled="false" DefaultValue="A" />
                <BitChoiceGroup Label="ChoiceGroup with Disabled Option" Options="ChoiceGroupWithDisabledOption" DefaultValue="A" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with images" HTMLSourceCode="@example3HtmlCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-desc">
                ChoiceGroup with images also you can set the selected image src for selected mode.
                in addition, image size style and img tag alt attribute are settable.
            </div>
            <BitChoiceGroup Label="Pick one image" Options="ChoiceGroupWithImage" DefaultValue="Bar" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with icons" HTMLSourceCode="@example4HtmlCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">by BitIconName Interface you can select an icon name for showing in your option.</div>
            <BitChoiceGroup Label="Pick one icon" Options="ChoiceGroupWithIcon" DefaultValue="Day" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with LabelTemplate" HTMLSourceCode="@example5HtmlCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-desc">Customize the ChoiceGroup Label content.</div>
            <BitChoiceGroup Options="ChoiceGroupBasicOption" DefaultValue="A">
                <LabelTemplate>
                    <div class="custom-label">
                        Custom label <BitIcon IconName="BitIconName.Filter" />
                    </div>
                </LabelTemplate>
            </BitChoiceGroup>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with Option Templates" HTMLSourceCode="@example6HtmlCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-desc">Customize the ChoiceGroup Option content.</div>
            <div class="chg-box">
                <BitChoiceGroup Label="Option Template" Options="ChoiceGroupWithOptionTemplate" @bind-Value="ChoiceGroupWithOptionTemplateValue">
                    <OptionTemplate Context="option">
                        <div class="custom-option @(ChoiceGroupWithOptionTemplateValue == option.Value ? "selected-option" : string.Empty)">
                            <div class="option-pointer"></div>
                            <BitIcon IconName="@option.IconName.Value" />
                            <span>@option.Text</span>
                        </div>
                    </OptionTemplate>
                </BitChoiceGroup>
                <BitChoiceGroup Label="Option Label Template" Options="ChoiceGroupWithOptionTemplate" @bind-Value="ChoiceGroupWithOptionLabelTemplateValue">
                    <OptionLabelTemplate Context="option">
                        <div style="margin-left: 27px;" class="custom-option @(ChoiceGroupWithOptionLabelTemplateValue == option.Value ? "selected-option" : string.Empty)">
                            <BitIcon IconName="@option.IconName.Value" />
                            <span>@option.Text</span>
                        </div>
                    </OptionLabelTemplate>
                </BitChoiceGroup>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup Binding" HTMLSourceCode="@example7HtmlCode" CSharpSourceCode="@example7CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <div class="chg-box">
                <div>
                    <BitChoiceGroup Label="One-way" Options="ChoiceGroupBasicOption" Value="@ChoiceGroupOneWayValue" />
                    <div class="chg-output">
                        <BitTextField @bind-Value="ChoiceGroupOneWayValue" />
                    </div>
                </div>
                <div>
                    <BitChoiceGroup Label="Two-way" Options="ChoiceGroupBasicOption" @bind-Value="ChoiceGroupTwoWayValue" />
                    <div class="chg-output">
                        <BitTextField @bind-Value="ChoiceGroupTwoWayValue" />
                    </div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with Horizotal LayoutFlow" HTMLSourceCode="@example8HtmlCode" CSharpSourceCode="@example8CSharpCode" ExampleId="example8">
        <ExamplePreview>
            <div class="chg-box column">
                <BitChoiceGroup Label="Basic" Options="ChoiceGroupBasicOption" DefaultValue="A" LayoutFlow="BitLayoutFlow.Horizontal" />
                <BitChoiceGroup Label="Disabled" Options="ChoiceGroupBasicOption" IsEnabled="false" DefaultValue="A" LayoutFlow="BitLayoutFlow.Horizontal" />
                <BitChoiceGroup Label="Image" Options="ChoiceGroupWithImage" DefaultValue="Bar" LayoutFlow="BitLayoutFlow.Horizontal" />
                <BitChoiceGroup Label="Icon" Options="ChoiceGroupWithIcon" DefaultValue="Day" LayoutFlow="BitLayoutFlow.Horizontal" />
                <BitChoiceGroup Options="ChoiceGroupBasicOption" DefaultValue="A" LayoutFlow="BitLayoutFlow.Horizontal">
                    <LabelTemplate>
                        <div class="custom-label">
                            Label Template <BitIcon IconName="BitIconName.Filter" />
                        </div>
                    </LabelTemplate>
                </BitChoiceGroup>
                <BitChoiceGroup Label="Option Template" @bind-Value="@ChoiceGroupLayoutFlowWithOptionTemplateValue"
                                Options="ChoiceGroupWithOptionTemplate"
                                LayoutFlow="BitLayoutFlow.Horizontal">
                    <OptionTemplate Context="option">
                        <div class="custom-option @(ChoiceGroupLayoutFlowWithOptionTemplateValue == option.Value ? "selected-option" : "")">
                            <div class="option-pointer"></div>
                            <BitIcon IconName="@option.IconName.Value" />
                            <span>@option.Text</span>
                        </div>
                    </OptionTemplate>
                </BitChoiceGroup>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="RTL Direction" HTMLSourceCode="@example9HtmlCode" CSharpSourceCode="@example9CSharpCode" ExampleId="example9">
        <ExamplePreview>
            <div class="chg-box column">
                <BitChoiceGroup Label="Basic" Options="ChoiceGroupBasicOption" DefaultValue="A" IsRtl="true" />
                <BitChoiceGroup Label="Disabled" Options="ChoiceGroupBasicOption" IsEnabled="false" DefaultValue="A" IsRtl="true" />
                <BitChoiceGroup Label="Image" Options="ChoiceGroupWithImage" DefaultValue="Bar" LayoutFlow="BitLayoutFlow.Horizontal" IsRtl="true" />
                <BitChoiceGroup Label="Icon" Options="ChoiceGroupWithIcon" DefaultValue="Day" LayoutFlow="BitLayoutFlow.Horizontal" IsRtl="true" />
                <BitChoiceGroup Options="ChoiceGroupBasicOption" DefaultValue="A" LayoutFlow="BitLayoutFlow.Horizontal" IsRtl="true">
                    <LabelTemplate>
                        <div class="custom-label">
                            Label Template <BitIcon IconName="BitIconName.Filter" />
                        </div>
                    </LabelTemplate>
                </BitChoiceGroup>
                <BitChoiceGroup Label="Option Template" @bind-Value="@ChoiceGroupRtlLayoutFlowWithOptionTemplateValue"
                                Options="ChoiceGroupWithOptionTemplate"
                                LayoutFlow="BitLayoutFlow.Horizontal"
                                IsRtl="true">
                    <OptionTemplate Context="option">
                        <div class="custom-option @(ChoiceGroupRtlLayoutFlowWithOptionTemplateValue == option.Value ? "selected-option" : "")">
                            <div class="option-pointer"></div>
                            <BitIcon IconName="@option.IconName.Value" />
                            <span>@option.Text</span>
                        </div>
                    </OptionTemplate>
                </BitChoiceGroup>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup validation" HTMLSourceCode="@example10HtmlCode" CSharpSourceCode="@example10CSharpCode" ExampleId="example10">
        <ExamplePreview>
            <div class="example-desc">ChoiceGroup validation in form (Required pick one)</div>
            @if (string.IsNullOrEmpty(SuccessMessage))
            {
                <EditForm Model="@ValidationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                    <DataAnnotationsValidator />
                    <div class="validation-summary">
                        <ValidationSummary />
                    </div>
                    <div>
                        <BitChoiceGroup Options="ChoiceGroupBasicOption" @bind-Value="ValidationModel.Value" />
                        <ValidationMessage For="@(() => ValidationModel.Value)" />
                    </div>
                    <BitButton Style="margin-top: 10px;" ButtonType="BitButtonType.Submit">Submit</BitButton>
                </EditForm>
            }
            else
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @SuccessMessage
                </BitMessageBar>
            }
            <br />
            <BitButton ButtonStyle="BitButtonStyle.Standard" OnClick="() => { ValidationModel = new(); SuccessMessage=string.Empty; }">Reset</BitButton>
        </ExamplePreview>
    </ComponentExampleBox>

</ComponentDemo>