@page "/components/choice-group"

<ComponentDemo ComponentName="ChoiceGroup"
               ComponentDescription="ChoiceGroup let people select a single option from two or more choices."
               ComponentParameters="componentParameters"
               ComponentSubParameters="@componentSubParameters">

    <ComponentExampleBox Title="Basic ChoiceGroup" HTMLSourceCode="@example1HtmlCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a ChoiceGroup you can use a BitChoiceGroup component</div>
            <BitChoiceGroup Label="Pick one" Options="ChoiceGroupBasicOption" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="Disabled" HTMLSourceCode="@example2HtmlCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">you can disable ChoiceGroup or ChoiceGroupOption.</div>
            <div class="chg-box">
                <BitChoiceGroup Label="Disabled ChoiceGroup" Options="ChoiceGroupBasicOption" IsEnabled="false" />
                <BitChoiceGroup Label="ChoiceGroup with Disabled Option" Options="ChoiceGroupWithDisabledOption" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with images" HTMLSourceCode="@example3HtmlCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-desc">
                ChoiceGroup with images also you can set the selected image src for selected mode.
                in addition, image size style and img tag alt attribute are settable.
            </div>
            <BitChoiceGroup Label="Pick one image" Options="ChoiceGroupWithImage" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with icons" HTMLSourceCode="@example4HtmlCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">by BitIconName Interface you can select an icon name for showing in your option.</div>
            <BitChoiceGroup Label="Pick one icon" Options="ChoiceGroupWithIcon" />
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with LabelTemplate" HTMLSourceCode="@example5HtmlCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="example-desc">Customize the ChoiceGroup Label content.</div>
            <BitChoiceGroup Options="ChoiceGroupBasicOption">
                <LabelTemplate>
                    <div class="custom-label">
                        Custom label <BitIcon IconName="BitIconName.Filter" />
                    </div>
                </LabelTemplate>
            </BitChoiceGroup>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup with OptionTemplate" HTMLSourceCode="@example6HtmlCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            <div class="example-desc">Customize the ChoiceGroup Option content.</div>
            <BitChoiceGroup Label="Pick one" Options="ChoiceGroupWithOptionTemplate" @bind-Value="ChoiceGroupWithOptionTemplateValue" DefaultValue="Day">
                <OptionTemplate Context="option">
                    <div class="custom-option @(ChoiceGroupWithOptionTemplateValue == option.Value ? "selected-option" : "")">
                        <div class="option-pointer"></div>
                        <BitIcon IconName="@option.IconName.Value" />
                        <span>@option.Text</span>
                    </div>
                </OptionTemplate>
            </BitChoiceGroup>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup Binding" HTMLSourceCode="@example7HtmlCode" CSharpSourceCode="@example7CSharpCode" ExampleId="example7">
        <ExamplePreview>
            <div class="chg-box">
                <div>
                    <BitChoiceGroup Label="Two-way Bind" Options="ChoiceGroupBasicOption" @bind-Value="ChoiceGroupBindValue" />
                    <div class="chg-output">Output: <BitTextField @bind-Value="ChoiceGroupBindValue" /></div>
                </div>
                <div>
                    <BitChoiceGroup Label="Bind with OnChange(One-way)" Options="ChoiceGroupBasicOption" OnChange="(option) => ChoiceGroupOnChangeValue = option.Value" />
                    <div class="chg-output">Output: @ChoiceGroupOnChangeValue</div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="ChoiceGroup validation" HTMLSourceCode="@example8HtmlCode" CSharpSourceCode="@example8CSharpCode" ExampleId="example8">
        <ExamplePreview>
            <div class="example-desc">ChoiceGroup validation in form (Required pick one)</div>
            @if (string.IsNullOrEmpty(SuccessMessage))
            {
                <EditForm Model="@ValidationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                    <DataAnnotationsValidator />
                    <div class="validation-summary">
                        <ValidationSummary />
                    </div>
                    <div>
                        <BitChoiceGroup Options="ChoiceGroupBasicOption" @bind-Value="ValidationModel.Value" />
                        <ValidationMessage For="@(() => ValidationModel.Value)" />
                    </div>
                    <BitButton Style="margin-top: 10px;" ButtonType="BitButtonType.Submit">Submit</BitButton>
                </EditForm>
            }
            else
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    @SuccessMessage
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>

</ComponentDemo>