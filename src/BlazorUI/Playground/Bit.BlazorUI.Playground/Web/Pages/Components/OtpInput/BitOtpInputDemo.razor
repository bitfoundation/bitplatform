@page "/components/otp-input"

<ComponentDemo ComponentName="OtpInput"
               ComponentDescription="The OTP input is used for MFA procedure of authenticating users by a one-time password."
               ComponentParameters="@componentParameters"
               EnumParameters="@enumParameters">
    <ComponentExampleBox Title="Basic OtpInput" HTMLSourceCode="@example1HtmlCode" ExampleId="example1">
        <ExamplePreview>
            <div class="otp-input-box">
                <BitLabel>OtpInput</BitLabel>
                <BitOtpInput InputCount="4" @bind-Value="basicOtpInput" />
                <div>Output: [@basicOtpInput]</div>
            </div>
            <div class="otp-input-box">
                <BitLabel>Disabled OtpInput</BitLabel>
                <BitOtpInput InputCount="6" IsEnabled="false" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="OtpInput with AutoFocus" HTMLSourceCode="@example2HtmlCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">The OtpInput will be focused by default in the first render.</div>
            <div class="otp-input-box">
                <BitOtpInput InputCount="4" AutoFocus="true" @bind-Value="autoFocusOtpInput" />
                <div>Output: [@autoFocusOtpInput]</div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="OtpInput with InputType" HTMLSourceCode="@example3HtmlCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="otp-input-box">
                <BitLabel>Text</BitLabel>
                <BitOtpInput InputCount="4" InputType="BitOtpInputType.Text" @bind-Value="textOtpInput" />
                <div>Output: [@textOtpInput]</div>
            </div>
            <div class="otp-input-box">
                <BitLabel>Number</BitLabel>
                <BitOtpInput InputCount="4" InputType="BitOtpInputType.Number" @bind-Value="numberOtpInput" />
                <div>Output: [@numberOtpInput]</div>
            </div>
            <div class="otp-input-box">
                <BitLabel>Password</BitLabel>
                <BitOtpInput InputCount="4" InputType="BitOtpInputType.Password" @bind-Value="passwordOtpInput" />
                <div>Output: [@passwordOtpInput]</div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="OtpInput with Direction" HTMLSourceCode="@example4HtmlCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">You can choose which side OtpInput starts from.</div>
            <div>
                <div class="otp-input-box">
                    <BitLabel>Left to right</BitLabel>
                    <BitOtpInput InputCount="4" Direction="BitOtpInputDirection.LeftToRight" @bind-Value="leftToRightOtpInput" />
                    <div>Output: [@leftToRightOtpInput]</div>
                </div>
                <div class="otp-input-box">
                    <BitLabel>Right to left</BitLabel>
                    <BitOtpInput InputCount="4" Direction="BitOtpInputDirection.RightToLeft" @bind-Value="rightToLeftOtpInput" />
                    <div>Output: [@rightToLeftOtpInput]</div>
                </div>
            </div>
            <div class="vertical-otp-box">
                <div class="otp-input-box">
                    <BitLabel>Top to bottom</BitLabel>
                    <BitOtpInput InputCount="4" Direction="BitOtpInputDirection.TopToBottom" @bind-Value="topToBottomOtpInput" />
                    <div>Output: [@topToBottomOtpInput]</div>
                </div>
                <div class="otp-input-box">
                    <BitLabel>Bottom to top</BitLabel>
                    <BitOtpInput InputCount="4" Direction="BitOtpInputDirection.BottomToTop" @bind-Value="BottomToTopOtpInput" />
                    <div>Output: [@BottomToTopOtpInput]</div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="OtpInput with Two-way binding" HTMLSourceCode="@example5HtmlCode" CSharpSourceCode="@example5CSharpCode" ExampleId="example5">
        <ExamplePreview>
            <div class="otp-input-box">
                <BitOtpInput InputCount="4" @bind-Value="twoWayBindOtpInput" />
            </div>
            <div>
                <BitLabel>Output:</BitLabel>
                <BitTextField @bind-Value="twoWayBindOtpInput" />
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="OtpInput with form validation" HTMLSourceCode="@example6HtmlCode" CSharpSourceCode="@example6CSharpCode" ExampleId="example6">
        <ExamplePreview>
            @if (formIsValidSubmit is false)
            {
                <EditForm Model="validationOtpInputModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                    <DataAnnotationsValidator />
                    <div class="otp-input-box">
                        <BitOtpInput InputCount="6" @bind-Value="validationOtpInputModel.OtpValue" />
                        <ValidationMessage For="() => validationOtpInputModel.OtpValue" />
                        <div>Output: [@validationOtpInputModel.OtpValue]</div>
                    </div>
                    <BitButton ButtonType="BitButtonType.Submit">
                        Submit
                    </BitButton>
                </EditForm>
            }
            else
            {
                <BitMessageBar MessageBarType="BitMessageBarType.Success" IsMultiline="false">
                    The form is valid to submit successfully.
                </BitMessageBar>
            }
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>