@page "/components/split-button-list"

<ComponentDemo ComponentName="SplitButtonList"
               ComponentDescription="Buttons give people a way to trigger an action. They’re typically found in forms, dialog panels, and dialogs. Some buttons are specialized for particular tasks, such as navigation, repeated actions, or presenting menus."
               ComponentParameters="componentParameters"
               EnumParameters="enumParameters">

    <ComponentExampleBox Title="Basic SplitButtonList" HTMLSourceCode="@example1HTMLCode" CSharpSourceCode="@example1CSharpCode" ExampleId="example1">
        <ExamplePreview>
            <div class="example-desc">To create a multi button you can use a BitSplitButton component.</div>
            <div class="example-content">
                <div>
                    <BitLabel>Primary</BitLabel>
                    <BitSplitButtonList Items="example1Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        ButtonStyle="BitButtonStyle.Primary"
                                        OnClick="(SplitButtonActionItem item) => BasicPrimarySelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @BasicPrimarySelectedItem</div>
                </div>
                <div>
                    <BitLabel>Standard</BitLabel>
                    <BitSplitButtonList Items="example1Items"
                                        KeyFieldSelector="item => item.Id"
                                        TextFieldSelector="item => item.Name"
                                        IconNameFieldSelector="item => item.Icon"
                                        ButtonStyle="BitButtonStyle.Standard"
                                        OnClick="(SplitButtonActionItem item) => BasicStandardSelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @BasicStandardSelectedItem</div>
                </div>
                <div>
                    <BitLabel>Disabled</BitLabel>
                    <BitSplitButtonList Items="example1Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        IsEnabled="false" />
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="SplitButtonList with IsSticky" HTMLSourceCode="@example2HTMLCode" CSharpSourceCode="@example2CSharpCode" ExampleId="example2">
        <ExamplePreview>
            <div class="example-desc">You can first select the button item and then click on it to execute its onclick event.</div>
            <div class="example-content">
                <div>
                    <BitLabel>Primary</BitLabel>
                    <BitSplitButtonList Items="example2Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        ButtonStyle="BitButtonStyle.Primary"
                                        IsSticky="true"
                                        OnClick="(SplitButtonActionItem item) => StickyPrimarySelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @StickyPrimarySelectedItem</div>
                </div>
                <div>
                    <BitLabel>Standard</BitLabel>
                    <BitSplitButtonList Items="example2Items"
                                        KeyFieldSelector="item => item.Id"
                                        TextFieldSelector="item => item.Name"
                                        IconNameFieldSelector="item => item.Icon"
                                        ButtonStyle="BitButtonStyle.Standard"
                                        IsSticky="true"
                                        OnClick="(SplitButtonActionItem item) => StickyStandardSelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @StickyStandardSelectedItem</div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="SplitButtonList with Item Disabled" HTMLSourceCode="@example3HTMLCode" CSharpSourceCode="@example3CSharpCode" ExampleId="example3">
        <ExamplePreview>
            <div class="example-desc">You can disable the button item.</div>
            <div class="example-content">
                <div>
                    <BitLabel>Sticky Primary</BitLabel>
                    <BitSplitButtonList Items="example3Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        ButtonStyle="BitButtonStyle.Primary"
                                        IsSticky="true"
                                        OnClick="(SplitButtonActionItem item) => DisabledPrimarySelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @DisabledPrimarySelectedItem</div>
                </div>
                <div>
                    <BitLabel>Basic Standard</BitLabel>
                    <BitSplitButtonList Items="example3Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        ButtonStyle="BitButtonStyle.Standard"
                                        OnClick="(SplitButtonActionItem item) => DisabledStandardSelectedItem = item.Name" />
                    <div class="selected-item">Clicked item: @DisabledStandardSelectedItem</div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>

    <ComponentExampleBox Title="SplitButtonList with ItemTemplate" HTMLSourceCode="@example4HTMLCode" CSharpSourceCode="@example4CSharpCode" ExampleId="example4">
        <ExamplePreview>
            <div class="example-desc">You can customize the button item.</div>
            <div class="example-content">
                <div>
                    <BitLabel>Primary</BitLabel>
                    <BitSplitButtonList Items="example4Items"
                                        KeyField="@nameof(SplitButtonActionItem.Id)"
                                        TextField="@nameof(SplitButtonActionItem.Name)"
                                        IconNameField="@nameof(SplitButtonActionItem.Icon)"
                                        ButtonStyle="BitButtonStyle.Primary"
                                        IsSticky="true"
                                        OnClick="(SplitButtonActionItem item) => TemplatePrimarySelectedItem = item.Name">
                        <ItemTemplate Context="item">
                            <div class="item-template-box">
                                <span style="color: @(item.Id == "add-key" ? "green" : item.Id == "edit-key" ? "yellow" : "red");">
                                    @item.Name (@item.Id)
                                </span>
                            </div>
                        </ItemTemplate>
                    </BitSplitButtonList>
                    <div class="selected-item">Clicked item: @TemplatePrimarySelectedItem</div>
                </div>
                <div>
                    <BitLabel>Standard</BitLabel>
                    <BitSplitButtonList Items="example4Items"
                                        KeyFieldSelector="item => item.Id"
                                        TextFieldSelector="item => item.Name"
                                        IconNameFieldSelector="item => item.Icon"
                                        ButtonStyle="BitButtonStyle.Standard"
                                        IsSticky="true"
                                        OnClick="(SplitButtonActionItem item) => TemplateStandardSelectedItem = item.Name">
                        <ItemTemplate Context="item">
                            @if (item.Id == "add-key")
                            {
                                <div class="item-template-box">
                                    <BitIcon IconName="BitIconName.Add" />
                                    <span style="color: green;">
                                        @item.Name (@item.Id)
                                    </span>
                                </div>
                            }
                            else if (item.Id == "edit-key")
                            {
                                <div class="item-template-box">
                                    <BitIcon IconName="BitIconName.Edit" />
                                    <span style="color: yellow;">
                                        @item.Name (@item.Id)
                                    </span>
                                </div>
                            }
                            else if (item.Id == "delete-key")
                            {
                                <div class="item-template-box">
                                    <BitIcon IconName="BitIconName.Delete" />
                                    <span style="color: red;">
                                        @item.Name (@item.Id)
                                    </span>
                                </div>
                            }
                        </ItemTemplate>
                    </BitSplitButtonList>
                    <div class="selected-item">Clicked item: @TemplateStandardSelectedItem</div>
                </div>
            </div>
        </ExamplePreview>
    </ComponentExampleBox>
</ComponentDemo>