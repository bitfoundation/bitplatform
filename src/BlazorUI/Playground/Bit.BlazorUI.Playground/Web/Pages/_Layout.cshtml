@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@namespace Bit.BlazorUI.Playground.Web.Pages

@using Bit.BlazorUI.Playground.Web
@using Bit.BlazorUI.Playground.Shared;
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Configuration

@inject IHttpContextAccessor ContextAccessor
@inject IConfiguration Configuration

@{
    var googleTagContainerID = @Configuration.GetSection("GoogleTagManager")["ContainerID"];

    var isBlazorServer = BlazorModeDetector.Current.IsBlazorServer();
    RenderMode renderMode = isBlazorServer ? RenderMode.ServerPrerendered : RenderMode.WebAssemblyPrerendered;

    if (renderMode is RenderMode.ServerPrerendered or RenderMode.WebAssemblyPrerendered)
    {
        var shouldRenderStaticMode = ContextAccessor?.HttpContext?.Request.ShouldRenderStaticMode();

        if (shouldRenderStaticMode is not null && shouldRenderStaticMode.Value)
        {
            renderMode = RenderMode.Static;
        }
    }
}

@*
    Unlike most client-side Blazor projects (WASM Blazor), we use .cshtml instead of .html index file.
    This provides PreRendering(SSR) to the client blazor projects and the ability to use "asp-append-version".
    Note that these files(_Host.cshtml & _Layout.cshtml) are being used for both "Client" and "Server" blazor.
*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Bit's Blazor UI components are native, easy-to-customize, and work seamlessly in all Blazor modes (WASM, Server, Hybrid, pre-rendering), saving you time and making development enjoyable." />
    <base href="~/" />
    <link rel="icon" href="~/favicon.ico" type="image/x-icon" asp-append-version="true">
    <link media="all" rel="stylesheet" href="_content/Bit.BlazorUI/styles/bit.blazorui.min.css" asp-append-version="true" />
    <link media="all" rel="stylesheet" href="Bit.BlazorUI.Playground.Web.styles.css" asp-append-version="true" />
    <style>
        * {
            font-family: "Segoe UI";
            box-sizing: border-box;
        }

        html, body {
            -webkit-font-smoothing: antialiased;
            -webkit-tap-highlight-color: transparent;
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            color: #323130;
            font-size: 1rem;
            line-height: 1.5;
            letter-spacing: 0;
            font-weight: 400;
            scroll-margin-top: calc(56px + 32px);
            background-color: #fff;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism.min.css" />
    <component type="typeof(HeadOutlet)" render-mode="@renderMode" />
</head>
<body>

    @RenderBody()

    @if (renderMode is not RenderMode.Static)
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/prism.min.js" data-manual></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-csharp.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-cshtml.min.js"></script>
        <script src="_content/Bit.BlazorUI/scripts/bit.blazorui.min.js" asp-append-version="true"></script>
        <script src="_content/Bit.BlazorUI.Charts/scripts/bit.blazorui.charts.min.js" asp-append-version="true"></script>
        <script src="~/scripts/app.js" asp-append-version="true"></script>

        @if (isBlazorServer)
        {
            <script src="_framework/blazor.server.js" asp-append-version="true"></script>
        }
        else
        {
            <script src="_framework/blazor.webassembly.js" asp-append-version="true"></script>
        }
    }
    <persist-component-state />

    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', '@googleTagContainerID');</script>
    <!-- End Google Tag Manager -->
</body>
</html>