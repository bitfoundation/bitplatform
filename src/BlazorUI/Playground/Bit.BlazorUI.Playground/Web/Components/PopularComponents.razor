<section class="main-container">
    <div class="content-container">
        <h2 class="main-title">Most popular components</h2>
        <div class="component-list">
            @foreach (var com in Components)
            {
                <button class="component-row @(com.Name == SelectedComponent.Name ? "component-row--active" : null)" @onclick="(() => SelectComponent(com))">
                    <div class="component-icon">
                        <PopularComponentsIcon ComponentName="@com.Name"></PopularComponentsIcon>
                    </div>
                    <div class="component-info-container">
                        <div class="component-name">@com.Name</div>
                        <div class="component-desc">@com.Description</div>
                        <a class="component-link" href="@com.Url">More about @com.Name</a>
                    </div>
                </button>
            }
        </div>
        <BitCarousel Class="component-carousel" ShowNextPrev=false>
            @foreach (var com in Components)
            {
                <BitCarouselItem Style="width: 100%">
                    <button class="component-row @(com.Name == SelectedComponent.Name ? "component-row--active" : null)" @onclick="(() => SelectComponent(com))">
                        <div class="component-icon">
                            <PopularComponentsIcon ComponentName="@com.Name"></PopularComponentsIcon>
                        </div>
                        <div class="component-info-container">
                            <div class="component-name">@com.Name</div>
                            <div class="component-desc">@com.Description</div>
                            <a class="component-link" href="@com.Url">More about @com.Name</a>
                        </div>
                    </button>
                </BitCarouselItem>
            }
        </BitCarousel>
    </div>

    <div class="content-container">
        <div class="example-preview">
            <div class="white-box">
                @if (SelectedComponent.Name == "ColorPicker")
                {
                    <BitColorPicker ShowPreview="true" @bind-Alpha="@Alpha" @bind-Color="@ColorRgb">Default ColorPicker</BitColorPicker>
                }
                else if (SelectedComponent.Name == "DatePicker")
                {
                    <BitDatePicker Style="width: 300px"
                                   ShowWeekNumbers="true">
                    </BitDatePicker>
                }
                else if (SelectedComponent.Name == "FileUpload")
                {
                    <BitFileUpload IsMultiSelect="true"
                               Label="Select files"
                               AutoUploadEnabled="true"
                               UploadUrl="@UploadUrl"
                               RemoveUrl="@RemoveUrl"
                               Style="flex-grow:1; max-width:none;">
                    </BitFileUpload>
                }
                else if (SelectedComponent.Name == "DropDown")
                {
                    <BitDropDown Label="Multi-select uncontrolled"
                             Items="GetDropdownItems()"
                             Placeholder="Select options"
                             IsMultiSelect="true"
                             Style="width: 290px; margin-bottom: 20px;">
                    </BitDropDown>
                }
                else if (SelectedComponent.Name == "Nav (TreeList)")
                {
                    <BitNav Style="width: 208px;
                       height: 350px;
                       box-sizing: border-box;
                       border: 1px solid #eee;
                       overflow-y: auto;"
                        NavLinkItems="BasicNavLinks"
                        AriaLabel="Nav basic example"
                        SelectedKey="key3">
                    </BitNav>
                }
            </div>
        </div>
        <div class="example-code">
            @if (SelectedComponent.Name == "ColorPicker")
            {
                <pre class="code"><code class="language-cshtml">&ltBitColorPicker ShowPreview="true"
                &#64;bind-Alpha="&#64;Alpha"
                &#64;bind-Color="&#64;ColorRgb">
    Default ColorPicker
&lt/BitColorPicker></code>
<code class="language-csharp">
&#64;code {
    private string ColorRgb = "rgb(0,101,239)";
    private double Alpha = 1;
}</code></pre>
            }
            else if (SelectedComponent.Name == "DatePicker")
            {
                <pre class="code"><code class="language-cshtml">&ltBitDatePicker Style="width: 300px"
               ShowWeekNumbers="true">
&lt/BitDatePicker></code></pre>
            }
            else if (SelectedComponent.Name == "FileUpload")
            {
                <pre class="code"><code class="language-cshtml">&ltBitFileUpload Label="Select files"
               IsMultiSelect="true"    
               UploadUrl="&#64;UploadUrl"
               RemoveUrl="&#64;RemoveUrl"
               Style="flex-grow:1; max-width:none;">
&lt/BitFileUpload></code>
<code class="language-csharp">
&#64;code {
    private string UploadUrl;
    private string RemoveUrl;
}</code></pre>
            }
            else if (SelectedComponent.Name == "DropDown")
            {
                <pre class="code"><code class="language-cshtml">&ltBitDropDown Label="Multi-select uncontrolled"
             Items="GetDropdownItems()"
             Placeholder="Select options"
             &#64;bind-SelectedMultipleKeys="ControlledSelectedMultipleKeys"
             IsMultiSelect="true"
             Style="width:290px; margin:20px 0 20px 0">
&lt/BitDropDown></code>
<code class="language-csharp">
&#64;code {
    private List&ltstring> ControlledSelectedMultipleKeys = new List&ltstring>() { "Apple", "Banana", "Grape" };
    private List&ltBitDropDownItem> GetDropdownItems()
    {
        List&ltBitDropDownItem> items = new();

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Header,
            Text = "Fruits"
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Normal,
            Text = "Apple",
            Value = "f-app"
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Normal,
            Text = "Orange",
            Value = "f-ora",
            IsEnabled = false
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Normal,
            Text = "Banana",
            Value = "f-ban",
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Divider,
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Header,
            Text = "Vegetables"
        });

        items.Add(new BitDropDownItem()
        {
            ItemType = BitDropDownItemType.Normal,
            Text = "Broccoli",
            Value = "v-bro",
        });

        return items;
    }
}</code></pre>
            }
            else if (SelectedComponent.Name == "Nav (TreeList)")
            {
                <pre class="code"><code class="language-cshtml">&ltBitNav Style="width: 208px;
               height: 350px;
               box-sizing: border-box;
               border: 1px solid #eee;
               overflow-y: auto;"
        NavLinkItems="BasicNavLinks"
        AriaLabel="Nav basic example"
        SelectedKey="key3">
&lt/BitNav></code>
<code class="language-csharp">
&#64;code {
    private readonly List&ltBitNavLinkItem> BasicNavLinks = new()
    {
        new BitNavLinkItem
        {
            Name = "Home",
            Url = "http://example.com",
            ExpandAriaLabel = "Expand Home section",
            CollapseAriaLabel = "Collapse Home section",
            IsExpanded = true,
            Links = new List&ltBitNavLinkItem>
            {
                    new BitNavLinkItem { Name = "Activity", Url = "http://msn.com", Key = "key1", Target="_blank" },
                    new BitNavLinkItem { Name = "MSN", Url = "http://msn.com", Key = "key2", IsEnabled = false, Target = "_blank" }
            }
        },
        new BitNavLinkItem { Name = "Documents", Url = "http://example.com", Key = "key3", Target = "_blank", IsExpanded = true },
        new BitNavLinkItem { Name = "Pages", Url = "http://msn.com", Key = "key4", Target = "_parent" },
        new BitNavLinkItem { Name = "Notebook", Url = "http://msn.com", Key = "key5", IsEnabled = false },
        new BitNavLinkItem { Name = "Communication and Media", Url = "http://msn.com", Key = "key6", Target = "_top" },
        new BitNavLinkItem { Name = "News", Title = "News", Url = "http://msn.com", Key = "key7", Icon = "News", Target = "_self" },
    };
}</code></pre>
            }
        </div>
    </div>
</section>