@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader AssemblyLoader

<PageTitle>Bit's Native Blazor UI Components</PageTitle>
<CascadingValue Value="Visual.Fluent" IsFixed="true">
    <CascadingValue Value="Theme.Light" IsFixed="true">
        <Router AppAssembly="@typeof(MainLayout).Assembly"
                AdditionalAssemblies="@lazyLoadedAssemblies"
                OnNavigateAsync="@OnNavigateAsync">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </Found>
            <NotFound>
                <NotFoundComponent />
            </NotFound>
        </Router>
    </CascadingValue>
</CascadingValue>

@code {
    private List<Assembly> lazyLoadedAssemblies = new(); // new List<Assembly> { Assembly.Load("Bit.BlazorUI") };

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path.Contains("chart"))
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Newtonsoft.Json.dll" });
                lazyLoadedAssemblies.AddRange(assemblies);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: {Message}", ex.Message);
        }
    }
}