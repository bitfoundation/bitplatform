<PageTitle>Bit's Native Blazor UI Components</PageTitle>
<CascadingValue Value="Visual.Fluent" IsFixed="true">
    <CascadingValue Value="Theme.Light" IsFixed="true">
        <Router AppAssembly="@typeof(MainLayout).Assembly"
                AdditionalAssemblies="@lazyLoadedAssemblies"
                OnNavigateAsync="@OnNavigateAsync">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </Found>
            <NotFound>
                <NotFoundComponent />
            </NotFound>
            <Navigating>
                <LayoutView Layout="@typeof(MainLayout)">
                    <LoadingComponent />
                </LayoutView>
            </Navigating>
        </Router>
    </CascadingValue>
</CascadingValue>

@code {
    private List<Assembly> lazyLoadedAssemblies = new();

#if BlazorWebAssembly && !Maui
    [Inject] private Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader { get; set; }
#endif

    private async Task OnNavigateAsync(NavigationContext args)
    {
#if BlazorWebAssembly && !Maui
        if (args.Path.Contains("chart"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Newtonsoft.Json.dll", "System.Private.Xml.dll", "System.Data.Common.dll" });
            lazyLoadedAssemblies.AddRange(assemblies);
        }
#endif
    }
}