@namespace Bit.BlazorUI
@inherits BitComponentBase
@typeparam TItem

@if (IsOpen)
{
    <div class="bit-npn-ovl" @onclick=CloseMenu></div>
}

<div @ref="RootElement" @attributes="HtmlAttributes"
     id="@_Id"
     role="dialog"
     style="@StyleBuilder.Value"
     class="@ClassBuilder.Value @($"{(IsToggled ? "bit-npn-tgl" : "")}")"
     dir="@Dir?.ToString().ToLower()">
    <div class="bit-npn-cnt">
        @if (HeaderTemplate is not null)
        {
            @HeaderTemplate
        }
        else
        {
            <div class="bit-npn-hdr">
                @if (ImageUrl.HasValue())
                {
                    <img src="@ImageUrl" class="bit-npn-img" style="@(IsToggled ? "display:none" : "")" />
                }
                
                <div class="bit-npn-spc" style="@(IsToggled ? "display:none" : "")" />

                <BitButton IconOnly FixedColor
                           Class="bit-npn-tbn"
                           Size="BitSize.Large"
                           OnClick="ToggleNavPanel"
                           Variant="BitVariant.Text"
                           IconName="ColumnRightTwoThirds"
                           Color="BitColor.TertiaryBackground" />
            </div>
        }

        <BitSearchBox @ref="_searchBoxRef"
                      Underlined Immediate DebounceTime="500"
                      OnChange="SearchNavItems"
                      Style="@(IsToggled ? "display:none" : "")"
                      Styles="@(new() { Root="width:100%", InputContainer="width:100%" })" />

        @if (IsToggled)
        {
            <BitButton IconOnly
                       FixedColor
                       IconName="Search"
                       Class="toggle-btn"
                       Size="BitSize.Large"
                       OnClick="ToggleForSearch"
                       Variant="BitVariant.Text"
                       Color="BitColor.TertiaryBackground" />
        }

        @if (_filteredNavItems.Any() is false)
        {
            if (IsToggled is false)
            {
                <BitText>Nothing found!</BitText>
            }
        }
        else
        {
            <BitNav @ref=_bitNavRef
                    FullWidth
                    IconOnly="IsToggled"
                    Items="_filteredNavItems"
                    Accent="BitColor.SecondaryBackground"
                    DefaultSelectedItem="_filteredNavItems[0]"
                    OnItemClick="(TItem item) => HandleNavItemClick(item)"
                    Styles="@(new() { SelectedItemContainer = "background-color: var(--bit-clr-bg-sec-active)" })" />
        }

        <BitSpacer />

        @if(FooterTemplate is not null)
        {
            @FooterTemplate
        }
    </div>
</div>