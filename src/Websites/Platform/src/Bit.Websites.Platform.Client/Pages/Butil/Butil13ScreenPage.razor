@page "/butil/screen"
@inherits AppComponentBase
@inject Bit.Butil.Screen screen

<PageOutlet Url="butil/screen"
            Title="Screen - Butil"
            Description="Screen class of the bit Butil" />

<div class="page-container">
    <BitTypography Variant="BitTypographyVariant.H3" Gutter>Screen</BitTypography>
    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        How to use the Screen class of the bit Butil?
    </BitTypography>
    <br />

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Usage</BitTypography>
        <div class="section-card-txt">
            To use the browser screen features you need to inject the Bit.Butil.Screen class and use it like this:
<pre class="code-box">
@@inject Bit.Butil.Screen screen

@@code {
    var screenWidth = await screen.GetWidth();
}</pre>
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Methods</BitTypography>
        <div class="section-card-txt">
            <br />
            <b>GetAvailableHeight</b>: <br />
            Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/availHeight" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getAvailableHeightExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetAvailableHeight">GetAvailableHeight</BitButton>
                            <br />
                            <br />
                            <div>Available height: @availableHeight</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>GetAvailableWidth</b>: <br />
            Returns the amount of horizontal space in pixels available to the window
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/availWidth" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getAvailableWidthExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetAvailableWidth">GetAvailableWidth</BitButton>
                            <br />
                            <br />
                            <div>Available width: @availableWidth</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>GetColorDepth</b>: <br />
            Returns the color depth of the screen
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/colorDepth" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getColorDepthExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetColorDepth">GetColorDepth</BitButton>
                            <br />
                            <br />
                            <div>Color depth: @colorDepth</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>GetHeight</b>: <br />
            Returns the height of the screen in pixels
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/height" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getHeightExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetHeight">GetHeight</BitButton>
                            <br />
                            <br />
                            <div>Height: @height</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>IsExtended</b>: <br />
            Returns true if the user's device has multiple screens, and false if not
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/isExtended" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getIsExtendedExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetIsExtended">GetIsExtended</BitButton>
                            <br />
                            <br />
                            <div>Is extended: @isExtended</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>GetPixelDepth</b>: <br />
            Gets the bit depth of the screen
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/pixelDepth" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getPixelDepthExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetPixelDepth">GetPixelDepth</BitButton>
                            <br />
                            <br />
                            <div>Pixel depth: @pixelDepth</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>GetWidth</b>: <br />
            Returns the width of the screen
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/width" target="_blank">MDN</a>).
            <br /><br />
            <BitAccordion Title="Sample">
                <ChildContent>
                    <BitPivot>
                        <BitPivotItem HeaderText="Code">
                            <pre class="code-box">
                                @getWidthExampleCode
                            </pre>
                        </BitPivotItem>
                        <BitPivotItem HeaderText="Result">
                            <br />
                            <BitButton OnClick="@GetWidth">GetWidth</BitButton>
                            <br />
                            <br />
                            <div>Width: @width</div>
                            <br />
                        </BitPivotItem>
                    </BitPivot>
                </ChildContent>
            </BitAccordion>
            <br /><br />
            
            <b>AddChange</b>, <b>RemoveChange</b>: <br />
            Fired on a specific screen when it changes in some way — width or height, available width or height, color depth, or orientation
            (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/change_event" target="_blank">MDN</a>).
        </div>
    </section>
</div>

<NavigationButtons Prev="Location" PrevUrl="/butil/location" Next="Cookie" NextUrl="/butil/cookie" />

@code {
    private string? availableHeight;

    private string? availableWidth;

    private string? colorDepth;

    private string? height;

    private string? isExtended;

    private string? pixelDepth;

    private string? width;


    private async Task GetAvailableHeight()
    {
        var result = await screen.GetAvailableHeight();
        availableHeight = result.ToString();
    }

    private async Task GetAvailableWidth()
    {
        var result = await screen.GetAvailableWidth();
        availableWidth = result.ToString();
    }

    private async Task GetColorDepth()
    {
        var result = await screen.GetColorDepth();
        colorDepth = result.ToString();
    }

    private async Task GetHeight()
    {
        var result = await screen.GetHeight();
        height = result.ToString();
    }

    private async Task GetIsExtended()
    {
        var result = await screen.IsExtended();
        isExtended = result.ToString();
    }

    private async Task GetPixelDepth()
    {
        var result = await screen.GetPixelDepth();
        pixelDepth = result.ToString();
    }

    private async Task GetWidth()
    {
        var result = await screen.GetWidth();
        width = result.ToString();
    }


    private string getAvailableHeightExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetAvailableHeight"">GetAvailableHeight</BitButton>

<div>Available height: @availableHeight</div>

@code {
    private string? availableHeight;

    private async Task GetAvailableHeight()
    {
        var result = await screen.GetAvailableHeight();
        availableHeight = result.ToString();
    }
}";
    private string getAvailableWidthExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetAvailableWidth"">GetAvailableWidth</BitButton>

<div>Available width: @availableWidth</div>

@code {
    private string? availableWidth;

    private async Task GetAvailableWidth()
    {
        var result = await screen.GetAvailableWidth();
        availableWidth = result.ToString();
    }
}";
    private string getColorDepthExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetColorDepth"">GetColorDepth</BitButton>

<div>Color depth: @colorDepth</div>

@code {
    private string? colorDepth;

    private async Task GetColorDepth()
    {
        var result = await screen.GetColorDepth();
        colorDepth = result.ToString();
    }
}";
    private string getHeightExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetHeight"">GetHeight</BitButton>

<div>Height: @height</div>

@code {
    private string? height;

    private async Task GetHeight()
    {
        var result = await screen.GetHeight();
        height = result.ToString();
    }
}";
    private string getIsExtendedExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetIsExtended"">GetIsExtended</BitButton>

<div>Is extended: @IsExtended</div>

@code {
    private string? isExtended;

    private async Task GetIsExtended()
    {
        var result = await screen.IsExtended();
        isExtended = result.ToString();
    }
}";
    private string getPixelDepthExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetPixelDepth"">GetPixelDepth</BitButton>

<div>Pixel depth: @PixelDepth</div>

@code {
    private string? pixelDepth;

    private async Task GetPixelDepth()
    {
        var result = await screen.GetPixelDepth();
        pixelDepth = result.ToString();
    }
}";
    private string getWidthExampleCode =
@"@inject Bit.Butil.Screen screen

<BitButton OnClick=""@GetWidth"">GetWidth</BitButton>

<div>Width: @width</div>

@code {
    private string? width;

    private async Task GetWidth()
    {
        var result = await screen.GetWidth();
        width = result.ToString();
    }
}";
}