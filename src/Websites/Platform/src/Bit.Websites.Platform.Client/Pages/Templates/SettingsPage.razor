@page "/todo-template/settings"
@page "/admin-panel/settings"
@page "/templates/settings"
@inherits AppComponentBase

<PageOutlet Url="templates/settings"
            Title="Settings - Templates"
            Description="settings of the project templates of the bit platform" />

<div class="page-container">
    <BitTypography Variant="BitTypographyVariant.H3" Gutter>Settings</BitTypography>
    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        Other configurations available in the bit project templates are as follows:
    </BitTypography>
    <br />

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Authentication policies</BitTypography>
        <div class="section-card-txt">
            bit project templates provide authentication and implement the SignUp and SignIn user interfaces.
            You can change the default settings of the Identity Settings according to your needs;
            These settings are in the <b>appsettings.json</b> file in the Api project.
        </div>
        <pre class="code-box">"IdentitySettings": {
    "PasswordRequireDigit": "false",
    "PasswordRequiredLength": "6",
    "PasswordRequireNonAlphanumeric": "false",
    "PasswordRequireUppercase": "false",
    "PasswordRequireLowercase": "false",
    "RequireUniqueEmail": "true",
    "ConfirmationEmailResendDelay": "0.00:02:00", //Format: D.HH:mm:nn
    "ResetPasswordEmailResendDelay": "0.00:02:00" //Format: D.HH:mm:nn
}</pre>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Identity settings</BitTypography>
        <div class="section-card-txt">
            bit project templates use bearer token authentication and you can change these settings.
            You can find these settings in the <b>appsettings.json</b> file in the Api project.
        </div>
        <pre class="code-box">"IdentitySettings": {
    "IdentityCertificatePassword": "P@ssw0rdP@ssw0rd",
    "Issuer": "Boilerplate",
    "Audience": "Boilerplate",
    "NotBeforeMinutes": "0",
    "ExpirationMinutes": "1440"
}</pre>
        <div class="section-card-txt">
            <b>Note</b>: IdentityCertificatePassword referring to the password of the
            <b>IdentityCertificate.pfx</b> file in the Api project that used as certificate file
            for store the public key and etc for validating incoming JWT tokens.
            To create PFX file run the following commands in PowerShell with the desired password and file path for your pfx file.
        </div>
        <pre class="code-box">$cert = New-SelfSignedCertificate -CertStoreLocation Cert:\LocalMachine\My -Subject "IdentityServerCN" -Provider "Microsoft Strong Cryptographic Provider" -HashAlgorithm "SHA512" -NotAfter (Get-Date).AddYears(5)
Export-PfxCertificate -cert ('Cert:\LocalMachine\My\' + $cert.thumbprint) -FilePath IdentityCertificate.pfx -Password (ConvertTo-SecureString -String "P@ssw0rdP@ssw0rd" -Force -AsPlainText)</pre>
        <b>Note</b>: Replace P@ssw0rdP@ssw0rd with strong password and use that as IdentityCertificatePassword's value in appsettings.json
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Email settings</BitTypography>
        <div class="section-card-txt">
            bit project templates use <a href="https://github.com/lukencode/FluentEmail" target="_blank">FluentEmail</a> to send emails.
            You can change the SMTP provider settings in the <b>appsettings.json</b> file in the Api project.
            <br />
            In dev environment, bit saves the sent emails as a <b>.eml</b> file in the
            <b>src/Server/Api/bin/Debug/net8.0/sent-emails</b> path, and developers can easily view them in any <a href="https://msgeml.com/" target="_blank">eml viewer</a>.
            <br />
            You can also use any test smtp server such as <a href="https://ethereal.email/" target="_blank">ethereal.email</a> or any production ready smtp server such as
            <a href="https://docs.sendgrid.com/for-developers/sending-email/getting-started-smtp" target="_blank">SendGrid</a>
        </div>
        <pre class="code-box">"EmailSettings": {
    "Host": "smtp.ethereal.email",
    "Port": "587",
    "DefaultFromEmail": "alva.schiller52@ethereal.email",
    "DefaultFromName": "Alva Schiller",
    "UserName": "alva.schiller52@ethereal.email",
    "Password": "4PyGY8cDQ8mvu6h7qB"
}</pre>
        <div class="section-card-txt">
            <b>Note</b>: You can find email templates used for email confirmation and reset password in the <b>Resources</b> directory of the Api project.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>User profile image settings</BitTypography>
        <div class="section-card-txt">
            bit project templates save user profile image in <b>Attachments\Profiles</b> directory
            of Environment.SpecialFolder.ApplicationData as default, you can change this path as you need from the <b>appsettings.json</b> file in the Api project.
        </div>
        <div class="code-box">"UserProfileImagesDir": "Attachments/Profiles/"</div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Health check settings</BitTypography>
        <div class="section-card-txt">
            bit project templates support Health Checks for reporting the health of app infrastructure components.
            Health checks APIs are exposed as an HTTP endpoint. You can change the settings of this feature in the
            <b>appsettings.json</b> file in the Api project.
        </div>
        <pre class="code-box">"HealthCheckSettings": {
    "EnableHealthChecks": true
}</pre>
        <div class="section-card-txt">
            <b>Note</b>: You can find Health Checks dashboard from <b>https://localhost:5011/healthchecks-ui</b> by default.
        </div>
    </section>
</div>

<NavigationButtons Prev="Platform integration" PrevUrl="/templates/platform-integration" Next="Exception handling" NextUrl="/templates/exception-handling" />