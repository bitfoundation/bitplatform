@page "/todo-template/deployment-type"
@page "/admin-panel/deployment-type"
@page "/templates/deployment-type"
@inherits AppComponentBase

<PageOutlet Url="templates/deployment-type"
            Title="Deployment type - Templates"
            Description="deployment types of the project templates of the bit platform" />

<div class="page-container">
    <BitTypography Variant="BitTypographyVariant.H3" Gutter>Deployment type</BitTypography>
    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        bit project templates support multiple deployment type for their web applications.
    </BitTypography>
    <br />

    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        Supported deployment types are:
    </BitTypography>
    <br />

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Spa (Default configuration)</BitTypography>
        <div class="section-card-txt">
            It's referring to a Typical <a href="https://en.wikipedia.org/wiki/Single-page_application" title="PWA" rel="nofollow">Single Page Application</a> (SPA) without pre-rendering.
            <br />
            <b>Note</b>: We'd recommend using next options for production and use Spa only for development / debugging.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>SpaPrerendered</BitTypography>
        <div class="section-card-txt">
            <a href="https://www.educative.io/edpresso/what-is-server-side-rendering" rel="nofollow">Server-side rendering</a> (SSR),
            is the ability of an application to contribute by displaying the web-page on the server instead of rendering it in the browser.
            Server-side sends a fully rendered page to the client; Blazor pre-renders page and sends it as a static page, then later the page becomes an interactive Blazor app.
            This behavior is intended to serve pages quickly to search engines with time-based positioning.
            Statically prerender the component along with a marker to indicate the component should later be rendered interactively by the Blazor app. It improve SEO.
            <br />
            It's referring to a Typical Spa with pre-rendering.
            <br />
            <b>Demo</b>: <a href="https://bitplatform.dev" target="_blank">bitplatform.dev</a>
            <br />
            In order to enable prerendering, simply set <i>PrerenderEnabled</i> in Core/Services/AppRenderMode.cs to <i>true</i>
            <br />
            <div class="code-box">public static readonly bool PrerenderEnabled = true;</div>
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Pwa</BitTypography>
        <div class="section-card-txt">
            A Blazor WebAssembly app built as a <a href="https://en.wikipedia.org/wiki/Progressive_web_application" title="PWA" rel="nofollow">Progressive Web App</a>
            (PWA) uses modern browser APIs to enable many of the capabilities of a native client app, such as working offline, running in its own app window,
            launching from the host's operating system, receiving push notifications, and automatically updating in the background.
            <br />
            <b>Demo</b>: <a href="https://adminpanel.bitplatform.dev" target="_blank">adminpanel.bitplatform.dev</a>
            <br />
            In order to enable pwa, simply set <i>PwaEnabled</i> in Directory.Build.props to <i>true</i>
            <br />
            <div class="code-box">&lt;PwaEnabled&gt;true&lt;/PwaEnabled&gt;</div>
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>PwaPrerendered</BitTypography>
        <div class="section-card-txt">
            <a href="https://www.educative.io/edpresso/what-is-server-side-rendering" rel="nofollow">Server-side rendering</a> (SSR),
            is the ability of an application to contribute by displaying the web-page on the server instead of rendering it in the browser.
            Server-side sends a fully rendered page to the client; Blazor pre-renders page and sends it as a static page, then later the page becomes an interactive Blazor app.
            This behavior is intended to serve pages quickly to search engines with time-based positioning.
            Statically prerender the component along with a marker to indicate the component should later be rendered interactively by the Blazor app. It improve SEO.
            <br />
            It's referring to a Typical Pwa with pre-rendering.
            <br />
            <b>Demo</b>: <a href="https://todo.bitplatform.dev" target="_blank">todo.bitplatform.dev</a>
            <br />
            In order to enable pwa pre-render, simply enable both pwa and pre-render.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>PrerenderedOnly</BitTypography>
        <div class="section-card-txt">
            Statically renders the component with the specified parameters. It's recommended when the target is building a static page like a landing page.
            <br />
            In order to enable pre-render only, simply remove <i>@("@")rendermode=renderMode</i> from Server/Components/App.razor file.
        </div>
    </section>
</div>

<NavigationButtons Prev="Blazor app models" PrevUrl="/templates/app-models" Next="Cache mechanism" NextUrl="/templates/cache-mechanism" />