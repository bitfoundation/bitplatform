@page "/admin-panel/deployment-type"
@inherits AppComponentBase

<PageOutlet Url="admin-panel/deployment-type"
            Title="Deployment type - AdminPanel"
            Description="deployment types of the AdminPanel template of the bit platform" />

<div class="page-container">
    <BitTypography Variant="BitTypographyVariant.H6" Gutter>AdminPanel</BitTypography>
    <BitTypography Variant="BitTypographyVariant.H3" Gutter>Deployment type</BitTypography>
    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        bit AdminPanel supports multiple deployment type for its web application.
    </BitTypography>
    <br />

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Change WebAppDeploymentType</BitTypography>
        <div class="section-card-txt">
            To switch to each mode, easily change value of <b>@("<WebAppDeploymentType>")</b> on <b>Directory.build.props</b> file in <b>Solution Items</b> root folder.
        </div>
        <div class="code-box">@("<WebAppDeploymentType>Spa</WebAppDeploymentType>")</div>
    </section>

    <br />
    <BitTypography Variant="BitTypographyVariant.Subtitle1" Gutter>
        Supported deployment types are:
    </BitTypography>
    <br />

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Spa</BitTypography>
        <div class="section-card-txt">
            It's referring to a Typical <a href="https://en.wikipedia.org/wiki/Single-page_application" title="PWA" rel="nofollow">Single Page Application</a> (SPA) without pre-rendering.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>SpaPrerendered</BitTypography>
        <div class="section-card-txt">
            <a href="https://www.educative.io/edpresso/what-is-server-side-rendering" rel="nofollow">Server-side rendering</a> (SSR), 
            is the ability of an application to contribute by displaying the web-page on the server instead of rendering it in the browser. 
            Server-side sends a fully rendered page to the client; Blazor pre-renders page and sends it as a static page, then later the page becomes an interactive Blazor app. 
            This behavior is intended to serve pages quickly to search engines with time-based positioning.
            Statically prerender the component along with a marker to indicate the component should later be rendered interactively by the Blazor app. It improve SEO.
            <br />
            It's referring to a Typical spa with pre-rendering.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>Pwa</BitTypography>
        <div class="section-card-txt">
            A Blazor WebAssembly app built as a <a href="https://en.wikipedia.org/wiki/Progressive_web_application" title="Pwa" rel="nofollow">Progressive Web App</a> 
            (Pwa) uses modern browser APIs to enable many of the capabilities of a native client app, such as working offline, running in its own app window, 
            launching from the host's operating system, receiving push notifications, and automatically updating in the background.
            <br />
            <b>Note</b>: ASP.NET Blazor supports <b>Pwa</b> by default, but its update mechanism is unreliable due Pwa nature, <b>Bit</b> 
            allows you to handle it When a new version wants to be updated.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>PwaPrerendered</BitTypography>
        <div class="section-card-txt">
            <a href="https://www.educative.io/edpresso/what-is-server-side-rendering" rel="nofollow">Server-side rendering</a> (SSR), 
            is the ability of an application to contribute by displaying the web-page on the server instead of rendering it in the browser. 
            Server-side sends a fully rendered page to the client; Blazor pre-renders page and sends it as a static page, then later the page becomes an interactive Blazor app. 
            This behavior is intended to serve pages quickly to search engines with time-based positioning.
            Statically prerender the component along with a marker to indicate the component should later be rendered interactively by the Blazor app. It improve SEO.
            <br />
            It's referring to a Typical single pwa with pre-rendering.
        </div>
    </section>

    <section class="section-card">
        <BitTypography Variant="BitTypographyVariant.H5" Gutter>PrerenderedOnly</BitTypography>
        <div class="section-card-txt">
            Static Statically render the component with the specified parameters. It's recommended when the target is building a static page like a landing page.
        </div>
    </section>
</div>

<NavigationButtons Prev="Hosting models" PrevUrl="/admin-panel/hosting-models" Next="Settings" NextUrl="/admin-panel/settings" />