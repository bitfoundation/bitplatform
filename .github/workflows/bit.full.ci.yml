name: bit platform full CI

on:
  workflow_dispatch:

env:
  ConnectionStrings__SqlServerConnectionString: 'Data Source=localhost; Initial Catalog=BoilerplateTestDb;Application Name=Boilerplate;TrustServerCertificate=True;User Id=sa;Password=P@ssw0rdP@ssw0rd;'
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true

jobs:

  build:
    name: build and test
    runs-on: ubuntu-24.04

    steps:

    - name: Checkout source code
      uses: actions/checkout@v5

    - name: Setup .NET 10
      uses: actions/setup-dotnet@v5
      with:
        global-json-file: src/global.json

    - name: Setup .NET 9
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          9.0.x

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          8.0.x

    - uses: actions/setup-node@v4
      with:
        node-version: 23

    - name: Uninstall Bit.Boilerplate if running on ACT
      if: ${{ env.ACT }}
      run: dotnet new uninstall Bit.Boilerplate

    - name: Prepare environment
      run: |
        cd src/Templates/Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg && cd ../../../
        dotnet workload install maui-tizen maui-android wasm-tools wasm-tools-net9 wasm-tools-net8
        ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools"

    - name: Run tests usign Sqlite
      id: run-test-sqlite
      run: |
        dotnet new bit-bp --name SimpleTest --database Sqlite
        cd SimpleTest/src/Server/SimpleTest.Server.Api/
        dotnet build
        dotnet tool restore
        dotnet ef migrations add Initial --verbose
        dotnet ef database update
        cd ../../Tests
        dotnet build
        pwsh bin/Debug/net10.0/playwright.ps1 install --with-deps
        dotnet test --logger GitHubActions --filter "${{ env.SIMPLE_TEST_FILTER }}"

    - name: Upload Tests Artifact
      uses: actions/upload-artifact@v4.4.1
      if: ${{ !env.ACT && failure() && steps.run-test-sqlite.conclusion == 'failure' }}
      with:
        name: tests-artifact
        path: ./SimpleTest/src/Tests/TestResults
        retention-days: 14

    - name: Install sql server
      uses: potatoqualitee/mssqlsuite@v1.7
      with:
        install: sqlengine
        sa-password: P@ssw0rdP@ssw0rd
        show-log: true

    - name: Run tests usign SQL Server
      id: run-test-sqlserver
      run: |
        dotnet new bit-bp --name TestSqlServer --database SqlServer --module Sales --signalR
        cd TestSqlServer/src/Server/TestSqlServer.Server.Api/
        dotnet build
        dotnet tool restore
        dotnet ef migrations add Initial --verbose
        dotnet ef database update
        cd ../../Tests
        dotnet build
        pwsh bin/Debug/net10.0/playwright.ps1 install --with-deps
        dotnet test --logger GitHubActions --filter "${{ env.SIMPLE_TEST_FILTER }}"

    - name: Upload Tests Artifact
      uses: actions/upload-artifact@v4.4.1
      if: ${{ !env.ACT && failure() && steps.run-test-sqlserver.conclusion == 'failure' }}
      with:
        name: tests-artifact
        path: ./TestSqlServer/src/Tests/TestResults
        retention-days: 14

    - name: Build PostgreSQL and Other database options
      run: |
        dotnet new bit-bp --name TestPostgreSQL --database PostgreSQL --module Sales --signalR
        cd TestPostgreSQL/src/Server/TestPostgreSQL.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestPostgreSQL"
        dotnet new bit-bp --name TestOther --database Other --sample --sentry
        cd TestOther/src/Server/TestOther.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestOther"

    - name: Build file storage options
      run: |
        dotnet new bit-bp --name TestLocal --filesStorage Local --appInsights
        cd TestLocal/src/Server/TestLocal.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestLocal"
        dotnet new bit-bp --name TestAzureBlobStorage --filesStorage AzureBlobStorage --captcha reCaptcha  --notification
        cd TestAzureBlobStorage/src/Server/TestAzureBlobStorage.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestAzureBlobStorage"

    - name: Build backend setup options
      run: |
        dotnet new bit-bp --name TestStandalone --api Standalone
        cd TestStandalone/src/Server/TestStandalone.Server.Api/
        dotnet build
        cd ../
        cd TestStandalone.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestStandalone"
        dotnet new bit-bp --name TestIntegrated --api Integrated
        cd TestIntegrated/src/Server/TestIntegrated.Server.Web/
        dotnet build
        cd ../../../../
        rm -r "TestIntegrated"

    - name: Build sample configuration 1
      run: |
        dotnet new bit-bp --name TestProject --database SqlServer --filesStorage AzureBlobStorage --api Integrated --captcha reCaptcha --pipeline Azure --module Admin --offlineDb --appInsights --sentry --signalR --notification --cloudflare --ads --aspire
        dotnet build TestProject/TestProject.sln -p:InvariantGlobalization=false -p:Environment=Staging
        rm -r "TestProject"

    - name: Build sample configuration 2
      run: |
        dotnet new bit-bp --name TestProject2 --database Other --filesStorage S3 --api Standalone --captcha None --pipeline None --module None --offlineDb false --appInsights false --sentry false --signalR false --notification false --cloudflare false --ads false --aspire true
        dotnet build TestProject2/TestProject2.slnx -p:InvariantGlobalization=true -p:Environment=Development
        rm -r "TestProject2"

    - name: Create projects from BlazorEmpty project template with different parameters
      run: |
        cd src/Templates/BlazorEmpty && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.BlazorEmpty.0.0.0.nupkg && cd ../../../
        dotnet new bit-empty --name AutoGlobal --interactivity Auto --all-interactive
        dotnet new bit-empty --name SsrPerPage --interactivity None

    - name: Build blazor empty based projects
      run: |
        dotnet build AutoGlobal/AutoGlobal.sln
        dotnet build SsrPerPage/SsrPerPage.csproj