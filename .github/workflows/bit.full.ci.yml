name: bit platform full CI

on:
  workflow_dispatch:

jobs:

  build:
    name: build and test
    runs-on: ubuntu-22.04

    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: src/global.json

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Bit.Boilerplate from local source
      run: |
        cd src/Templates/Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg && cd ../../../

    - name: Release build todo sample + Blazor server + sqlite database
      run: |
        dotnet workload install maui-tizen maui-android wasm-tools wasm-experimental
        dotnet new bit-bp --name TodoBPBlazorServerSqlite --database sqlite --sample todo --pipeline other
        cd TodoBPBlazorServerSqlite/src/TodoBPBlazorServerSqlite.Server/
        dotnet tool restore
        dotnet ef migrations add InitialMigration
        dotnet ef database update
        cd ../../../
        dotnet build TodoBPBlazorServerSqlite/TodoBPBlazorServerSqlite.sln -p:Configuration=Release -p:RunAOTCompilation=false

    - name: Release build empty sample + Blazor hybrid + no database
      run: |
        dotnet new bit-bp --name EmptyBPBlazorHybrid --database other --sample none --pipeline azure
        dotnet build EmptyBPBlazorHybrid/EmptyBPBlazorHybrid.sln -p:Configuration=Release -p:RunAOTCompilation=false

    - name: Release build admin panel sample + Blazor webassembly + SqlServer database
      run: |
        dotnet new bit-bp --name AdminBPBlazorWasmSqlServer --database sqlserver --sample admin --pipeline github
        dotnet build AdminBPBlazorWasmSqlServer/AdminBPBlazorWasmSqlServer.sln -p:Configuration=Release

    - name: Release build bit blazor ui + bit blazor ui demo (blazor server) + butil + bswu + bup + code analyzers + source generators
      run: dotnet build src/Bit-CI-release.sln -c Release

    - name: Release build careers, platform, sales websites
      run: |
        dotnet build -c Release src/Websites/Platform/Bit.Websites.Platform.sln
        dotnet build -c Release src/Websites/Careers/Bit.Websites.Careers.sln
        dotnet build -c Release src/Websites/Sales/Bit.Websites.Sales.sln

    - name: Run bit blazor ui tests
      run: dotnet test src/BlazorUI/Bit.BlazorUI.Tests/Bit.BlazorUI.Tests.csproj -c Release

    - name: Release build bit blazor ui demo - Blazor hybrid
      run: dotnet build src/BlazorUI/Bit.BlazorUI.sln -p:Configuration=Release -p:RunAOTCompilation=false

    - name: Release build bit blazor ui demo - Blazor webassembly - Pwa prerendered
      run: |
        sed -i 's/Microsoft.NET.Sdk.Web/Microsoft.NET.Sdk.BlazorWebAssembly/g' src/BlazorUI/Demo/Client/Web/Bit.BlazorUI.Demo.Client.Web.csproj
        dotnet build src/BlazorUI/Bit.BlazorUI.sln -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="PwaPrerendered" -p:Configuration=Release -p:RunAOTCompilation=false

    - name: Create projects from BlazorEmpty project template with different parameters
      run: |
        cd src/Templates/BlazorEmpty && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.BlazorEmpty.0.0.0.nupkg && cd ../../../
        dotnet new bit-empty --name AutoGlobal --interactivity Auto --all-interactive
        dotnet new bit-empty --name SsrPerPage --interactivity None

    - name: Release build blazor empty based projects
      run: |
        dotnet build AutoGlobal/AutoGlobal.sln -p:Configuration=Release
        dotnet build SsrPerPage/SsrPerPage.csproj -p:Configuration=Release