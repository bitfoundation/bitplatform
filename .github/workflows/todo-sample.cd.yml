name: Todo Sample CD

# Project templates come equipped with CI/CD for both Azure DevOps and GitHub, providing you with a hassle-free way to get started with your new project. It is important to note that you should not depend on the contents of this file. More info at https://bitplatform.dev/templates/dev-ops

env:
  API_SERVER_ADDRESS: 'https://todo.bitplatform.dev/'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build_api_blazor:
    name: build api + blazor web
    runs-on: ubuntu-22.04

    steps:
    
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: src/Templates/Boilerplate/Bit.Boilerplate/global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Create project from Boilerplate
      run: |
        cd src/Templates/Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg
        cd ../../../ && dotnet new bit-bp --name TodoSample --database SqlServer --sample Todo --appInsights

    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'TodoSample/src/Client/TodoSample.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}
        ApplicationInsights.ConnectionString: ${{ secrets.APPLICATION_INSIGHTS_CONNECTION_STRING }}

    - name: Install wasm
      run:  cd src && dotnet workload install wasm-tools wasm-experimental

    - name: Configure app render mode
      run: |
          sed -i 's/public static readonly bool PrerenderEnabled = false;/public static readonly bool PrerenderEnabled = true;/g' TodoSample/src/Client/TodoSample.Client.Core/Services/AppRenderMode.cs
          sed -i 's/Auto;/BlazorWebAssembly;/g' TodoSample/src/Client/TodoSample.Client.Core/Services/AppRenderMode.cs

    - name: Changes for static-todo.bitplatform.dev - Part 1
      run:  sed -i 's/http:\/\/localhost:4030/https:\/\/static-todo.bitplatform.dev/g' TodoSample/src/TodoSample.Server/Program.Middlewares.cs

    - name: Generate CSS/JS files
      run: dotnet build TodoSample/src/Client/TodoSample.Client.Core/TodoSample.Client.Core.csproj -t:InstallNodejsDependencies,BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore

    - name: Publish
      run: dotnet publish TodoSample/src/TodoSample.Server/TodoSample.Server.csproj -c Release -p:PwaEnabled=true --self-contained -r linux-x64 -o ${{env.DOTNET_ROOT}}/server -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}"

    - name: Upload server artifact
      uses: actions/upload-artifact@v4
      with:
        name: server-bundle
        path: ${{env.DOTNET_ROOT}}/server

    - name: Changes for static-todo.bitplatform.dev - Part 2
      run:  sed -i 's/public static readonly bool PrerenderEnabled = true;/public static readonly bool PrerenderEnabled = false;/g' TodoSample/src/Client/TodoSample.Client.Core/Services/AppRenderMode.cs

    - name: Configure bswup
      run: |
          sed -i 's/self.noPrerenderQuery/\/\/ self.noPrerenderQuery/g' TodoSample/src/Client/TodoSample.Client.Web/wwwroot/service-worker.js
          sed -i 's/self.isPassive = self.disablePassiveFirstBoot = true;/self.isPassive = self.disablePassiveFirstBoot = false;/g' TodoSample/src/Client/TodoSample.Client.Web/wwwroot/service-worker.js

    - name: Publish static todo
      run: dotnet publish TodoSample/src/Client/TodoSample.Client.Web/TodoSample.Client.Web.csproj -c Release -p:BlazorWebAssemblyStandalone=true -o ${{env.DOTNET_ROOT}}/static

    - name: Upload static artifact
      uses: actions/upload-artifact@v4
      with:
        name: static-bundle
        path: ${{env.DOTNET_ROOT}}/static

  deploy_api_blazor:
    name: deploy api + blazor
    needs: build_api_blazor
    runs-on: ubuntu-22.04
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:

      - name: Retrieve server bundle
        uses: actions/download-artifact@v4
        with:
          name: server-bundle

      - name: Delete IdentityCertificate.pfx
        run: |
            rm IdentityCertificate.pfx

      - name: Extract identity certificate from env
        uses: timheuer/base64-to-file@v1.2
        with:
            fileDir: './'
            fileName: 'IdentityCertificate.pfx'
            encodedString: ${{ secrets.API_IDENTITY_CERTIFICATE_FILE_BASE64 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bit-todo'
          slot-name: 'production'
          publish-profile: ${{ secrets.TODO_AZURE_APP_SERVICE_PUBLISH_PROFILE }}
          package: .

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.BITPLATFORM_DEV_CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  build_blazor_hybrid_windows:
    name: build blazor hybrid (windows)
    runs-on: windows-2022
  
    steps:
     
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: src\Templates\Boilerplate\Bit.Boilerplate\global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Create project from Boilerplate
      run: |
        cd src\Templates\Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg
        cd ..\..\..\ && dotnet new bit-bp --name TodoSample --database SqlServer --sample Todo --windows --appInsights
  
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'TodoSample\src\Client\TodoSample.Client.Core\appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}
        WindowsUpdateSettings.FilesUrl: https://windows-todo.bitplatform.dev
        ApplicationInsights.ConnectionString: ${{ secrets.APPLICATION_INSIGHTS_CONNECTION_STRING }}
  
    - name: Generate CSS/JS files
      run: dotnet build TodoSample\src\Client\TodoSample.Client.Core\TodoSample.Client.Core.csproj -t:InstallNodejsDependencies,BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore

    - name: Publish
      run: |
          cd TodoSample\src\Client\TodoSample.Client.Windows\
          dotnet publish TodoSample.Client.Windows.csproj -c Release -o .\bin\publish-arm64 -r win-arm64 -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}"
          ren .\bin\publish-arm64\TodoSample.Client.Windows.exe TodoSample.Client.Windows-arm64.exe
          dotnet publish TodoSample.Client.Windows.csproj -c Release -o .\bin\publish-x86 -r win-x86 -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}"
          ren .\bin\publish-x86\TodoSample.Client.Windows.exe TodoSample.Client.Windows-x86.exe
          dotnet publish TodoSample.Client.Windows.csproj -c Release -o .\bin\publish-x64 -r win-x64 -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}"
          ren .\bin\publish-x64\TodoSample.Client.Windows.exe TodoSample.Client.Windows-x64.exe
          dotnet publish TodoSample.Client.Windows.csproj -c Release -o .\bin\publish -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}"
          del .\bin\publish\TodoSample.Client.Windows.exe
          echo D | xcopy .\bin\publish-arm64 .\publish-result /s /e /h
          echo A | xcopy .\bin\publish-x86 .\publish-result /s /e /h
          echo A | xcopy .\bin\publish-x64 .\publish-result /s /e /h
          echo A | xcopy .\bin\publish .\publish-result /s /e /h
          dotnet tool restore
          dotnet vpk pack -u TodoSample.Client.Windows -v "${{ vars.APPLICATION_DISPLAY_VERSION }}" -p .\publish-result -e TodoSample.Client.Windows-x86.exe -r win-x86 --framework net8.0.4-x86-desktop,webview2 --icon .\wwwroot\favicon.ico --packTitle TodoSample
  
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: win-exe-bundle
        path: TodoSample\src\Client\TodoSample.Client.Windows\Releases
  
  build_blazor_hybrid_android:
    name: build blazor hybrid (android)
    runs-on: ubuntu-22.04
  
    steps:
     
    - name: Checkout source code
      uses: actions/checkout@v4
     
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: src/Templates/Boilerplate/Bit.Boilerplate/global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Create project from Boilerplate
      run: |
        cd src/Templates/Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg
        cd ../../../ && dotnet new bit-bp --name TodoSample --database SqlServer --sample Todo --appInsights
  
    - name: Extract Android signing key from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './TodoSample/src/Client/TodoSample.Client.Maui/'
          fileName: 'TodoSample.keystore'
          encodedString: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE_BASE64 }}
  
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'TodoSample/src/Client/TodoSample.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}
        ApplicationInsights.ConnectionString: ${{ secrets.APPLICATION_INSIGHTS_CONNECTION_STRING }}
        
    - name: Set android universal link
      run:  sed -i 's/bp.bitplatform.dev/todo.bitplatform.dev/g' TodoSample/src/Client/TodoSample.Client.Maui/Platforms/Android/MainActivity.cs

    - name: Install maui
      run: cd src && dotnet workload install maui-android

    - name: Install Android Sdk platform tools
      run: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools"
  
    - name: Delete App Icon
      run: rm TodoSample/src/Client/TodoSample.Client.Maui/Resources/AppIcon/appicon.svg

    - name: Extract App Icon from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './TodoSample/src/Client/TodoSample.Client.Maui/Resources/AppIcon/'
          fileName: 'appicon.svg'
          encodedString: ${{ vars.TODO_ICON }}

    - name: Delete App Splash Screen
      run: rm TodoSample/src/Client/TodoSample.Client.Maui/Resources/Splash/splash.svg

    - name: Extract App Splash Screen from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './TodoSample/src/Client/TodoSample.Client.Maui/Resources/Splash/'
          fileName: 'splash.svg'
          encodedString: ${{ vars.TODO_SPLASH_SCREEN }}

    - name: Generate CSS/JS files
      run: |
          dotnet build TodoSample/src/Client/TodoSample.Client.Core/TodoSample.Client.Core.csproj -t:InstallNodejsDependencies,BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore
          dotnet build TodoSample/src/Client/TodoSample.Client.Maui/TodoSample.Client.Maui.csproj -t:BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore
  
    - name: Build aab
      run: dotnet build TodoSample/src/Client/TodoSample.Client.Maui/TodoSample.Client.Maui.csproj -c Release -p:AndroidPackageFormat=aab -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="TodoSample.keystore" -p:AndroidSigningKeyAlias=bitplatform -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -p:ApplicationDisplayVersion="${{ vars.APPLICATION_DISPLAY_VERSION }}" -p:ApplicationVersion="${{ vars.APPLICATION_VERSION }}" -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" -p:ApplicationTitle="TodoSample" -p:ApplicationId="com.bitplatform.Todo.Template" -f net8.0-android
  
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-bundle
        path: TodoSample/src/Client/TodoSample.Client.Maui/bin/Release/net8.0-android/*-Signed.*
        
  build_blazor_hybrid_ios:
    name: build blazor hybrid (iOS-macOS)
    runs-on: macos-14
  
    steps:
     
    - name: Checkout source code
      uses: actions/checkout@v4
     
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: src/Templates/Boilerplate/Bit.Boilerplate/global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - uses: maxim-lobanov/setup-xcode@v1.6
      with:
        xcode-version: '15.3'

    - name: Create project from Boilerplate
      run: |
        cd src/Templates/Boilerplate && dotnet build -c Release
        dotnet pack -c Release -o . -p:ReleaseVersion=0.0.0 -p:PackageVersion=0.0.0
        dotnet new install Bit.Boilerplate.0.0.0.nupkg
        cd ../../../ && dotnet new bit-bp --name TodoSample --database SqlServer --sample Todo --appInsights
      
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'TodoSample/src/Client/TodoSample.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}
        ApplicationInsights.ConnectionString: ${{ secrets.APPLICATION_INSIGHTS_CONNECTION_STRING }}
        
    - name: Set iOS universal link
      run:  brew install gnu-sed && gsed -i 's/bp.bitplatform.dev/todo.bitplatform.dev/g' TodoSample/src/Client/TodoSample.Client.Maui/Platforms/iOS/Entitlements.plist

    - name: Install maui
      run: cd src && dotnet workload install maui
  
    - name: Extract iOS code signing certificate from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './'
          fileName: 'DistributionCert.p12'
          encodedString: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_BASE64 }}

    - name: Import Code-Signing Certificates
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-filepath: './DistributionCert.p12'
        p12-password: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_PASSWORD }}

    - name: Download Apple Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v3
      with:
        bundle-id: 'com.bitplatform.Todo.Template'
        issuer-id: ${{ secrets.APPSTORE_API_KEY_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_KEY_PRIVATE_KEY }}

    - name: Delete App Icon
      run: rm TodoSample/src/Client/TodoSample.Client.Maui/Resources/AppIcon/appicon.svg

    - name: Extract App Icon from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './TodoSample/src/Client/TodoSample.Client.Maui/Resources/AppIcon/'
          fileName: 'appicon.svg'
          encodedString: ${{ vars.TODO_ICON }}

    - name: Delete App Splash Screen
      run: rm TodoSample/src/Client/TodoSample.Client.Maui/Resources/Splash/splash.svg

    - name: Extract App Splash Screen from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './TodoSample/src/Client/TodoSample.Client.Maui/Resources/Splash/'
          fileName: 'splash.svg'
          encodedString: ${{ vars.TODO_SPLASH_SCREEN }}

    - name: Generate CSS/JS files
      run: |
          dotnet build TodoSample/src/Client/TodoSample.Client.Core/TodoSample.Client.Core.csproj -t:InstallNodejsDependencies,BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore
          dotnet build TodoSample/src/Client/TodoSample.Client.Maui/TodoSample.Client.Maui.csproj -t:BeforeBuildTasks -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" --no-restore
  
    - name: Build ipa
      run: dotnet publish TodoSample/src/Client/TodoSample.Client.Maui/TodoSample.Client.Maui.csproj -p:RuntimeIdentifier=ios-arm64 -c Release -p:ArchiveOnBuild=true -p:CodesignKey="iPhone Distribution" -p:CodesignProvision="TodoTemplate" -p:ApplicationDisplayVersion="${{ vars.APPLICATION_DISPLAY_VERSION }}" -p:ApplicationVersion="${{ vars.APPLICATION_VERSION }}" -p:Version="${{ vars.APPLICATION_DISPLAY_VERSION}}" -p:ApplicationTitle="Todo" -p:ApplicationId="com.bitplatform.Todo.Template" -f net8.0-ios

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-bundle
        path: TodoSample/src/Client/TodoSample.Client.Maui/bin/release/net8.0-ios/ios-arm64/publish/*.ipa
